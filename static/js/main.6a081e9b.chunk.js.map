{"version":3,"sources":["assets/icons/filter.svg","assets/icons/messageRed.svg","assets/icons/matchesArrow.svg","assets/icons/chatGrey.svg","assets/icons/peopleGrey.svg","assets/icons/gridGrey.svg","assets/icons/eventsGrey.svg","assets/icons/userGrey.svg","assets/icons/gridRed.svg","assets/icons/userRed.svg","assets/defaultEventImage.jpg","assets/preloader.svg","assets/icons/eventAnnotationLeftButton.svg","assets/icons/eventAnnotationRightButton.svg","Components/Header.js","Components/MatchedScrollList.js","Components/CommonEventsList.js","redux/reducers/events-reducer.js","redux/reducers/user-reducer.js","redux/reducers/people-reducer.js","redux/reducers/panel-reducer.js","redux/reducers/matches-reducer.js","redux/reducers/combine.js","redux/store/store.js","redux/actions/events-actions.js","Api/Utils.js","Api/Events.js","services/Events.js","redux/actions/matches-actions.js","Components/MatchedList.js","redux/actions/panel-actions.js","Components/BottomButton.js","Components/Bottom.js","Api/Matches.js","services/Matches.js","panels/Matches.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/EventEndView.js","Components/View/PeopleEndView.js","Components/View/CardView.js","Components/Card.js","Components/Deck.js","Api/Ratings.js","services/Ratings.js","panels/Events.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","redux/actions/people-actions.js","Api/People.js","services/People.js","panels/People.js","redux/actions/user-actions.js","Api/Auth.js","services/Auth.js","AppCulter.js","index.js","assets/icons/chatRed.svg","assets/icons/eventsRed.svg","assets/icons/peopleRed.svg"],"names":["module","exports","Header","panelTitle","panelId","className","src","IconFilter","alt","MatchedScrollList","list","map","person","key","photo_400_orig","first_name","count_common_events","CommonEventsList","events","event","images","image","start_date","place","short_title","initialState","page","size","index","state","action","type","concat","user","people","Math","trunc","length","receivedPeople","peopleCount","shiftIndex","newPeople","slice","active","panels","panel","matches","eventsPageSize","receivedMatches","matchesCount","newMatches","otherUserId","newEvents","matchedUserId","findIndex","match","id","updatedMatches","commonEvents","reducers","combineReducers","eventsState","eventsReducer","userState","userReducer","peopleState","peopleReducer","panelState","panelReducer","matchesState","matchesReducer","store","createStore","setIndex","isValidResponse","response","status","fetchEventsRequest","userId","categories","is_personal","a","async","url","buildUrl","getEventsByUrl","fetchCommonEventsRequest","buildUrlForCommonEvents","fetch","method","json","eventsJson","content","forEach","item","imageItem","config","images_url","categoriesParameter","join","fetchEvents","isReload","requestState","getState","updateEventsState","updateCommonEventsState","dispatch","updateCommonEvents","load","MatchedList","openEvents","e","display","currentTarget","parentElement","children","style","isHidden","matchedUser","find","fetchCommonEvents","parseInt","dataset","classList","add","remove","toVKChat","document","location","href","userid","onClick","data-userid","chatActive","data-id","matchesArrow","changePanel","BottomButton","activePanel","activeImage","disabledImage","text","data-to","Bottom","useSelector","onChangePanelClick","to","personal","userActive","userDisabled","grid","gridActive","gridDisabled","eventsActive","eventsDisabled","peopleActive","peopleDisabled","chatDisabled","fetchMatchesCall","newMatchesJson","setUpEmptyCommonEvents","fetchMatches","updateStore","Matches","useEffect","getElementById","paddingTop","body","setProperty","EventInformationView","isDateProvided","date","time","week","day","start_time","Date","toLocaleDateString","weekday","month","PersonInformationView","horizontalShift","labelOpacity","min","abs","labelStyles","left","opacity","right","EventEndView","peopleIcon","chatIcon","PeopleEndView","eventsIcon","CardView","hasMargin","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEnd","hasOwnProperty","isEventEnd","isEventCard","imageSource","defaultImage","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","Deck","cards","loadCards","setRateBy","isEventDeck","topCardIndex","bottomCardIndex","endCard","setEventRateCall","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRateCall","user_id","setEventRate","getUserId","setUserRate","Events","go","useState","isLoading","setIsLoading","loadEvents","undefined","then","spinner","Personal","photo_200","last_name","GridEventList","data","handleClick","Number","product","data-name","name","data-index","Grid","categoriesId","setCategoriesId","onModal","modal","visibility","onChangeFilterItemState","isactive","splice","indexOf","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","console","log","target","data-isactive","fetchPeopleCall","newPeopleJson","fetchPeople","People","loadPeople","setAuthorizedUser","authorizeRequest","authorize","AppCulter","is_dev","settings","connect","sendPromise","fetchedUser","fetchData","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.6a081e9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filter.84137ab6.svg\";","module.exports = __webpack_public_path__ + \"static/media/messageRed.5d681222.svg\";","module.exports = __webpack_public_path__ + \"static/media/matchesArrow.24f07fbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatGrey.01b80399.svg\";","module.exports = __webpack_public_path__ + \"static/media/peopleGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventsGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/defaultEventImage.ca717777.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3c9d0119.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationLeftButton.abf4fa91.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationRightButton.0a756658.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nimport IconFilter from '../assets/icons/filter.svg';\n\nconst Header = ({panelId}) => {\n    let panelTitle = \"\";\n    switch (panelId) {\n        case \"personal\": panelTitle = \"Профиль\"; break;\n        case \"grid\": panelTitle = \"События\"; break;\n        case \"events\": panelTitle = \"События\"; break;\n        case \"people\": panelTitle = \"Люди\"; break;\n        case \"matches\": panelTitle = \"Диалоги\"; break;\n    }\n    return (\n        <div className=\"App-header\">\n            <div className=\"App-header-content\">\n                <p>{\"Culter\"}</p>\n            </div>\n            <div className=\"App-header-panelTitle\">\n                <p>{panelTitle}</p>\n                <img src={IconFilter} alt=\"filter\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.first_name}</div>\n                <div className=\"Cirle\">{person.count_common_events}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst CommonEventsList = ({events}) => {\n\n    return events.map(\n        event =>\n        <div className=\"eventContainer\">\n            <div className=\"poster\">\n                <img src={event.images[0].image} />\n                <div className=\"annotation\">\n                    <p>{event.start_date}</p>\n                    <p>{event.place}</p>\n                </div>\n            </div>\n            <div className=\"name\">\n                <p>{event.short_title}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default CommonEventsList;\n","const initialState = {\n    events: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\nfunction events(state=initialState, action){\n    switch(action.type){\n        case \"RELOAD\":\n            state.events = action.events;\n            state.page = 1;\n            return state;\n        case \"LOAD\":\n            state.events = state.events.concat(action.events);\n            state.page = state.page + 1;\n            return state;\n        case \"SET_INDEX\":\n            state.index = action.index;\n            return state;\n    }\n    return state;\n}\n\nexport default events;\n","const initialState = {\n    user: null\n};\n\nfunction user(state=initialState, action){\n    switch(action.type){\n        case \"SET_AUTHORIZED_USER\":\n            state.user = action.user;\n            return state;\n    }\n    return state;\n}\n\nexport default user;","const initialState = {\n    people: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\n\nfunction people(state=initialState, action){\n    switch(action.type){\n        case \"PEOPLE_RELOAD\":\n            state.people = state.people.concat(action.people);\n            state.page = Math.trunc(state.people.length / state.size);\n            return state;\n        case \"PEOPLE_LOAD\":\n            let receivedPeople = action.people;\n            let peopleCount = receivedPeople.length;\n            let shiftIndex = state.people.length % state.size;\n            let newPeople = receivedPeople.slice(shiftIndex, peopleCount);\n\n            state.people = state.people.concat(newPeople);\n            state.page = Math.trunc(state.people.length / state.size);\n            return state;\n        case \"PEOPLE_SET_INDEX\":\n            state.index = action.index;\n            return state;\n    }\n    return state;\n}\n\nexport default people;\n","const initialState = {\n    active: \"events\"\n};\nfunction panels(state=initialState, action){\n    switch(action.type){\n        case \"CHANGE_PANEL\":\n            state.active = action.panel;\n            return state;\n    }\n    return state;\n}\n\nexport default panels;\n","const initialState = {\n    matches: [],\n    page: 0,\n    size: 15,\n    eventsPageSize: 10\n};\n\nfunction matches(state = initialState, action) {\n    switch (action.type) {\n        case \"MATCHES_RELOAD\":\n            state.matches = state.matches.concat(action.matches);\n            state.page = Math.trunc(state.matches.length / state.size);\n            return state;\n        case \"MATCHES_LOAD\":\n            let receivedMatches = action.matches;\n            let matchesCount = receivedMatches.length;\n            let shiftIndex = state.matches.length % state.size;\n            let newMatches = receivedMatches.slice(shiftIndex, matchesCount);\n\n            state.matches = state.matches.concat(newMatches);\n            state.page = Math.trunc(state.matches.length / state.size);\n            return state;\n        case  \"UPDATE_COMMON_EVENTS\":\n            let otherUserId = action.otherUserId;\n            let events = action.newEvents;\n\n            let matchedUserId = state.matches.findIndex((match)=>match.id === otherUserId);\n            let updatedMatches = state.matches.slice();\n            updatedMatches[matchedUserId].commonEvents = events;\n            state.matches = updatedMatches;\n            return state;\n    }\n    return state;\n}\n\nexport default matches;\n","import {combineReducers} from \"redux\"\nimport eventsReducer from './events-reducer';\nimport userReducer from './user-reducer';\nimport peopleReducer from \"./people-reducer\";\nimport panelReducer from \"./panel-reducer\";\nimport matchesReducer from \"./matches-reducer\";\n\nconst reducers = combineReducers({\n    eventsState: eventsReducer,\n    userState: userReducer,\n    peopleState: peopleReducer,\n    panelState: panelReducer,\n    matchesState: matchesReducer\n});\n\nexport default reducers;\n","import {createStore} from 'redux';\nimport reducers from '../reducers/combine'\n\n\nconst store = createStore(reducers);\n\nexport default store;","export function reload(events){\n    return {\n        type: \"RELOAD\",\n        events\n    }\n}\nexport function load(events){\n    return {\n        type: \"LOAD\",\n        events\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"SET_INDEX\",\n        index\n    }\n}","export function isValidResponse(response) {\n    return response.status === 200;\n}\n","import config from \"./api_config\"\nimport {isValidResponse} from \"./Utils\";\n\nexport async function fetchEventsRequest(userId, categories, is_personal,\n                                         page, size) {\n    let url = buildUrl(userId, categories, is_personal, page, size);\n    return await getEventsByUrl(url);\n}\n\nexport async function fetchCommonEventsRequest(userId, otherUserId, page, size) {\n    let url = buildUrlForCommonEvents(userId, otherUserId, page, size);\n    return await getEventsByUrl(url);\n\n}\n\nasync function getEventsByUrl(url) {\n    let response = await fetch(url, {method: \"GET\",});\n    if (!isValidResponse(response)) {\n        return [];\n    }\n\n    let eventsJson = await response.json();\n    let events = eventsJson.content;\n    updateImageUrls(events);\n\n    return events;\n}\n\n\nfunction buildUrl(userId, categories, is_personal, page, size) {\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\n    return config.url + \"/user/\" + userId\n        + \"/events/selection?\" + categoriesParameter\n        + \"&is_personal=\" + is_personal\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction buildUrlForCommonEvents(userId, otherUserId, page, size) {\n    return config.url + \"/user/\" + userId\n        + \"/common/events?\" + \"anotherUserId=\" + otherUserId\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction updateImageUrls(newEvents) {\n    newEvents.forEach((item) => {\n        item.images.forEach((imageItem) => {\n            imageItem.image = config.images_url + imageItem.image;\n        })\n    });\n}\n","import store from \"../redux/store/store\";\nimport {reload, load} from \"../redux/actions/events-actions\";\nimport {fetchCommonEventsRequest, fetchEventsRequest} from \"../Api/Events\";\nimport {updateCommonEvents} from \"../redux/actions/matches-actions\";\n\nexport async function fetchEvents(categories = [1, 6], isReload = false, is_personal = true) {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.eventsState.page;\n    let size = requestState.eventsState.size;\n\n    let newEvents = await fetchEventsRequest(userId,categories, is_personal, page, size);\n\n    updateEventsState(isReload, newEvents);\n}\n\nexport async function fetchCommonEvents(otherUserId) {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let matches = requestState.matchesState.matches;\n\n    let matchedUser = matches.find(\n        (match =>  match.id === otherUserId)\n    );\n    let page = matchedUser.page;\n    let size = requestState.matchesState.eventsPageSize;\n\n    let newEvents = await fetchCommonEventsRequest(userId, otherUserId, page, size);\n\n    updateCommonEventsState(otherUserId, newEvents);\n}\n\nfunction updateCommonEventsState(otherUserId, newEvents) {\n    if (newEvents.length !== 0)\n        store.dispatch(updateCommonEvents(otherUserId,newEvents))\n}\n\nfunction updateEventsState(isReload, newEvents) {\n    if (isReload) {\n        store.dispatch(reload(newEvents));\n    } else if (newEvents.length !== 0) {\n        store.dispatch(load(newEvents));\n    }\n\n}\n\n\n","export function reloadMatches(matches){\n    return {\n        type: \"MATCHES_RELOAD\",\n        matches\n    }\n}\nexport function loadMatches(matches){\n    return {\n        type: \"MATCHES_LOAD\",\n        matches\n    }\n}\n\nexport function updateCommonEvents(otherUserId, newEvents) {\n    return {\n        type: \"UPDATE_COMMON_EVENTS\",\n        otherUserId,\n        newEvents\n    }\n}\n","import React, {useState} from 'react';\n\nimport CommonEventsList from './CommonEventsList.js';\n\nimport chatActive from \"../assets/icons/messageRed.svg\";\nimport matchesArrow from \"../assets/icons/matchesArrow.svg\";\nimport {fetchCommonEvents} from \"../services/Events\";\n\nconst MatchedList = ({list}) => {\n    const openEvents = (e) => {\n        let display = e.currentTarget.parentElement.children[3].style.display;\n        let isHidden = display ===  \"none\" || display === \"\";\n        if (isHidden) {\n            let otherUserId = parseInt(e.currentTarget.dataset.id);\n            fetchCommonEvents(otherUserId);\n        }\n        e.currentTarget.parentElement.children[3].style.display = isHidden ? \"flex\" : \"none\";\n\n        if (isHidden) {\n            e.currentTarget.classList.add(\"arrowActive\");\n        } else {\n            e.currentTarget.classList.remove(\"arrowActive\");\n        }\n    };\n\n    const toVKChat = (e) => {\n        document.location.href = \"https://vk.com/im?sel=\" + e.currentTarget.dataset.userid;\n    };\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img className=\"avatar\" src={person.photo_400_orig} alt=\"Person photo\"/>\n\n\n                <div className=\"messageTitle\" onClick={toVKChat} data-userid={person.id}>\n                    <img src={chatActive} alt=\"message\" />\n                    <p>Написать</p>\n                </div>\n\n                <div className=\"personData\">\n                    <div className=\"name\">{person.first_name}</div>\n                    <div className=\"events\">4 Общих события</div>\n                </div>\n\n                <div className=\"eventsContainer\">\n                   <div className=\"events\">\n                        <CommonEventsList events={\n                            person.commonEvents.length > 0 ?\n                                person.commonEvents :\n                                []\n                        }/>\n\n                    </div>\n                </div>\n\n                <img className=\"arrow\" onClick={openEvents} data-id={person.id} src={matchesArrow} alt=\"icon\" />\n\n            </div>\n        </div>\n    );\n}\n\n/*<a className=\"PersonPlacesList\" href={\"https://vk.com/im?sel=\" + person.id}>\n                            {\"Перейти в сообщения\"}\n                        </a>*/\nexport default MatchedList;\n","export function changePanel(panel){\n    return {\n        type: \"CHANGE_PANEL\",\n        panel\n    }\n}\n","import React from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nconst BottomButton = ({panel, activePanel, activeImage, disabledImage, onClick, text }) => {\n    return (\n        <div className=\"Bottom-button\" onClick={onClick}\n             data-to={panel}>\n            <img src={activePanel === panel ? activeImage : disabledImage} alt={panel} />\n            <p className={activePanel === panel ? 'active' : ''}>{text}</p>\n        </div>\n    );\n};\n\nexport default BottomButton;\n","import React, {useState} from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDisabled from \"../assets/icons/chatGrey.svg\";\nimport peopleDisabled from \"../assets/icons/peopleGrey.svg\";\nimport gridDisabled from \"../assets/icons/gridGrey.svg\";\nimport eventsDisabled from \"../assets/icons/eventsGrey.svg\";\nimport userDisabled from \"../assets/icons/userGrey.svg\";\n\nimport chatActive from \"../assets/icons/chatRed.svg\";\nimport peopleActive from \"../assets/icons/peopleRed.svg\";\nimport gridActive from \"../assets/icons/gridRed.svg\";\nimport eventsActive from \"../assets/icons/eventsRed.svg\";\nimport userActive from \"../assets/icons/userRed.svg\";\n\nimport {changePanel} from \"../redux/actions/panel-actions\";\nimport store from \"../redux/store/store\";\nimport panels from \"../panels.json\";\nimport BottomButton from \"./BottomButton\";\nimport {useSelector} from \"react-redux\";\n\nconst Bottom = () => {\n    const activePanel = useSelector(state => state.panelState.active);\n    const onChangePanelClick = (event) => {\n        store.dispatch(changePanel(event.currentTarget.dataset.to))\n    };\n\n    return (\n\n        <div className=\"App-bottom\">\n            <BottomButton onClick={onChangePanelClick} panel={panels.personal} activePanel={activePanel}\n                          activeImage={userActive} disabledImage={userDisabled} text='Профиль'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.grid} activePanel={activePanel}\n                          activeImage={gridActive} disabledImage={gridDisabled} text='Подборки'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.events} activePanel={activePanel}\n                          activeImage={eventsActive} disabledImage={eventsDisabled} text='События'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.people} activePanel={activePanel}\n                          activeImage={peopleActive} disabledImage={peopleDisabled} text='Люди'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.matches} activePanel={activePanel}\n                          activeImage={chatActive} disabledImage={chatDisabled} text='Совпадения'/>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick=onChangePanelClick data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick=onChangePanelClick data-to={right}><div></div></div>*/\n}\n\nexport default Bottom;\n","import config from \"./api_config\";\n\nexport async function fetchMatchesCall(userId, page, size) {\n    let url = buildUrl(userId, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200) {\n        return [];\n    }\n\n    let newMatchesJson = await response.json();\n    let newMatches = newMatchesJson.content;\n    setUpEmptyCommonEvents(newMatches);\n    return newMatches;\n}\n\n\nfunction buildUrl(userId, page, size) {\n    return config.url + \"/user/\" + userId\n        + \"/users/ratings?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction setUpEmptyCommonEvents(newMatches) {\n    newMatches.forEach((item) => {\n        item.commonEvents = [];\n        item.page = 0;\n    });\n}\n\n","import store from \"../redux/store/store\";\nimport {loadMatches} from \"../redux/actions/matches-actions\";\nimport { fetchMatchesCall } from \"../Api/Matches\"\n\nexport async function fetchMatches() {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.peopleState.page;\n    let size = requestState.peopleState.size;\n\n    let matches = await fetchMatchesCall(userId, page, size);\n    updateStore(matches);\n\n}\n\n\nfunction updateStore(newMatches) {\n    if (newMatches.length !== 0)\n        store.dispatch(loadMatches(newMatches));\n\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {fetchMatches} from \"../services/Matches\";\nimport {fetchCommonEvents} from \"../services/Events\";\n\nconst Matches = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const matches = useSelector(state => state.matchesState.matches);\n\n    async function loadMatches(){\n        await fetchMatches();\n    }\n\n    useEffect(() => {\n        if (user != null)\n            loadMatches();\n    }, [user]);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    /*<MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>*/\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"Head\">\n                <p>{matches.length != 1 ?\n                \"\"+matches.length+\" новых совпадений\" :\n                   \"\" + matches.length + \" новое совпадение\"}</p>\n            </div>\n\n            <div className=\"ScrollContainer\">\n                {matches.length > 0 ?\n                    <MatchedScrollList\n                        list={matches}/> :\n                    <div/>\n                }\n            </div>\n            <div className=\"Dialogues\">\n                <p>Совпадения</p>\n            </div>\n            <div className=\"ListContainer\">\n                {matches.length > 0 ?\n                    <MatchedList\n                        list={matches}/> :\n                    <div/>\n                }\n            </div>\n            <Bottom/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n/*<MatchedNavigationButtons\n               stateList = {isSelectedFriends}\n               stateRefresh = {onSwitchClick}\n               matchedList = {matchedPeople}\n               friendsList = {matchedFriends}/>*/\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport LeftButton from '../../assets/icons/eventAnnotationLeftButton.svg';\nimport RightButton from '../../assets/icons/eventAnnotationRightButton.svg';\n\nconst EventInformationView = ({event}) => {\n    let isDateProvided = event.start_date != null;\n\n    let date = \"\";\n    let time = \"\";\n    let week = \"\";\n    let day = \"\";\n\n    if (isDateProvided) {\n        time = event.start_time.slice(0,event.start_time.length-3);\n        date = new Date(event.start_date);\n        week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\n        day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\n    }\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center\">\n                <p>{event.short_title}</p>\n                {isDateProvided &&\n                <p> {day}</p>}\n                {isDateProvided &&\n                <p>{time} {week} </p>\n                 }\n            </div>\n\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nconst PersonInformationView = ({person}) => {\n\n\n    return  (\n\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center user\">\n                <p>{person.first_name}</p>\n\n                <p>Общих событий: <b>{person.count_common_events}</b></p>\n   \n            </div>\n\n        </div>\n    )\n\n};\n\nexport default PersonInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({horizontalShift}) => {\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n    \n    return  (\n\n        <div className=\"Swipe-content-up-labels\">\n\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                Like\n            </div>\n\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                Pass\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport eventsIcon from '../../assets/icons/eventsRed.svg';\nimport peopleIcon from '../../assets/icons/peopleRed.svg';\nimport chatIcon from '../../assets/icons/chatRed.svg';\n\nconst EventEndView = ({}) => {\n\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n            <div className=\"Swipe-content-down-center\">\n                <p>События закончились</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={peopleIcon} /></div>&nbsp; Найди компанию на ивент</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={chatIcon} /></div>&nbsp; Позови людей на ивент</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventEndView;\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport eventsIcon from '../../assets/icons/eventsRed.svg';\nimport chatIcon from '../../assets/icons/chatRed.svg';\n\nconst PeopleEndView = ({}) => {\n\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n            <div className=\"Swipe-content-down-center\">\n                <p>Люди закончились</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={eventsIcon} /></div>&nbsp; Выбери куда пойти</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={chatIcon} /></div>&nbsp; Позови людей на ивент</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default PeopleEndView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\nimport EventInformationView from './EventInformationView';\nimport PersonInformationView from './PersonInformationView';\nimport ChoiceLabelsView from './ChoiceLabelsView';\nimport EventEndView from \"./EventEndView\";\nimport PeopleEndView from \"./PeopleEndView\";\n\nimport defaultImage from \"../../assets/defaultEventImage.jpg\";\n\nconst CardView = ({hasMargin, horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\n\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    if (hasMargin){\n        contentStyle[\"position\"] = \"absolute\";\n        contentStyle[\"z-index\"] = \"10\";\n    }\n\n    let isEnd = cardInfo.hasOwnProperty(\"isEnd\");\n    let isEventEnd = isEnd && cardInfo[\"end_type\"];\n\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\n\n    let imageSource = isEnd ? defaultImage :\n            isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n\n            <div className=\"Swipe-content-up\">\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\n\n                <div className=\"Swipe-content-down\">\n                    {isEnd ?\n                        isEventEnd ?\n                            <EventEndView/> :\n                             <PeopleEndView/> :\n                        isEventCard ? \n                            <EventInformationView event={cardInfo}/> :\n                             <PersonInformationView person={cardInfo}/>}\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n    /*<div className=\"Events-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>*/\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./View/CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                style={{\"position\":\"absolute\", \"z-index\":\"20\"}}\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                    hasMargin={false}\n                    cardInfo={this.props.cardInfo}\n                    isSwiping={this.state.isSwiping}\n                    horizontalShift={this.state.horizontalShift}\n                    verticalShift={this.state.verticalShift}\n                    isUpperTouch={this.state.isUpperTouch}\n                    isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, {Component} from 'react';\nimport store from \"../redux/store/store\";\n\n\nimport Card from \"./Card\";\nimport CardView from \"./View/CardView\";\n\nconst Deck = ({index, setIndex, cards, loadCards, setRateBy, isEventDeck}) => {\n     const onSwipeEnd = async function(isLike) {\n        setRateBy(cards[index].id, isLike);\n\n        // Uploading if necessary\n        if (cards.length - index < 10){\n            loadCards();\n        }\n\n        store.dispatch(setIndex(index + 1));\n    };\n\n    let topCardIndex = index;\n    let bottomCardIndex = topCardIndex + 1;\n\n    let endCard = {\"isEnd\": true, \"end_type\" : isEventDeck}\n    return (\n\n        cards.length > 0 && topCardIndex < cards.length ?\n            <div>\n                <Card cardInfo={cards[topCardIndex]} onSwipeEnd={onSwipeEnd}/>\n                {\n                    bottomCardIndex < cards.length ?\n                        <CardView hasMargin={true} cardInfo={cards[bottomCardIndex]} />:\n                        <div/>\n                }\n            </div> :\n            <div >\n                <Card cardInfo={endCard} onSwipeEnd={()=>{}}/>\n            </div>\n      \n    )\n};\n\nexport default Deck;\n","import config from \"./api_config\"\n\nexport async function setEventRateCall(userId, eventId, isLiked) {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n\nexport async function setUserRateCall(userId, otherUserId, isLiked) {\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                user_id: otherUserId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import {setEventRateCall, setUserRateCall} from '../Api/Ratings';\nimport store from \"../redux/store/store\";\n\nexport async function setEventRate(eventId, isLiked) {\n    let userId = getUserId();\n\n    return setEventRateCall(userId, eventId, isLiked);\n}\n\nexport async function setUserRate(otherUserId, isLiked) {\n    let userId = getUserId();\n\n    return setUserRateCall(userId, otherUserId, isLiked);\n}\n\nfunction getUserId() {\n    let requestState = store.getState();\n    return requestState.userState.user.id;\n}","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Events.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../services/Events\";\nimport { setEventRate } from '../services/Ratings';\nimport {setIndex} from \"../redux/actions/events-actions\";\nimport spinner from \"../assets/preloader.svg\";\n\nconst Events = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n    const index = useSelector(state => state.eventsState.index);\n\n    const [categories, setCategories] = useState([\"1\",\"6\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function loadEvents(){\n        await fetchEvents(categories);\n    }\n    async function setRateBy(eventId, isLike){\n        setEventRate( eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null || user != undefined)\n            if (events.length == 0){\n                setIsLoading(true);\n                loadEvents().then(\n                    () => {\n                        setIsLoading(false);\n                    }\n                );\n            }\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"container\">\n                {!isLoading && <Deck isEventDeck={true} index={index} setIndex={setIndex} cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>}\n                {isLoading && <div className=\"spinner-preloader-forPeople\">\n                    <img src={spinner} alt=\"loading spinner\"/>\n                </div>}\n            </div>\n\n\n            <Bottom />\n        </Panel>\n    );\n};\n\nexport default Events;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        // async function fetchToken(){\n        //     let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n        //         \"app_id\": lol, \"scope\": \"friends\"});\n        //     setToken(tokenObject.access_token);\n        // }\n        //fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {user &&\n                        <div className=\"PersonalData\">\n                           <img src={user.photo_200 ? user.photo_200 : null} alt=\"Person\"/>\n\n                           <p>{user.first_name ? user.first_name : \"\"}</p>\n                           <p>{user.last_name ? (\" \" + user.last_name) : \"\" }</p>\n\n                            {\n                               /* token &&\n                                <p>\n                                    {token}\n                                </p>*/\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom/>\n        </Panel>\n    );\n};\n\nexport default Personal;\n","import React from 'react';\nimport store from \"../redux/store/store\";\n\nimport '../panels/panelsStyle/Grid.css';\nimport {setIndex} from '../redux/actions/events-actions';\nimport {changePanel} from \"../redux/actions/panel-actions\";\n\nimport panels from \"../panels.json\";\n\nconst GridEventList = ({data}) => {\n\n    const handleClick = e => {\n        let index = Number(e.currentTarget.dataset.index);\n        store.dispatch(setIndex(index));\n        store.dispatch(changePanel(panels.events));\n    };\n\n    return data.map (\n        (product, index) =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}\n               data-to=\"swipe\"\n               data-index={index}\n               onClick={handleClick}>\n                <img src={product.images[0].image ? product.images[0].image : null}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../services/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                if (!isLoading){\n                    setIsLoading(true);\n                    loadEvents();\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    async function loadEvents(){\n        await fetchEvents(categoriesId);\n        setIsLoading(false);\n    }\n\n    async function deleteAndloadEvents(){\n        if (user != null || user !== undefined){\n            await fetchEvents(categoriesId,true);\n            setIsLoading(false);\n        }\n    }\n\n\n    useEffect(() => {\n        if (user != null || user !== undefined)\n            if (events.length === 0){\n                loadEvents();\n            }\n              \n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    const onModal = e => {\n        let modal = document.getElementById(\"filter_modal\");\n        if (modal.style.visibility == \"visible\") {\n            deleteAndloadEvents();\n        }\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\n    };\n\n    const onChangeFilterItemState = e => {\n        if (e.currentTarget.dataset.isactive == \"false\") {\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\n        }\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\n    };\n\n    const onCloseFilterEnvironment = e => {\n        if (e.target.id == \"filter_modal\") onModal(e);\n    };\n\n    return (\n        \n        <Panel id={id}>\n            <Header panelId={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {events &&\n                        <GridEventList data={events}/> }\n                </div>\n\n                <div className=\"Filter\" onClick={onModal}>\n                    <p>Фильтр</p>\n                </div>\n\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\n                    <div className=\"Filter-modal-content\">\n\n                        <div className=\"Filter-modal-header\">\n                            <p>Фильтр</p>\n                        </div>\n\n                        <div className=\"Filter-modal-categoriesTitle\">\n                            <p>Выберите тип мероприятия</p>\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\n                        </div>\n\n                        <div className=\"Filter-modal-categories\">\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\n                            </div>\n\n                        </div>\n\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\n                            <p>ОК</p>\n                        </div>\n\n                    </div>\n                </div>\n\n            <Bottom/>\n        </Panel>\n    );\n};\nexport default Grid;\n// function mapStateToProps(store) {\n//     return {\n//         user: store.userState.user\n//     }\n//   }\n//   export default connect(mapStateToProps)(Grid)\n","export function reload(people){\n    return {\n        type: \"PEOPLE_RELOAD\",\n        people\n    }\n}\nexport function load(people){\n    return {\n        type: \"PEOPLE_LOAD\",\n        people\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"PEOPLE_SET_INDEX\",\n        index\n    }\n}\n","import config from \"./api_config\"\n\nexport async function fetchPeopleCall(userId, page, size, isReload) {\n\n    let url = buildUrl(userId, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200) {\n        return [];\n    }\n\n    let newPeopleJson = await response.json();\n    let newPeople = newPeopleJson.content;\n\n    return newPeople;\n\n}\n\nfunction buildUrl(userId, page, size) {\n    return config.url + \"/user/\" + userId\n        + \"/users/all?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n","import store from \"../redux/store/store\";\nimport {load, reload} from \"../redux/actions/people-actions\";\nimport { fetchPeopleCall } from \"../Api/People\"\n\nexport async function fetchPeople(isReload = false) {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.peopleState.page;\n    let size = requestState.peopleState.size;\n\n    let people = await fetchPeopleCall(userId, page, size, isReload);\n    updateStore(isReload, people);\n}\n\n\nfunction updateStore(isReload, newPeople) {\n    if (isReload) {\n        store.dispatch(reload(newPeople));\n    } else {\n        if (newPeople.length !== 0)\n            store.dispatch(load(newPeople));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchPeople} from \"../services/People\";\nimport { setUserRate } from '../services/Ratings';\nimport {setIndex} from \"../redux/actions/people-actions\";\n\nconst People = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const people = useSelector(state => state.peopleState.people);\n    const index = useSelector(state => state.peopleState.index);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function loadPeople(){\n        if (!isLoading){\n            setIsLoading(true);\n            await fetchPeople(people.length === 0);\n            setIsLoading(false);\n        }\n         \n    }\n\n    async function setRateBy(otherUserId, isLike){\n        setUserRate( otherUserId, isLike );\n    }\n\n    const isUserLoaded = () => {\n        return user != null && user !== undefined;\n    };\n\n    // При получении user id, получаем ивенты\n    // useEffect(() => {\n    //     if (isUserLoaded() && people.length === 0){\n    //         loadPeople();\n    //     }\n    // }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        if (isUserLoaded() && people.length === 0)\n            loadPeople();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck isEventDeck={false} index={index} setIndex={setIndex} cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\n\n            <Bottom/>\n        </Panel>\n    );\n};\n\nexport default People;\n","export function setAuthorizedUser(user){\n    return {\n        type: \"SET_AUTHORIZED_USER\",\n        user\n    }\n}","import config from \"./api_config\"\n\nexport async function authorizeRequest(user) {\n    let url = `${config.url}/user/identify?user_id=${user.id}`;\n    return fetch(url, {method: \"GET\",});\n\n}\n","import store from \"../redux/store/store\";\nimport {setAuthorizedUser} from \"../redux/actions/user-actions\";\nimport {authorizeRequest} from \"../Api/Auth\";\n\nexport async function authorize(user) {\n    let response = await authorizeRequest(user);\n\n    if (response.status === 200) {\n        store.dispatch(setAuthorizedUser(user));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Events from './panels/Events';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./services/Auth\";\nimport config from \"./Api/api_config.json\";\nimport settings from \"./Api/dev_settings.json\";\nimport {useSelector} from \"react-redux\";\n\nimport panels from \"./panels.json\"\n\nconst AppCulter = () => {\n    const activePanel = useSelector(state => state.panelState.active);\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : settings.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n            \n            await authorize(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id={panels.personal}/>\n            <Grid id={panels.grid}/>\n            <Events id={panels.events}/>\n            <People id={panels.people}/>\n            <Matches id={panels.matches}/>\n        </View>\n    );\n};\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Events from './panels/Events';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppCulter/>\n    </Provider>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/chatRed.6ffa4715.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventsRed.08ccde92.svg\";","module.exports = __webpack_public_path__ + \"static/media/peopleRed.333d01ba.svg\";"],"sourceRoot":""}