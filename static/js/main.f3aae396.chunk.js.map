{"version":3,"sources":["assets/icons/eventAnnotationRightButton.svg","assets/icons/filter.svg","assets/icons/chatGrey.svg","assets/icons/peopleGrey.svg","assets/icons/gridGrey.svg","assets/icons/eventsGrey.svg","assets/icons/userGrey.svg","assets/icons/peopleRed.svg","assets/icons/gridRed.svg","assets/icons/userRed.svg","Components/Header.js","Components/MatchedScrollList.js","Components/MatchedList.js","redux/actions/panel-actions.js","redux/reducers/events-reducer.js","redux/reducers/user-reducer.js","redux/reducers/people-reducer.js","redux/reducers/panel-reducer.js","redux/reducers/combine.js","redux/store/store.js","Components/BottomButton.js","Components/Bottom.js","Api/Matches.js","panels/Matches.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/EventEndView.js","Components/View/CardView.js","Components/Card.js","Components/Deck.js","redux/actions/events-actions.js","Api/Events.js","Api/Ratings.js","panels/Events.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","redux/actions/people-actions.js","Api/People.js","panels/People.js","redux/actions/user-actions.js","Api/Auth.js","AppCulter.js","index.js","assets/icons/chatRed.svg","assets/icons/eventsRed.svg","assets/preloader.svg","assets/icons/eventAnnotationLeftButton.svg"],"names":["module","exports","Header","panelTitle","panelId","className","src","IconFilter","alt","MatchedScrollList","list","map","person","key","photo_400_orig","first_name","count_common_events","MatchedList","text","last_name","length","href","id","slice","changePanel","panel","type","initialState","events","page","size","index","state","action","concat","user","people","active","panels","reducers","combineReducers","eventsState","eventsReducer","userState","userReducer","peopleState","peopleReducer","panelState","panelReducer","store","createStore","BottomButton","activePanel","activeImage","disabledImage","onClick","data-to","Bottom","useSelector","onChangePanelClick","event","dispatch","currentTarget","dataset","to","personal","userActive","userDisabled","grid","gridActive","gridDisabled","eventsActive","eventsDisabled","peopleActive","peopleDisabled","matches","chatActive","chatDisabled","fetchMatches","userId","a","async","url","config","fetch","method","Matches","useState","matchedPeople","setMatchedPeople","setPage","loadMatches","peopleResponse","json","newPeople","content","useEffect","document","getElementById","children","style","paddingTop","body","setProperty","EventInformationView","title","short_title","isDateProvided","dates","date","time","week","day","start_time","Date","start_date","toLocaleDateString","weekday","month","PersonInformationView","horizontalShift","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","EventEndView","eventsIcon","chatIcon","CardView","hasMargin","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEnd","hasOwnProperty","isEventCard","imageSource","images","image","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","tempUser","Deck","setIndex","cards","loadCards","setRateBy","topCardIndex","bottomCardIndex","fetchEvents","categories","isReload","is_personal","requestState","getState","buildUrl","response","status","newEventsJson","updateImageUrls","newEvents","updateEventsState","categoriesParameter","join","load","forEach","item","imageItem","images_url","setRate","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRate","otherUserId","user_id","Events","go","isLoading","setIsLoading","loadEvents","undefined","then","spinner","Personal","photo_200","GridEventList","data","handleClick","e","Number","product","data-name","name","data-index","Grid","categoriesId","setCategoriesId","onModal","modal","visibility","onChangeFilterItemState","isactive","splice","indexOf","classList","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","console","log","target","data-isactive","data-id","fetchPeople","newPeopleJson","updateStore","People","loadPeople","setAuthorizedUser","authorize","AppCulter","is_dev","settings","connect","sendPromise","fetchedUser","fetchData","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.f3aae396.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eventAnnotationRightButton.0a756658.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.84137ab6.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/peopleGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventsGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";","module.exports = __webpack_public_path__ + \"static/media/peopleRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nimport IconFilter from '../assets/icons/filter.svg';\n\nconst Header = ({panelId}) => {\n    let panelTitle = \"\";\n    switch (panelId) {\n        case \"personal\": panelTitle = \"Профиль\"; break;\n        case \"grid\": panelTitle = \"События\"; break;\n        case \"events\": panelTitle = \"События\"; break;\n        case \"people\": panelTitle = \"Люди\"; break;\n        case \"matches\": panelTitle = \"Диалоги\"; break;\n    }\n    return (\n        <div className=\"App-header\">\n            <div className=\"App-header-content\">\n                <p>{\"Culter\"}</p>\n            </div>\n            <div className=\"App-header-panelTitle\">\n                <p>{panelTitle}</p>\n                <img src={IconFilter} alt=\"filter\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.first_name}</div>\n                <div className=\"Cirle\">{person.count_common_events}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst MatchedList = ({list}) => {\n    const text = \"Перейти в сообщения\";\n\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img src={person.photo_400_orig} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.first_name + \" \" + person.last_name}</b></div>\n                    {text.length > 26 &&\n                        <a className=\"PersonPlacesList\" href={\"https://vk.com/im?sel=\" + person.id}>\n                            {text.slice(0, 26) + \"..\"}\n                        </a>}\n                    {!(text.length > 26) &&\n                        <a className=\"PersonPlacesList\" href={\"https://vk.com/im?sel=\" + person.id}>\n                            {text}\n                        </a>}\n                </div>\n            </div>\n            <div className=\"BottomLine\"></div>\n        </div>\n    );\n\n   /* return list.map(\n        person =>\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\n                    {person.commonPlaces.toString().length > 25 &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\n                        </div>}\n                    {!(person.commonPlaces.toString().length > 25) &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString()}\n                        </div>}\n                </div>\n            </div>\n    );*/\n}\n\n\n/*    renderPlaces = () => {\n        let str = this.props.commonPlaces.toString();\n        if (str.length > 25)\n            str = str.slice(0, 25) + \"..\";\n        return str;\n    };\n\n    render() {\n        return (\n            <div className=\"Person\" key={this.props.key}>\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\n                    <div className=\"PersonPlacesList\">\n                        {this.renderPlaces()}\n                    </div>\n                </div>\n            </div>\n        );\n    }*/\nexport default MatchedList;\n","export function changePanel(panel){\n    return {\n        type: \"CHANGE_PANEL\",\n        panel\n    }\n}\n","const initialState = {\n    events: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\nfunction events(state=initialState, action){\n    switch(action.type){\n        case \"RELOAD\":\n            state.events = action.events;\n            state.page = 1;\n            return state;\n        case \"LOAD\":\n            state.events = state.events.concat(action.events);\n            state.page = state.page + 1;\n            return state;\n        case \"SET_INDEX\":\n            state.index = action.index;\n            return state;\n    }\n    return state;\n}\n\nexport default events;\n","const initialState = {\n    user: null\n};\n\nfunction user(state=initialState, action){\n    switch(action.type){\n        case \"SET_AUTHORIZED_USER\":\n            state.user = action.user;\n            return state;\n    }\n    return state;\n}\n\nexport default user;","const initialState = {\n    people: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\n\nfunction people(state=initialState, action){\n    switch(action.type){\n        case \"PEOPLE_RELOAD\":\n            state.people = action.people;\n            state.page = 1;\n            return state;\n        case \"PEOPLE_LOAD\":\n            state.people = state.people.concat(action.people);\n            state.page = state.page + 1;\n            return state;\n        case \"PEOPLE_SET_INDEX\":\n            state.index = action.index;\n            return state;\n    }\n    return state;\n}\n\nexport default people;\n","const initialState = {\n    active: \"events\"\n};\nfunction panels(state=initialState, action){\n    switch(action.type){\n        case \"CHANGE_PANEL\":\n            state.active = action.panel;\n            return state;\n    }\n    return state;\n}\n\nexport default panels;\n","import {combineReducers} from \"redux\"\nimport eventsReducer from './events-reducer';\nimport userReducer from './user-reducer';\nimport peopleReducer from \"./people-reducer\";\nimport panelReducer from \"./panel-reducer\";\n\nconst reducers = combineReducers({\n    eventsState: eventsReducer,\n    userState: userReducer,\n    peopleState: peopleReducer,\n    panelState: panelReducer\n});\n\nexport default reducers;\n","import {createStore} from 'redux';\nimport reducers from '../reducers/combine'\n\n\nconst store = createStore(reducers);\n\nexport default store;","import React from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nconst BottomButton = ({panel, activePanel, activeImage, disabledImage, onClick }) => {\n    return (\n        <div className=\"Bottom-button\" onClick={onClick}\n             data-to={panel}>\n            <img src={activePanel === panel ? activeImage : disabledImage} alt={panel} />\n        </div>\n    );\n};\n\nexport default BottomButton;\n","import React, {useState} from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDisabled from \"../assets/icons/chatGrey.svg\";\nimport peopleDisabled from \"../assets/icons/peopleGrey.svg\";\nimport gridDisabled from \"../assets/icons/gridGrey.svg\";\nimport eventsDisabled from \"../assets/icons/eventsGrey.svg\";\nimport userDisabled from \"../assets/icons/userGrey.svg\";\n\nimport chatActive from \"../assets/icons/chatRed.svg\";\nimport peopleActive from \"../assets/icons/peopleRed.svg\";\nimport gridActive from \"../assets/icons/gridRed.svg\";\nimport eventsActive from \"../assets/icons/eventsRed.svg\";\nimport userActive from \"../assets/icons/userRed.svg\";\n\nimport {changePanel} from \"../redux/actions/panel-actions\";\nimport store from \"../redux/store/store\";\nimport panels from \"../panels.json\";\nimport BottomButton from \"./BottomButton\";\nimport {useSelector} from \"react-redux\";\n\nconst Bottom = () => {\n    const activePanel = useSelector(state => state.panelState.active);\n    const onChangePanelClick = (event) => {\n        store.dispatch(changePanel(event.currentTarget.dataset.to))\n    };\n\n    return (\n        \n        <div className=\"App-bottom\">\n            <BottomButton onClick={onChangePanelClick} panel={panels.personal} activePanel={activePanel}\n                          activeImage={userActive} disabledImage={userDisabled}/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.grid} activePanel={activePanel}\n                          activeImage={gridActive} disabledImage={gridDisabled}/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.events} activePanel={activePanel}\n                          activeImage={eventsActive} disabledImage={eventsDisabled}/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.people} activePanel={activePanel}\n                          activeImage={peopleActive} disabledImage={peopleDisabled}/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.matches} activePanel={activePanel}\n                          activeImage={chatActive} disabledImage={chatDisabled}/>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick=onChangePanelClick data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick=onChangePanelClick data-to={right}><div></div></div>*/\n}\n\nexport default Bottom;\n","import config from \"./api_config\";\n\nexport async function fetchMatches(userId, page=0, size=20) {\n    let url = config.url + \"/user/\" + userId\n        + \"/users/ratings?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {fetchMatches} from \"../Api/Matches\";\n\nconst Matches = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const [matchedPeople, setMatchedPeople] = useState([]);\n    const [page, setPage] = useState(0);\n    const [size, setSize] = useState(20);\n\n    async function loadMatches(){\n        let peopleResponse = await fetchMatches(user.id, page, size);\n        let newPeople = await peopleResponse.json();\n\n        setPage(page + 1);\n        setMatchedPeople(matchedPeople.concat(newPeople.content));\n    }\n\n    useEffect(() => {\n        if (user != null)\n            loadMatches();\n    }, [user]);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n        if (user != null)\n            loadMatches();\n    }, []);\n\n    /*<MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>*/\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"Head\">\n                <p>{matchedPeople.length != 1 ?\n                \"\"+matchedPeople.length+\" новых совпадений\" :\n                   \"\" + matchedPeople.length + \" новое совпадение\"}</p>\n            </div>\n\n            <div className=\"ScrollContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedScrollList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <div className=\"Dialogues\">\n                <p>Совпадения</p>\n            </div>\n            <div className=\"ListContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <Bottom/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n/*<MatchedNavigationButtons\n               stateList = {isSelectedFriends}\n               stateRefresh = {onSwitchClick}\n               matchedList = {matchedPeople}\n               friendsList = {matchedFriends}/>*/\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport LeftButton from '../../assets/icons/eventAnnotationLeftButton.svg';\nimport RightButton from '../../assets/icons/eventAnnotationRightButton.svg';\n\nconst EventInformationView = ({event}) => {\n    let title = event.short_title.length > 18 ?\n        event.short_title.slice(0,15) + \"...\" : event.short_title;\n\n    let isDateProvided = event.dates.length > 0;\n\n    let date = \"\";\n    let time = \"\";\n    let week = \"\";\n    let day = \"\";\n\n    if (isDateProvided) {\n        time = event.dates[0].start_time.slice(0,event.dates[0].start_time.length-3);\n        date = new Date(event.dates[0].start_date);\n        week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\n        day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\n    }\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n\n            {/* <div className=\"Events-content-down-aside\">\n                <div className=\"Events-content-down-button\">\n                    <img src={LeftButton} alt=\"leftButton\" />\n                </div>\n            </div> */}\n\n            <div className=\"Swipe-content-down-center\">\n                <p>{title}</p>\n                {isDateProvided &&\n                <p> {day}</p>}\n                {isDateProvided &&\n                <p>{time} {week} </p>\n                 }\n            </div>\n\n            {/* <div className=\"Events-content-down-aside\">\n                <div className=\"Events-content-down-button\">\n                    <img id=\"Events-content-down-button-right\" src={RightButton} alt=\"rightButton\" />\n                </div>\n            </div> */}\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nconst PersonInformationView = ({person}) => {\n\n\n    return  (\n\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center user\">\n                <p>{person.first_name}</p>\n\n                <p>Общих событий: <b>{person.count_common_events}</b></p>\n   \n            </div>\n\n        </div>\n    )\n\n};\n\nexport default PersonInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({horizontalShift}) => {\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n    \n    return  (\n\n        <div className=\"Swipe-content-up-labels\">\n\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                Круто\n            </div>\n\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                Отстой\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport LeftButton from '../../assets/icons/eventAnnotationLeftButton.svg';\nimport RightButton from '../../assets/icons/eventAnnotationRightButton.svg';\n\nimport eventsIcon from '../../assets/icons/eventsRed.svg';\nimport chatIcon from '../../assets/icons/chatRed.svg';\n\nconst EventEndView = ({event}) => {\n\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n            <div className=\"Swipe-content-down-center\">\n                <p>Варианты для компании закончились </p>\n                <p><div style={{\"width\":\"20px\", \"height\":\"20px\", \"float\":\"left\"}}><img src={eventsIcon} /></div>: Выбери куда бы ты ещё хотел сходить</p>\n                <p><div style={{\"width\":\"20px\", \"height\":\"20px\", \"float\":\"left\"}}><img src={chatIcon} /></div>: Позови людей на мероприятие</p>\n\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventEndView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\nimport EventInformationView from './EventInformationView';\nimport PersonInformationView from './PersonInformationView';\nimport ChoiceLabelsView from './ChoiceLabelsView';\nimport EventEndView from \"./EventEndView\";\n\n\nconst CardView = ({hasMargin, horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\n\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    if (hasMargin){\n        contentStyle[\"position\"] = \"absolute\";\n        contentStyle[\"z-index\"] = \"10\";\n    }\n\n    let isEnd = cardInfo.hasOwnProperty(\"isEnd\");\n\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\n\n    let imageSource = isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n\n            <div className=\"Swipe-content-up\">\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\n\n                <div className=\"Swipe-content-down\">\n                    {isEnd ?\n                        <EventEndView/> :\n                        isEventCard ? <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n    /*<div className=\"Events-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>*/\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./View/CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                style={{\"position\":\"absolute\", \"z-index\":\"20\"}}\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                    hasMargin={false}\n                    cardInfo={this.props.cardInfo}\n                    isSwiping={this.state.isSwiping}\n                    horizontalShift={this.state.horizontalShift}\n                    verticalShift={this.state.verticalShift}\n                    isUpperTouch={this.state.isUpperTouch}\n                    isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React, {Component} from 'react';\nimport store from \"../redux/store/store\";\n\n\nimport Card from \"./Card\";\nimport CardView from \"./View/CardView\";\n\nimport spinner from \"../assets/preloader.svg\";\n\nconst tempUser = {\"images\":{image:\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimg4.goodfon.ru%2Fwallpaper%2Fbig%2F5%2F26%2Fkosmos-zvezdy-nebo-1.jpg&f=1&nofb=1\"},\n    \"photo_400_orig\": \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimg4.goodfon.ru%2Fwallpaper%2Fbig%2F5%2F26%2Fkosmos-zvezdy-nebo-1.jpg&f=1&nofb=1\",\n    \"isEnd\": true};\n\nconst Deck = ({index, setIndex, cards, loadCards, setRateBy}) => {\n     const onSwipeEnd = async function(isLike) {\n        setRateBy(cards[index].id, isLike);\n\n        // Uploading if necessary\n        if (cards.length - index < 10){\n            loadCards();\n        }\n\n        store.dispatch(setIndex(index + 1));\n    };\n\n    let topCardIndex = index;\n    let bottomCardIndex = topCardIndex + 1;\n    return (\n\n        cards.length > 0 && topCardIndex < cards.length ?\n            <div>\n                <Card cardInfo={cards[topCardIndex]} onSwipeEnd={onSwipeEnd}/>\n                {\n                    bottomCardIndex < cards.length ?\n                        <CardView hasMargin={true} cardInfo={cards[bottomCardIndex]} />:\n                        <div/>\n                }\n            </div> :\n            <div >\n                <Card cardInfo={tempUser} onSwipeEnd={()=>{}}/>\n            </div>\n      \n    )\n};\n\nexport default Deck;\n","export function reload(events){\n    return {\n        type: \"RELOAD\",\n        events\n    }\n}\nexport function load(events){\n    return {\n        type: \"LOAD\",\n        events\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"SET_INDEX\",\n        index\n    }\n}","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nexport async function fetchEvents(categories=[1,6], isReload=false, is_personal=true )  {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.eventsState.page;\n    let size = requestState.eventsState.size;\n\n    let url = buildUrl(userId, categories, is_personal, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200){\n        return;\n    }\n\n    let newEventsJson = await response.json();\n    let newEvents = newEventsJson.content;\n    updateImageUrls(newEvents);\n    updateEventsState(isReload, newEvents);\n\n}\n\nfunction buildUrl(userId, categories, is_personal, page, size) {\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\n    return config.url + \"/user/\" + userId\n        + \"/events/selection?\" + categoriesParameter\n        + \"&is_personal=\" + is_personal\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\n\nfunction updateEventsState(isReload, newEvents) {\n    if (isReload) {\n        store.dispatch(reload(newEvents));\n    } else if (newEvents.length !== 0){\n        store.dispatch(load(newEvents));\n    }\n\n}\n\n\nfunction updateImageUrls(newEvents) {\n    newEvents.forEach((item) => {\n        item.images.forEach((imageItem) => {\n            imageItem.image = config.images_url + imageItem.image;\n        })\n    });\n}\n","import config from \"./api_config\"\n\nexport async function setRate(userId, eventId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n\nexport async function setUserRate(userId, otherUserId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                user_id: otherUserId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Events.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\nimport { setRate } from '../Api/Ratings';\nimport {setIndex} from \"../redux/actions/events-actions\";\nimport spinner from \"../assets/preloader.svg\";\n\nconst Events = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n    const index = useSelector(state => state.eventsState.index);\n\n    const [categories, setCategories] = useState([\"1\",\"6\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function loadEvents(){\n        await fetchEvents(categories);\n    }\n    async function setRateBy(eventId, isLike){\n        setRate(user.id, eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null || user != undefined)\n            if (events.length == 0){\n                setIsLoading(true);\n                loadEvents().then(\n                    () => {\n                        setIsLoading(false);\n                    }\n                );\n            }\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"container\">\n                {!isLoading && <Deck index={index} setIndex={setIndex} cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>}\n                {isLoading && <div className=\"spinner-preloader-forPeople\">\n                    <img src={spinner} alt=\"loading spinner\"/>\n                </div>}\n            </div>\n\n\n            <Bottom />\n        </Panel>\n    );\n};\n\nexport default Events;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        // async function fetchToken(){\n        //     let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n        //         \"app_id\": lol, \"scope\": \"friends\"});\n        //     setToken(tokenObject.access_token);\n        // }\n        //fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {user &&\n                        <div className=\"PersonalData\">\n                           <img src={user.photo_200 ? user.photo_200 : null} alt=\"Person\"/>\n\n                           <p>{user.first_name ? user.first_name : \"\"}</p>\n                           <p>{user.last_name ? (\" \" + user.last_name) : \"\" }</p>\n\n                            {\n                               /* token &&\n                                <p>\n                                    {token}\n                                </p>*/\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom/>\n        </Panel>\n    );\n};\n\nexport default Personal;\n","import React from 'react';\nimport store from \"../redux/store/store\";\n\nimport '../panels/panelsStyle/Grid.css';\nimport {setIndex} from '../redux/actions/events-actions';\nimport {changePanel} from \"../redux/actions/panel-actions\";\n\nimport panels from \"../panels.json\";\n\nconst GridEventList = ({data}) => {\n\n    const handleClick = e => {\n        let index = Number(e.currentTarget.dataset.index);\n        store.dispatch(setIndex(index));\n        store.dispatch(changePanel(panels.events));\n    };\n\n    return data.map (\n        (product, index) =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}\n               data-to=\"swipe\"\n               data-index={index}\n               onClick={handleClick}>\n                <img src={product.images[0].image ? product.images[0].image : null}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../Api/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                if (!isLoading){\n                    setIsLoading(true);\n                    loadEvents();\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    async function loadEvents(){\n        await fetchEvents(categoriesId);\n        setIsLoading(false);\n    }\n\n    async function deleteAndloadEvents(){\n        if (user != null || user !== undefined){\n            await fetchEvents(categoriesId,true);\n            setIsLoading(false);\n        }\n    }\n\n\n    useEffect(() => {\n        if (user != null || user !== undefined)\n            if (events.length === 0){\n                loadEvents();\n            }\n              \n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    const onModal = e => {\n        let modal = document.getElementById(\"filter_modal\");\n        if (modal.style.visibility == \"visible\") {\n            deleteAndloadEvents();\n        }\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\n    };\n\n    const onChangeFilterItemState = e => {\n        if (e.currentTarget.dataset.isactive == \"false\") {\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\n        }\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\n    };\n\n    const onCloseFilterEnvironment = e => {\n        if (e.target.id == \"filter_modal\") onModal(e);\n    };\n\n    return (\n        \n        <Panel id={id}>\n            <Header panelId={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {events &&\n                        <GridEventList data={events}/> }\n                </div>\n\n                <div className=\"Filter\" onClick={onModal}>\n                    <p>Фильтр</p>\n                </div>\n\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\n                    <div className=\"Filter-modal-content\">\n\n                        <div className=\"Filter-modal-header\">\n                            <p>Фильтр</p>\n                        </div>\n\n                        <div className=\"Filter-modal-categoriesTitle\">\n                            <p>Выберите тип мероприятия</p>\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\n                        </div>\n\n                        <div className=\"Filter-modal-categories\">\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\n                            </div>\n\n                        </div>\n\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\n                            <p>ОК</p>\n                        </div>\n\n                    </div>\n                </div>\n\n            <Bottom/>\n        </Panel>\n    );\n};\nexport default Grid;\n// function mapStateToProps(store) {\n//     return {\n//         user: store.userState.user\n//     }\n//   }\n//   export default connect(mapStateToProps)(Grid)\n","export function reload(people){\n    return {\n        type: \"PEOPLE_RELOAD\",\n        people\n    }\n}\nexport function load(people){\n    return {\n        type: \"PEOPLE_LOAD\",\n        people\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"PEOPLE_SET_INDEX\",\n        index\n    }\n}\n","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport {load, reload} from \"../redux/actions/people-actions\";\n\nexport async function fetchPeople(isReload = false)  {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.peopleState.page;\n    let size = requestState.peopleState.size;\n\n    let url = buildUrl(userId, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200){\n        return;\n    }\n\n    let newPeopleJson = await response.json();\n    let newPeople = newPeopleJson.content;\n\n    updateStore(isReload, newPeople);\n}\n\nfunction buildUrl(userId, page, size) {\n    return config.url + \"/user/\" + userId\n        + \"/users/all?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction updateStore(isReload, newPeople) {\n    if (isReload) {\n        store.dispatch(reload(newPeople));\n    } else {\n        if (newPeople.length !== 0)\n            store.dispatch(load(newPeople));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchPeople} from \"../Api/People\";\nimport { setUserRate } from '../Api/Ratings';\nimport {setIndex} from \"../redux/actions/people-actions\";\n\nconst People = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const people = useSelector(state => state.peopleState.people);\n    const index = useSelector(state => state.peopleState.index);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function loadPeople(){\n        if (!isLoading){\n            setIsLoading(true);\n            await fetchPeople(people.length === 0);\n            setIsLoading(false);\n        }\n         \n    }\n\n    async function setRateBy(otherUserId, isLike){\n        setUserRate(user.id, otherUserId, isLike );\n    }\n\n    const isUserLoaded = () => {\n        return user != null && user !== undefined;\n    };\n\n    // При получении user id, получаем ивенты\n    // useEffect(() => {\n    //     if (isUserLoaded() && people.length === 0){\n    //         loadPeople();\n    //     }\n    // }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        if (isUserLoaded() && people.length === 0)\n            loadPeople();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck index={index} setIndex={setIndex} cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\n\n            <Bottom/>\n        </Panel>\n    );\n};\n\nexport default People;\n","export function setAuthorizedUser(user){\n    return {\n        type: \"SET_AUTHORIZED_USER\",\n        user\n    }\n}","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport {setAuthorizedUser} from \"../redux/actions/user-actions\";\n\nexport async function authorize(user)  {\n    let url = `${config.url}/user/identify?user_id=${user.id}`;\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status === 200){\n        store.dispatch(setAuthorizedUser(user));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Events from './panels/Events';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./Api/Auth\";\nimport config from \"./Api/api_config.json\";\nimport settings from \"./Api/dev_settings.json\";\nimport {useSelector} from \"react-redux\";\n\nimport panels from \"./panels.json\"\n\nconst AppCulter = () => {\n    const activePanel = useSelector(state => state.panelState.active);\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : settings.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n            \n            await authorize(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id={panels.personal}/>\n            <Grid id={panels.grid}/>\n            <Events id={panels.events}/>\n            <People id={panels.people}/>\n            <Matches id={panels.matches}/>\n        </View>\n    );\n};\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Events from './panels/Events';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppCulter/>\n    </Provider>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventsRed.08ccde92.svg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3c9d0119.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationLeftButton.abf4fa91.svg\";"],"sourceRoot":""}