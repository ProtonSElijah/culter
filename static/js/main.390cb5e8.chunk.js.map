{"version":3,"sources":["icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","Components/Header.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Api/People.js","panels/Matches.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","panels/People.js","Api/Auth.js","AppCulter.js","index.js","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg","icons/swipeGrey.svg","icons/userGrey.svg"],"names":["module","exports","Header","panelTitle","panelId","className","toUpperCase","MatchedScrollList","list","map","person","key","src","photo_400_orig","alt","first_name","common_events","length","MatchedList","text","last_name","slice","Bottom","go","onClick","data-to","id","userDes","gridDes","swipeDes","eventDes","chatDes","fetchPeople","userId","a","async","page","size","url","config","fetch","method","fetchMatches","Matches","user","useState","matchedPeople","setMatchedPeople","setPage","useEffect","peopleResponse","json","newPeople","console","log","concat","content","loadMatches","document","getElementById","children","style","paddingTop","body","setProperty","EventInformationView","event","title","short_title","dates","time","start_time","date","Date","start_date","week","toLocaleDateString","weekday","day","month","PersonInformationView","liked_events","horizontalShift","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","CardView","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEventCard","hasOwnProperty","imageSource","images","image","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","state","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","setRate","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRate","otherUserId","user_id","Deck","setRateBy","cards","currentIndex","swipesCountFromUpload","loadCards","topCardIndex","bottomCardIndex","fetchEvents","categories","is_personal","categoriesParameter","join","Swipe","events","setEvents","loadEvents","eventsResponse","newEventsJson","newEvents","isLastPartition","undefined","Personal","fetchedUser","setUser","token","setToken","connect","sendPromise","fetchData","tokenObject","access_token","fetchToken","photo_200","GridEventList","data","product","data-name","name","Grid","dataEvents","setDataEvents","categoriesId","setCategoriesId","isLoading","setIsLoading","onModal","e","modal","visibility","deleteAndloadEvents","onChangeFilterItemState","currentTarget","dataset","isactive","splice","indexOf","classList","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","target","data-isactive","data-id","People","people","setPeople","loadPeople","authorize","AppCulter","activePanel","setActivePanel","to","is_dev","settings","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.390cb5e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.08ccde92.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nconst Header = ({panelId}) => {\n    let panelTitle = \"\";\n    switch (panelId) {\n        case \"personal\": panelTitle = \"Профиль\"; break;\n        case \"grid\": panelTitle = \"События\"; break;\n        case \"swipe\": panelTitle = \"События\"; break;\n        case \"people\": panelTitle = \"Люди\"; break;\n        case \"matches\": panelTitle = \"Диалоги\"; break;\n    }\n    return (\n        <div className=\"App-header\">\n            <div className=\"App-header-content\">\n                <p>{\"Culter\".toUpperCase()}</p>\n            </div>\n            <div className=\"App-header-bottomLine\"></div>\n            <div className=\"App-header-panelTitle\">\n                <p>{panelTitle}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.first_name}</div>\n                <div className=\"Cirle\">{person.common_events.length}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst MatchedList = ({list}) => {\n    const text = \"Я о моём последнем сообщении\";\n\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img src={person.photo_400_orig} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.first_name + \" \" + person.last_name}</b></div>\n                    {text.length > 26 &&\n                        <div className=\"PersonPlacesList\">\n                            {text.slice(0, 26) + \"..\"}\n                        </div>}\n                    {!(text.length > 26) &&\n                        <div className=\"PersonPlacesList\">\n                            {text}\n                        </div>}\n                </div>\n            </div>\n            <div className=\"BottomLine\"></div>\n        </div>\n    );\n\n   /* return list.map(\n        person =>\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\n                    {person.commonPlaces.toString().length > 25 &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\n                        </div>}\n                    {!(person.commonPlaces.toString().length > 25) &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString()}\n                        </div>}\n                </div>\n            </div>\n    );*/\n}\n\n\n/*    renderPlaces = () => {\n        let str = this.props.commonPlaces.toString();\n        if (str.length > 25)\n            str = str.slice(0, 25) + \"..\";\n        return str;\n    };\n\n    render() {\n        return (\n            <div className=\"Person\" key={this.props.key}>\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\n                    <div className=\"PersonPlacesList\">\n                        {this.renderPlaces()}\n                    </div>\n                </div>\n            </div>\n        );\n    }*/\nexport default MatchedList;\n","import React, {useState} from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDes from \"../icons/chatGrey.svg\";\nimport eventDes from \"../icons/eventGrey.svg\";\nimport gridDes from \"../icons/gridGrey.svg\";\nimport swipeDes from \"../icons/swipeGrey.svg\";\nimport userDes from \"../icons/userGrey.svg\";\n\nimport chatActive from \"../icons/chatRed.svg\";\nimport eventActive from \"../icons/eventRed.svg\";\nimport gridActive from \"../icons/gridRed.svg\";\nimport swipeActive from \"../icons/swipeRed.svg\";\nimport userActive from \"../icons/userRed.svg\";\n\nconst Bottom = ({go}) => {\n\n    return (\n        <div className=\"App-bottom\">\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\n                data-to=\"personal\">\n               <img id=\"personalButton\" src={userDes} alt=\"personal\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\n               <img id=\"gridButton\" src={gridDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\n                data-to=\"swipe\">\n               <img  id=\"swipeButton\" src={swipeDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\" onClick={go} data-to=\"people\">\n               <img id=\"peopleButton\" src={eventDes} alt=\"people\" />\n           </div>\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\n                data-to=\"matches\">\n               <img id=\"matchesButton\" src={chatDes} alt=\"matches\" />\n           </div>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\n}\n\nexport default Bottom;\n","import config from \"./api_config\"\n\nexport async function fetchPeople(userId, page=0, size=20)  {\n    let url = config.url + \"/user/\" + userId \n        + \"/users/all?\"\n        + \"&page=\" + page \n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}\n\nexport async function fetchMatches(userId, page=0, size=20) {\n    let url = config.url + \"/user/\" + userId \n        + \"/users/ratings?\"\n        + \"&page=\" + page \n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}","import React, { useState, useEffect } from 'react';\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {fetchMatches, fetchPeople} from \"../Api/People\";\n\nconst Matches = ({id, user, go}) => {\n    const [matchedPeople, setMatchedPeople] = useState([]);\n    const [page, setPage] = useState(0);\n    const [size, setSize] = useState(20);\n\n    async function loadMatches(){\n        let peopleResponse = await fetchMatches(user.id, page, size);\n        let newPeople = await peopleResponse.json();\n        console.log(newPeople);\n        setPage(page + 1);\n        setMatchedPeople(matchedPeople.concat(newPeople.content));\n    }\n\n    useEffect(() => {\n        if (user != null)\n            loadMatches();\n    }, [user]);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"Head\">\n                <p>{matchedPeople.length != 1 ?\n                \"\"+matchedPeople.length+\" новых совпадений\" :\n                   \"\" + matchedPeople.length + \" новое совпадение\"}</p>\n            </div>\n\n            <div className=\"ScrollContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedScrollList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <div className=\"Dialogues\">\n                <p>Диалоги</p>\n            </div>\n            <div className=\"ListContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <Bottom go={go}/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n/*<MatchedNavigationButtons\n               stateList = {isSelectedFriends}\n               stateRefresh = {onSwitchClick}\n               matchedList = {matchedPeople}\n               friendsList = {matchedFriends}/>*/\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({event}) => {\n    let title = event.short_title.length > 20 ?\n        event.short_title.slice(0,15) + \"...\" : event.short_title;\n\n    let isDateProvided = event.dates.length > 0;\n    if (!isDateProvided){\n        return  (\n            <div>\n                <p id=\"Font-bold\">{title}</p>\n            </div>\n        )\n    }\n    let time = event.dates[0].start_time.slice(0,event.dates[0].start_time.length-3);\n\n    let date = new Date(event.dates[0].start_date);\n\n    let week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\n    let day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\n\n    return  (\n        <div>\n            <p id=\"Font-bold\">{title}</p>\n                <p> {day}</p>\n                <p>{time} {week} </p>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst PersonInformationView = ({person}) => {\n\n    let wantedEvents = person.common_events.slice(0,5);\n\n    return  (\n\n        <div>\n            <p id=\"Font-bold\">{person.first_name}</p>\n\n            <p>Общих событий: {person.common_events.length}</p>\n            <p>Всего событий: {person.liked_events.length}</p>\n\n        </div>\n    )\n\n};\n\nexport default PersonInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({horizontalShift}) => {\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n    \n    return  (\n\n        <div className=\"Swipe-content-up-labels\">\n\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                Круто\n            </div>\n\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                Отстой\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\nimport EventInformationView from './EventInformationView';\nimport PersonInformationView from './PersonInformationView';\nimport ChoiceLabelsView from './ChoiceLabelsView';\n\n\nconst CardView = ({horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\n\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\n\n    let imageSource = isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n\n            <div className=\"Swipe-content-up\">\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\n\n                <div className=\"Swipe-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n    /*<div className=\"Swipe-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>*/\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./View/CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                          cardInfo={this.props.cardInfo}\n                          isSwiping={this.state.isSwiping}\n                          horizontalShift={this.state.horizontalShift}\n                          verticalShift={this.state.verticalShift}\n                          isUpperTouch={this.state.isUpperTouch}\n                            isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import config from \"./api_config\"\n\nexport async function setRate(userId, eventId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n\nexport async function setUserRate(userId, otherUserId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                user_id: otherUserId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport CardView from \"./View/CardView\";\nimport {setRate} from \"../Api/Ratings\";\n\nclass Deck extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentIndex: 0,\n            swipesCountFromUpload: 0\n        };\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\n    }\n\n     onSwipeEnd = async function(isLike) {\n        this.props.setRateBy(this.props.cards[this.state.currentIndex].id, isLike);\n\n        // Uploading if nessecary\n        if (this.state.swipesCountFromUpload == 10){\n            this.props.loadCards();\n            this.setState({\n                swipesCountFromUpload: 0\n            })\n        }\n\n        // Ticking index for next card and decreasing\n        this.setState({\n            currentIndex: this.state.currentIndex + 1,\n            swipesCountFromUpload: this.state.swipesCountFromUpload + 1\n        });\n\n\n    };\n\n    render() {\n\n        let cards = this.props.cards;\n        let topCardIndex = this.state.currentIndex;\n        let bottomCardIndex = topCardIndex + 1;\n        return (\n            cards.length > 0 && topCardIndex < cards.length ?\n                <div>\n                    <Card cardInfo={cards[topCardIndex]} onSwipeEnd={this.onSwipeEnd}/>\n                    {\n                        bottomCardIndex < cards.length ?\n                            <CardView cardInfo={cards[bottomCardIndex]}/>:\n                            <div/>\n                    }\n                </div> :\n                <div/>\n        );\n    }\n}\n\nexport default Deck;\n","import config from \"./api_config\"\n\nexport async function fetchEvents(userId, categories=[1,6], page=0, size=20, is_personal=true )  {\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\n    let url = config.url + \"/user/\" + userId \n        + \"/events/selection?\" + categoriesParameter \n        + \"&is_personal=\" + is_personal \n        + \"&page=\" + page \n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Swipe.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\nimport { setRate } from '../Api/Ratings';\n\nconst Swipe = ({id, go, user}) => {\n    const [events, setEvents] = useState([]);\n    const [page, setPage] = useState(0);\n    const [categories, setCategories] = useState([1,6]);\n    const [size, setSize] = useState(20);\n\n    async function loadEvents(){\n        let eventsResponse = await fetchEvents(user.id,categories,page,size);\n\n        let newEventsJson = await eventsResponse.json();\n        let newEvents = newEventsJson.content;\n\n        let isLastPartition = newEvents == undefined || newEvents.length < size;\n        if (isLastPartition){\n            setPage(0);\n        } else {\n            setPage(page + 1);\n        }\n\n        setEvents(events.concat(newEvents));\n\n    }\n    async function setRateBy(eventId, isLike){\n        setRate(user.id, eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null)\n            loadEvents();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>\n\n            <Bottom go={go}/>\n        </Panel>\n    );\n};\n\nexport default Swipe;\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id, go}) => {\n    const [fetchedUser, setUser] = useState(null);\n    const [token, setToken] = useState(null);\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        async function fetchToken(){\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n                \"app_id\": 7197573, \"scope\": \"friends\"});\n            setToken(tokenObject.access_token);\n        }\n        fetchData();\n        fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {fetchedUser &&\n                        <div className=\"PersonalData\">\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\n                           <p>\n                           {fetchedUser.first_name ? fetchedUser.first_name : \"\"}\n                           {fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }\n                           </p>\n                            {\n                                token &&\n                                <p>\n                                    {token}\n                                </p>\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom go={go}/>\n        </Panel>\n    );\n}\n\nexport default Personal;\n","import React from 'react';\n\nimport '../panels/panelsStyle/Grid.css';\n\nconst GridEventList = ({data}) => {\n    return data.map (\n        product =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}>\n                <img src={product.images[0].image ? product.images[0].image : null}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../Api/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id, go, user}) => {\n\n    const [dataEvents, setDataEvents] = useState([]);\n    const [page, setPage] = useState(0);\n    const [size, setSize] = useState(20);\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                if (!isLoading){\n                    setIsLoading(true);\n                    loadEvents();\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    async function loadEvents(){\n        let eventsResponse = await fetchEvents(user.id,categoriesId,page,size);\n\n        let newEvents = await eventsResponse.json();\n\n        setPage(page + 1);\n\n        setDataEvents(dataEvents.concat(newEvents.content));\n\n        setIsLoading(false);\n    }\n\n    async function deleteAndloadEvents(){\n        let eventsResponse = await fetchEvents(user.id,categoriesId,0,size);\n\n        let newEvents = await eventsResponse.json();\n\n        setPage(1);\n\n        setDataEvents(newEvents.content);\n    }\n\n\n    useEffect(() => {\n        if (user != null)\n            loadEvents();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    const onModal = e => {\n        let modal = document.getElementById(\"filter_modal\");\n        if (modal.style.visibility == \"visible\") {\n            deleteAndloadEvents();\n        }\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\n    }\n\n    const onChangeFilterItemState = e => {\n        if (e.currentTarget.dataset.isactive == \"false\") {\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\n        }\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\n    }\n\n    const onCloseFilterEnvironment = e => {\n        if (e.target.id == \"filter_modal\") onModal(e);\n    }\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {dataEvents &&\n                        <GridEventList data={dataEvents}/> }\n                </div>\n\n                <div className=\"Filter\" onClick={onModal}>\n                    <p>Фильтр</p>\n                </div>\n\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\n                    <div className=\"Filter-modal-content\">\n\n                        <div className=\"Filter-modal-header\">\n                            <p>Фильтр</p>\n                        </div>\n\n                        <div className=\"Filter-modal-categoriesTitle\">\n                            <p>Выберите тип мероприятия</p>\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\n                        </div>\n\n                        <div className=\"Filter-modal-categories\">\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\n                            </div>\n\n                        </div>\n\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\n                            <p>ОК</p>\n                        </div>\n\n                    </div>\n                </div>\n\n            <Bottom go={go}/>\n        </Panel>\n    );\n}\n\nexport default Grid;\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchPeople} from \"../Api/People\";\nimport { setUserRate } from '../Api/Ratings';\n\nconst People = ({id, go, user}) => {\n    const [people, setPeople] = useState([]);\n    const [page, setPage] = useState(0);\n    const [categories, setCategories] = useState([1,6]);\n    const [size, setSize] = useState(20);\n\n    async function loadPeople(){\n        let peopleResponse = await fetchPeople(user.id, page, size);\n        let newPeople = await peopleResponse.json();\n\n        setPage(page + 1);\n        setPeople(people.concat(newPeople.content));\n\n    }\n\n    async function setRateBy(otherUserId, isLike){\n        setUserRate(user.id, otherUserId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null)\n            loadPeople();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\n\n            <Bottom go={go}/>\n        </Panel>\n    );\n};\n\nexport default People;\n","import config from \"./api_config\"\n\nexport async function authorize(userId)  {\n    let url = `${config.url}/user/identify?user_id=${userId}`;\n    return fetch(url, {method: \"GET\",});\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Swipe from './panels/Swipe';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./Api/Auth\";\nimport config from \"./Api/api_config.json\";\nimport settings from \"./Api/dev_settings.json\";\n\nconst AppCulter = () => {\n    const [activePanel, setActivePanel] = useState('swipe');\n    const [user, setUser] = useState(null);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : settings.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n\n            await authorize(fetchedUser.id);\n            setUser(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id='personal' go={go} />\n            <Grid user={user} id=\"grid\" go={go} />\n            <Swipe user={user} id='swipe' go={go} />\n            <People user={user} id='people' go={go} />\n            <Matches user={user} id='matches' go={go} />\n        </View>\n    );\n}\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Swipe from './panels/Swipe';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<AppCulter />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";"],"sourceRoot":""}