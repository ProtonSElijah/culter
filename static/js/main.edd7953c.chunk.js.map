{"version":3,"sources":["icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","Components/Header.js","Components/MatchedNavigationButtons.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Components/ExportMatchedPeople.js","Components/ExportMatchedFriends.js","panels/Matches.js","Components/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","Api/Auth.js","AppCulter.js","index.js","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg","icons/swipeGrey.svg","icons/userGrey.svg"],"names":["module","exports","Header","text","className","toUpperCase","MatchedNavigationButtons","stateList","stateRefresh","matchedList","friendsList","RefreshButtons","value","document","getElementById","classList","toggle","id","onClick","length","MatchedScrollList","list","map","person","key","src","imgLink","alt","firstName","commonPlacesCount","MatchedList","lastName","slice","Bottom","go","data-to","userDes","gridDes","swipeDes","eventDes","chatDes","matchedPeople","commonPlaces","matchedFriends","Matches","useState","isSelectedFriends","setIsSelectedFriends","useEffect","a","children","style","paddingTop","refreshHeaderVK","CardView","horizontalShift","verticalShift","hasMargin","isUpperTouch","cardInfo","contentStyle","isTransition","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","images","image","short_title","Card","props","onTouch","event","touches","changedTouches","i","previousX","state","currentX","previousY","currentY","updatedState","clientX","clientY","isFirstTouch","setState","onTouchStart","preventDefault","isSwiping","onTouchEnd","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","height","bind","onTouchMove","this","Component","setRate","userId","eventId","isLiked","url","config","fetch","method","headers","body","JSON","stringify","event_id","is_liked","Deck","setRateBy","events","currentIndex","swipesCountFromUpload","loadEvents","index","fetchEvents","Swipe","user","setEvents","eventsResponse","json","newEvents","concat","content","Personal","fetchedUser","setUser","token","setToken","connect","sendPromise","tokenObject","access_token","fetchData","fetchToken","photo_200","first_name","last_name","GridEventList","data","product","data-name","name","Grid","dataEvents","setDataEvents","window","addEventListener","e","target","onModal","modal","visibility","onScroll","elem","currentTarget","scrollHeight","clientHeight","scrollTop","err","console","log","authorize","AppCulter","activePanel","setActivePanel","dataset","to","is_dev","user_id","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.edd7953c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.b64b72cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.2f9e85a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","import React from 'react';\r\nimport './ComponentsStyle/Header.css';\r\n\r\nconst Header = ({text}) => {\r\n    return (\r\n        <div className=\"App-header\">\r\n            <p>{text.toUpperCase()}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst MatchedNavigationButtons = ({stateList, stateRefresh, matchedList, friendsList}) => {\r\n\r\n    const onSwitchMatched = () => {stateRefresh(true); RefreshButtons(true)};\r\n    const onSwitchFriends = () => {stateRefresh(false); RefreshButtons(false)};\r\n\r\n    const RefreshButtons = (value) => {\r\n        document.getElementById(\"matchedButton\").classList.toggle(\"NavigationButtonsActive\", value);\r\n        document.getElementById(\"friendsButton\").classList.toggle(\"NavigationButtonsActive\", !value);\r\n        document.getElementById(\"matchedButton\").classList.toggle(\"NavigationButtonsDefault\", !value);\r\n        document.getElementById(\"friendsButton\").classList.toggle(\"NavigationButtonsDefault\", value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"NavigationButtons\">\r\n            <button\r\n                id=\"matchedButton\"\r\n                className=\"NavigationButtonsActive\"\r\n                onClick={onSwitchMatched}>\r\n                    {matchedList.length} людей\r\n            </button>\r\n            <button\r\n                id=\"friendsButton\"\r\n                className=\"NavigationButtonsDefault\"\r\n                onClick={onSwitchFriends}>\r\n                    {friendsList.length} друг\r\n                </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchedNavigationButtons;\r\n","import React from 'react';\r\n\r\nconst MatchedScrollList = ({list}) => {\r\n    return list.map(\r\n        person =>\r\n        <div className=\"ScrollContainerContent\" key={person.key}>\r\n            <div className=\"ScrollPerson\">\r\n                <img src={person.imgLink} alt=\"Person\" className=\"ScrollPeopleImg\"/>\r\n                <div>{person.firstName}</div>\r\n                <div className=\"Cirle\">{person.commonPlacesCount}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchedScrollList;\r\n","import React, {useState} from 'react';\r\n\r\nconst MatchedList = ({list}) => {\r\n    const text = \"Я о моём последнем сообщении\";\r\n\r\n    return list.map(\r\n        person =>\r\n        <div className=\"PersonContainer\">\r\n            <div className=\"Person\" key={person.key}>\r\n                <img src={person.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\r\n                    {text.length > 26 &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {text.slice(0, 26) + \"..\"}\r\n                        </div>}\r\n                    {!(text.length > 26) &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {text}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"BottomLine\"></div>\r\n        </div>\r\n    );\r\n\r\n   /* return list.map(\r\n        person =>\r\n            <div className=\"Person\" key={person.key}>\r\n                <img src={person.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\r\n                    {person.commonPlaces.toString().length > 25 &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\r\n                        </div>}\r\n                    {!(person.commonPlaces.toString().length > 25) &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {person.commonPlaces.toString()}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n    );*/\r\n}\r\n\r\n\r\n/*    renderPlaces = () => {\r\n        let str = this.props.commonPlaces.toString();\r\n        if (str.length > 25)\r\n            str = str.slice(0, 25) + \"..\";\r\n        return str;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Person\" key={this.props.key}>\r\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\r\n                    <div className=\"PersonPlacesList\">\r\n                        {this.renderPlaces()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }*/\r\nexport default MatchedList;\r\n","import React, {useState} from 'react';\r\nimport './ComponentsStyle/Bottom.css';\r\n\r\nimport chatDes from \"../icons/chatGrey.svg\";\r\nimport eventDes from \"../icons/eventGrey.svg\";\r\nimport gridDes from \"../icons/gridGrey.svg\";\r\nimport swipeDes from \"../icons/swipeGrey.svg\";\r\nimport userDes from \"../icons/userGrey.svg\";\r\n\r\nimport chatActive from \"../icons/chatRed.svg\";\r\nimport eventActive from \"../icons/eventRed.svg\";\r\nimport gridActive from \"../icons/gridRed.svg\";\r\nimport swipeActive from \"../icons/swipeRed.svg\";\r\nimport userActive from \"../icons/userRed.svg\";\r\n\r\nconst Bottom = ({go}) => {\r\n\r\n    return (\r\n        <div className=\"App-bottom\">\r\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\r\n                data-to=\"personal\">\r\n               <img id=\"personalButton\" src={userDes} alt=\"personal\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\r\n               <img id=\"gridButton\" src={gridDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\r\n                data-to=\"swipe\">\r\n               <img  id=\"swipeButton\" src={swipeDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\">\r\n               <img id=\"peopleButton\" src={eventDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\r\n                data-to=\"matches\">\r\n               <img id=\"matchesButton\" src={chatDes} alt=\"matches\" />\r\n           </div>\r\n        </div>\r\n    );\r\n    //Переключатель - две кнопки\r\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\r\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\r\n}\r\n\r\nexport default Bottom;\r\n","const matchedPeople = [\r\n    {\r\n        key: \"1\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"2\",\r\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n        firstName: \"Никита\",\r\n        lastName: \"Башкин\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Концерт Замая\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"3\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"4\",\r\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n        firstName: \"Никита\",\r\n        lastName: \"Башкин\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Концерт Замая\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"5\",\r\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n        firstName: \"Никита\",\r\n        lastName: \"Башкин\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Концерт Замая\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"6\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"7\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"8\",\r\n        imgLink: \"https://sun9-45.userapi.com/c854528/v854528685/d255a/ooAN1guMTAc.jpg\",\r\n        firstName: \"Данила\",\r\n        lastName: \"Сергачев\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Рок\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"9\",\r\n        imgLink: \"https://sun9-44.userapi.com/c848536/v848536553/153b99/ypLiVUE1jZA.jpg\",\r\n        firstName: \"Илья\",\r\n        lastName: \"Курнаков\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Треп\"\r\n        ]\r\n    }];\r\n\r\n\r\nexport default matchedPeople;\r\n","const matchedFriends = [\r\n    {\r\n        key: \"0\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    }];\r\n\r\nexport default matchedFriends;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from \"../Components/Header\";\r\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\r\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\r\nimport MatchedList from \"../Components/MatchedList\";\r\nimport Bottom from \"../Components/Bottom\";\r\n\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Matches.css';\r\n\r\nimport matchedPeople from \"../Components/ExportMatchedPeople\";\r\nimport matchedFriends from \"../Components/ExportMatchedFriends\";\r\n\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\n\r\nconst Matches = ({id, go}) => {\r\n    const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\r\n\r\n    const onSwitchClick = (value) => {setIsSelectedFriends(value);}\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header text={id}/>\r\n            <div className=\"Head\">\r\n                <p>Новые совпадения</p>\r\n            </div>\r\n            <MatchedNavigationButtons\r\n                stateList = {isSelectedFriends}\r\n                stateRefresh = {onSwitchClick}\r\n                matchedList = {matchedPeople}\r\n                friendsList = {matchedFriends}/>\r\n            <div className=\"ScrollContainer\">\r\n                <MatchedScrollList\r\n                       list={isSelectedFriends\r\n                            ? matchedPeople\r\n                            : matchedFriends} />\r\n            </div>\r\n            <div className=\"Head\">\r\n                <p>Диалоги</p>\r\n            </div>\r\n            <div className=\"ListContainer\">\r\n                <MatchedList\r\n                       list = {isSelectedFriends\r\n                            ? matchedPeople\r\n                            : matchedFriends} />\r\n            </div>\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Matches;\r\n","import React, {Component} from 'react';\r\nimport './ComponentsStyle/CardView.css'\r\n\r\nconst CardView = ({horizontalShift, verticalShift, hasMargin, isUpperTouch, cardInfo,isTransition}) => {\r\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\r\n    let contentStyle = {\r\n            \"transform\": \"rotate(\" + rotationCoefficient * horizontalShift / 15 + \"deg)\" +\r\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\r\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\r\n        };\r\n\r\n    if (hasMargin) {\r\n        contentStyle[\"margin-top\"] =  \"-80vmax\";\r\n    }\r\n\r\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\r\n    let labelStyles = {\r\n        left :{\r\n            opacity: horizontalShift < 0 ? labelOpacity : 0\r\n        },\r\n        right :{\r\n            opacity: horizontalShift > 0 ? labelOpacity : 0\r\n        }};\r\n\r\n\r\n    return  (\r\n\r\n        <div className=\"Swipe-content\" style={contentStyle}>\r\n            <div className=\"Swipe-content-up\">\r\n                <div className=\"Swipe-content-up-labels\">\r\n                    <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\r\n                        Круто\r\n                    </div>\r\n                    <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\r\n                        Отстой\r\n                    </div>\r\n                </div>\r\n                <img className=\"Swipe-content-up-image\"\r\n                     src={cardInfo.images[0].image}/>\r\n            </div>\r\n            <div className=\"Swipe-content-down\">\r\n                <p id=\"Font-bold\"><b>{cardInfo.short_title}</b></p>\r\n                <p><b>4</b> апреля, суббота, <b>20:00</b></p>\r\n                <p><b>20</b> человек идёт - <b>1</b> друг</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default CardView;\r\n","import React, {Component} from 'react';\r\nimport './ComponentsStyle/Card.css'\r\nimport CardView from \"./CardView\";\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentX: 0,\r\n            currentY: 0,\r\n            horizontalShift: 0,\r\n            verticalShift: 0,\r\n            isFirstTouch: true,\r\n            isSwiping: false,\r\n            height: 0\r\n        };\r\n        this.animatePick = this.animatePick.bind(this);\r\n        this.resetCard = this.resetCard.bind(this);\r\n    }\r\n\r\n    onTouch = (event) => {  \r\n\r\n        let touches = event.changedTouches;\r\n        for (let i = 0; i < touches.length; i++){\r\n            let previousX = this.state.currentX;\r\n            let previousY = this.state.currentY;\r\n\r\n            let updatedState = {\r\n                currentX: touches[i].clientX,\r\n                currentY: touches[i].clientY,\r\n            };\r\n\r\n            if (this.state.isFirstTouch){\r\n                updatedState.isUpperTouch = touches[i].clientY > 300;\r\n                updatedState.isFirstTouch = false;\r\n            } else {\r\n                updatedState.horizontalShift = this.state.horizontalShift + touches[i].clientX - previousX;\r\n                updatedState.verticalShift = this.state.verticalShift + touches[i].clientY - previousY;\r\n            }\r\n\r\n            this.setState(updatedState);\r\n        }\r\n    };\r\n\r\n    onTouchStart = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isFirstTouch: true,\r\n            isSwiping: true,\r\n            isTransition: false\r\n        });\r\n    };\r\n\r\n\r\n\r\n    onTouchEnd = (event) => {\r\n        if (Math.abs(this.state.horizontalShift) > 100){\r\n            let isLike= this.state.horizontalShift > 0;\r\n\r\n            this.animatePick();\r\n\r\n            let thisHandler = this;\r\n            setTimeout(() => {\r\n                thisHandler.resetCard();\r\n                thisHandler.props.onSwipeEnd(isLike);\r\n            },400);\r\n\r\n\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    horizontalShift: 0,\r\n                    verticalShift: 0,\r\n                    currentX: 0,\r\n                    currentY: 0,\r\n                    isSwiping: false,\r\n                    isTransition: true\r\n                });\r\n        }\r\n\r\n    };\r\n\r\n    // Перемещает карту в сторону свайпа\r\n    animatePick = () => {\r\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\r\n        this.setState({\r\n            isTransition: true\r\n        });\r\n        this.setState({\r\n            horizontalShift: this.state.horizontalShift * 5,\r\n            verticalShift: this.state.verticalShift * 5,\r\n        });\r\n    };\r\n\r\n    // Возвращает карту в начальное положение\r\n    resetCard = () => {\r\n        this.setState({\r\n            isTransition: false,\r\n            horizontalShift: 0,\r\n            verticalShift: 0,\r\n            currentX: 0,\r\n            currentY: 0,\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div\r\n                className=\"Swipe-main\"\r\n                 onTouchMove={this.onTouch}\r\n                 onTouchEnd={this.onTouchEnd}\r\n                 onTouchStart={this.onTouchStart}>\r\n                <CardView\r\n                          cardInfo={this.props.cardInfo}\r\n                          isSwiping={this.state.isSwiping}\r\n                          horizontalShift={this.state.horizontalShift}\r\n                          verticalShift={this.state.verticalShift}\r\n                          isUpperTouch={this.state.isUpperTouch}\r\n                            isTransition={this.state.isTransition}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import config from \"./api_config\"\r\n\r\nexport async function setRate(userId, eventId, isLiked)  {\r\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify([\r\n            {\r\n                event_id: eventId,\r\n                is_liked: isLiked\r\n            }\r\n        ])\r\n    });\r\n}\r\n","import React, {Component} from 'react';\r\nimport Card from \"./Card\";\r\nimport CardView from \"./CardView\";\r\nimport {setRate} from \"../Api/Ratings\";\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentIndex: 0,\r\n            swipesCountFromUpload: 0\r\n        };\r\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\r\n    }\r\n    \r\n     onSwipeEnd = async function(isLike) {\r\n        this.props.setRateBy(this.props.events[this.state.currentIndex].id, isLike);\r\n\r\n        // Uploading if nessecary\r\n        if (this.state.swipesCountFromUpload == 10){\r\n            this.props.loadEvents();\r\n            this.setState({\r\n                swipesCountFromUpload: 0\r\n            })\r\n        }\r\n\r\n        // Ticking index for next card and decreasing \r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            swipesCountFromUpload: this.state.swipesCountFromUpload + 1\r\n        });\r\n\r\n        \r\n    };\r\n\r\n    render() {\r\n\r\n        let events = this.props.events;\r\n        let index = this.state.currentIndex;\r\n        return (\r\n\r\n                events.length !== 0 ?\r\n                <div>\r\n                    <Card cardInfo={events[index]} onSwipeEnd={this.onSwipeEnd}/>\r\n                    <CardView hasMargin={true} cardInfo={events[index+1]}/>\r\n                </div>\r\n                    : <div>\r\n\r\n                    </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Deck;\r\n","import config from \"./api_config\"\r\n\r\nexport async function fetchEvents(userId)  {\r\n    let url = config.url + \"/user/\" + userId + \"/events/selection?category_id=1&category_id=6&is_personal=true\";\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Swipe.css';\r\nimport Deck from \"../Components/Deck\";\r\nimport {fetchEvents} from \"../Api/Events\";\r\nimport { setRate } from '../Api/Ratings';\r\n\r\nconst Swipe = ({id, go, user}) => {\r\n    const [events, setEvents] = useState([]);\r\n\r\n    async function loadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id);\r\n        let newEvents = await eventsResponse.json();\r\n        \r\n        setEvents(events.concat(newEvents.content));\r\n    }\r\n\r\n    async function setRateBy(eventId, isLike){\r\n        setRate(user.id, eventId, isLike );\r\n    }\r\n\r\n    // При получении user id, получаем ивенты\r\n    useEffect(() => {\r\n        if (user != null) \r\n            loadEvents();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header text={id}/>\r\n            <Deck events={events} loadEvents={loadEvents} setRateBy={setRateBy}/>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Swipe;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport './panelsStyle/Personal.css';\r\n\r\n\r\nconst Personal = ({id, go}) => {\r\n    const [fetchedUser, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n        }\r\n        refreshHeaderVK();\r\n        async function fetchData() {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n        }\r\n\r\n        async function fetchToken(){\r\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\r\n                \"app_id\": 7197573, \"scope\": \"friends\"});\r\n            setToken(tokenObject.access_token);\r\n        }\r\n        fetchData();\r\n        fetchToken();\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header text={id}></Header>\r\n            <div className=\"PersonalContent\">\r\n                <div className=\"PersonalBlock\">\r\n                       {fetchedUser &&\r\n                        <div className=\"PersonalData\">\r\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\r\n                           <p>\r\n                           {fetchedUser.first_name ? fetchedUser.first_name : \"\"}\r\n                           {fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }\r\n                           </p>\r\n                            {\r\n                                token &&\r\n                                <p>\r\n                                    {token}\r\n                                </p>\r\n                            }\r\n                        </div>\r\n                        }\r\n                </div>\r\n            </div>\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Personal;\r\n","import React from 'react';\r\n\r\nimport '../panels/panelsStyle/Grid.css';\r\n\r\nconst GridEventList = ({data}) => {\r\n    return data.map (\r\n        product =>\r\n            <div className=\"Grid-eventCell\"\r\n               data-name={product.name ? product.name : \"unknown\"}>\r\n                <img src={product.images[0].image ? product.images[0].image : null}/>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default GridEventList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\n\r\nimport GridEventList from \"../Components/GridEventList\";\r\n\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Grid.css';\r\n\r\nimport {fetchEvents} from \"../Api/Events\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\n\r\nconst Grid = ({id, go, user}) => {\r\n\r\n    const [dataEvents, setDataEvents] = useState([]);\r\n\r\n    const uploadData = e => {\r\n        let elem = e.currentTarget;\r\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\r\n            try {\r\n                loadEvents();\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    async function loadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id);\r\n        let newEvents = await eventsResponse.json();\r\n\r\n        setDataEvents(dataEvents.concat(newEvents.content));\r\n    }\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadEvents();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n        }\r\n        refreshHeaderVK();\r\n\r\n        window.addEventListener(\"click\", function(e) {\r\n            if (e.target.id == \"filter_modal\") {\r\n                onModal(e);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const onModal = e => {\r\n        let modal = document.getElementById(\"filter_modal\");\r\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header text={id}/>\r\n\r\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\r\n                    {dataEvents &&\r\n                        <GridEventList data={dataEvents}/> }\r\n                </div>\r\n\r\n                <div className=\"Filter\" onClick={onModal}>\r\n                    <p>Фильтр</p>\r\n                </div>\r\n\r\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} >\r\n                    <div className=\"Filter-modal-content\">\r\n                        <div className=\"Filter-modal-header\">\r\n                            <p>Фильтр</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Grid;\r\n","import config from \"./api_config\"\r\n\r\nexport async function authorize(userId)  {\r\n    let url = `${config.url}/user/identify?user_id=${userId}`;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\n\r\nimport Personal from './panels/Personal';\r\nimport Swipe from './panels/Swipe';\r\nimport Matches from './panels/Matches';\r\nimport Grid from './panels/Grid';\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './ResetBrowser.css';\r\nimport {authorize} from \"./Api/Auth\";\r\nimport config from \"./Api/api_config.json\";\r\n\r\nconst AppCulter = () => {\r\n    const [activePanel, setActivePanel] = useState('swipe');\r\n    const [user, setUser] = useState(null);\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let fetchedUser = config.is_dev ?\r\n                {'id' : config.user_id} :\r\n                await connect.sendPromise('VKWebAppGetUserInfo');\r\n\r\n            await authorize(fetchedUser.id);\r\n            setUser(fetchedUser);\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <View activePanel={activePanel}>\r\n            <Personal id='personal' go={go} />\r\n            <Grid user={user} id=\"grid\" go={go} />\r\n            <Swipe user={user} id='swipe' go={go} />\r\n            <Matches id='matches' go={go} />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default AppCulter;\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\n//import App from './App';\r\n//import Test from './Test';\r\nimport Matches from './panels/Matches';\r\nimport Swipe from './panels/Swipe';\r\n// import registerServiceWorker from './sw';\r\nimport AppCulter from './AppCulter';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<AppCulter />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.c04b6039.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeGrey.2be3924b.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";"],"sourceRoot":""}