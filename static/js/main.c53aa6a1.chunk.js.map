{"version":3,"sources":["icons/swipeGrey.svg","icons/userGrey.svg","icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","icons/eventAnnotationLeftButton.svg","icons/eventAnnotationRightButton.svg","Components/Header.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Api/Matches.js","panels/Matches.js","redux/reducers/events-reducer.js","redux/reducers/user-reducer.js","redux/reducers/people-reducer.js","redux/reducers/combine.js","redux/store/store.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/CardView.js","Components/Card.js","Api/Ratings.js","redux/actions/events-actions.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","redux/actions/people-actions.js","Api/People.js","panels/People.js","redux/actions/user-actions.js","Api/Auth.js","AppCulter.js","index.js","icons/culterIcon.svg","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg"],"names":["module","exports","Header","panelTitle","panelId","className","src","IconApp","alt","MatchedScrollList","list","map","person","key","photo_400_orig","first_name","common_events","length","MatchedList","text","last_name","href","id","slice","Bottom","go","activePanel","onClick","data-to","userActive","userDes","gridActive","gridDes","swipeActive","swipeDes","eventActive","eventDes","chatActive","chatDes","fetchMatches","userId","a","async","page","size","url","config","fetch","method","Matches","user","useSelector","state","userState","useState","matchedPeople","setMatchedPeople","setPage","loadMatches","peopleResponse","json","newPeople","concat","content","useEffect","document","getElementById","children","style","paddingTop","body","setProperty","initialState","events","index","action","type","people","reducers","combineReducers","eventsState","eventsReducer","userReducer","peopleState","peopleReducer","store","createStore","EventInformationView","event","title","short_title","isDateProvided","dates","date","time","week","day","start_time","Date","start_date","toLocaleDateString","weekday","month","PersonInformationView","horizontalShift","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","CardView","hasMargin","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEventCard","hasOwnProperty","imageSource","images","image","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","setRate","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRate","otherUserId","user_id","setIndex","Deck","cards","loadCards","setRateBy","topCardIndex","bottomCardIndex","dispatch","fetchEvents","categories","isReload","is_personal","requestState","getState","getUrl","response","status","newEventsJson","newEvents","updateEventsState","categoriesParameter","join","load","Swipe","loadEvents","undefined","Personal","fetchedUser","setUser","connect","sendPromise","fetchData","photo_200","GridEventList","data","handleClick","e","Number","currentTarget","dataset","product","data-name","name","data-index","Grid","categoriesId","setCategoriesId","isLoading","setIsLoading","onModal","modal","visibility","onChangeFilterItemState","isactive","splice","indexOf","classList","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","console","log","target","data-isactive","data-id","fetchPeople","createUrl","newPeopleJson","updateStore","People","loadPeople","isUserLoaded","setAuthorizedUser","authorize","AppCulter","setActivePanel","to","is_dev","settings","send","ReactDOM","render"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,6UCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,wD,0dC4B5BC,EAvBA,SAAC,GAAe,IACvBC,EAAa,GACjB,OAF0B,EAAbC,SAGT,IAAK,WAAYD,EAAa,6CAAW,MACzC,IAAK,OACL,IAAK,QAASA,EAAa,6CAAW,MACtC,IAAK,SAAUA,EAAa,2BAAQ,MACpC,IAAK,UAAWA,EAAa,6CAEjC,OACI,yBAAKE,UAAU,cACX,yBAAKA,UAAU,sBACZ,yBAAKC,IAAKC,IAASC,IAAI,SACtB,2BAAI,WAER,yBAAKH,UAAU,0BACf,yBAAKA,UAAU,yBACX,2BAAIF,MCPLM,EAbW,SAAC,GACvB,OADkC,EAAVC,KACZC,KACR,SAAAC,GAAM,OACN,yBAAKP,UAAU,yBAAyBQ,IAAKD,EAAOC,KAChD,yBAAKR,UAAU,gBACX,yBAAKC,IAAKM,EAAOE,eAAgBN,IAAI,SAASH,UAAU,oBACxD,6BAAMO,EAAOG,YACb,yBAAKV,UAAU,SAASO,EAAOI,cAAcC,cC2D9CC,EAlEK,SAAC,GAAY,IAAXR,EAAU,EAAVA,KACZS,EAAO,2GAEb,OAAOT,EAAKC,KACR,SAAAC,GAAM,OACN,yBAAKP,UAAU,mBACX,yBAAKA,UAAU,SAASQ,IAAKD,EAAOC,KAChC,yBAAKP,IAAKM,EAAOE,eAAgBN,IAAK,iBACtC,yBAAKH,UAAU,cACX,yBAAKA,UAAU,cAAa,2BAAIO,EAAOG,WAAa,IAAMH,EAAOQ,YAChED,EAAKF,OAAS,IACX,uBAAGZ,UAAU,mBAAmBgB,KAAM,yBAA2BT,EAAOU,IACnEH,EAAKI,MAAM,EAAG,IAAM,QAE1BJ,EAAKF,OAAS,KACb,uBAAGZ,UAAU,mBAAmBgB,KAAM,yBAA2BT,EAAOU,IACnEH,KAIjB,yBAAKd,UAAU,oB,0LCuBZmB,EA9BA,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YAEjB,OAEI,yBAAKrB,UAAU,cACZ,yBAAKA,UAAU,qCAAqCsB,QAASF,EACxDG,UAAQ,YACT,yBAAKN,GAAG,iBAAiBhB,IAAoB,YAAfoB,EAA4BG,IAAaC,IAAStB,IAAI,cAExF,yBAAKH,UAAU,wCAAwCsB,QAASF,EAAIG,UAAQ,QACxE,yBAAKN,GAAG,aAAahB,IAAoB,QAAfoB,EAAwBK,IAAaC,IAASxB,IAAI,WAEhF,yBAAKH,UAAU,yCAAyCsB,QAASF,EAC5DG,UAAQ,SACT,yBAAMN,GAAG,cAAchB,IAAoB,SAAfoB,EAAyBO,IAAcC,IAAU1B,IAAI,WAErF,yBAAKH,UAAU,yCAAyCsB,QAASF,EAAIG,UAAQ,UACzE,yBAAKN,GAAG,eAAehB,IAAoB,UAAfoB,EAA0BS,IAAcC,IAAU5B,IAAI,YAEtF,yBAAKH,UAAU,qCAAqCsB,QAASF,EACxDG,UAAQ,WACT,yBAAKN,GAAG,gBAAgBhB,IAAoB,WAAfoB,EAA2BW,IAAaC,IAAS9B,IAAI,e,wCClC1F,SAAe+B,EAAaC,GAA5B,+BAAAC,EAAAC,OAAA,uDAAoCC,EAApC,+BAAyC,EAAGC,EAA5C,+BAAiD,GAChDC,EAAMC,EAAOD,IAAM,SAAWL,EAC5B,wBACWG,EACX,SAAWC,EAJd,kBAKIG,MAAMF,EAAK,CAACG,OAAQ,SALxB,qCCaP,IAkEeC,EAlEC,SAAC,GAA2B,IAA1B3B,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YAChBwB,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,QADX,EAEGI,mBAAS,IAFZ,mBAEhCC,EAFgC,KAEjBC,EAFiB,OAGfF,mBAAS,GAHM,mBAGhCX,EAHgC,KAG1Bc,EAH0B,OAIfH,mBAAS,IAJM,mBAIhCV,EAJgC,UAMvC,SAAec,IAAf,iBAAAjB,EAAAC,OAAA,kEAAAD,EAAA,MAC+BF,EAAaW,EAAK5B,GAAIqB,EAAMC,IAD3D,cACQe,EADR,kBAAAlB,EAAA,MAE0BkB,EAAeC,QAFzC,OAEQC,EAFR,OAIIJ,EAAQd,EAAO,GACfa,EAAiBD,EAAcO,OAAOD,EAAUE,UALpD,qCA6BA,OArBAC,qBAAU,WACM,MAARd,GACAQ,MACL,CAACR,IAEJc,qBAAU,WACN,EAAAvB,EAAAC,OAAA,gDACIuB,SAASC,eAAe5C,GAAI6C,SAAS,GAAGC,MAAMC,WAAa,EAC3DJ,SAASK,KAAKF,MAAMG,YAAY,oBAAqB,SAFzD,qCAKY,MAARrB,GACAQ,MACL,IASC,kBAAC,IAAD,CAAOpC,GAAIA,GACP,kBAAC,EAAD,CAAQlB,QAASkB,IACjB,yBAAKjB,UAAU,QACX,2BAA4B,GAAxBkD,EAActC,OACfsC,EAActC,OAAO,+FAChBsC,EAActC,OAAS,iGAGnC,yBAAKZ,UAAU,mBACVkD,EAActC,OAAS,EACpB,kBAAC,EAAD,CACIP,KAAM6C,IACV,+BAGR,yBAAKlD,UAAU,aACX,4FAEJ,yBAAKA,UAAU,iBACVkD,EAActC,OAAS,EACpB,kBAAC,EAAD,CACIP,KAAM6C,IACV,+BAGR,kBAAC,EAAD,CAAQ9B,GAAIA,EAAIC,YAAaA,M,iBC5EnC8C,EAAe,CACjBC,OAAQ,GACR9B,KAAM,EACNC,KAAM,GACN8B,MAAO,GAmBID,MAjBf,WAA4C,IAA5BrB,EAA2B,uDAArBoB,EAAcG,EAAO,uCACvC,OAAOA,EAAOC,MACV,IAAK,SAGD,OAFAxB,EAAMqB,OAASE,EAAOF,OACtBrB,EAAMT,KAAO,EACNS,EACX,IAAK,OAGD,OAFAA,EAAMqB,OAASrB,EAAMqB,OAAOX,OAAOa,EAAOF,QAC1CrB,EAAMT,KAAOS,EAAMT,KAAO,EACnBS,EACX,IAAK,YAED,OADAA,EAAMsB,MAAQC,EAAOD,MACdtB,EAEf,OAAOA,GCpBLoB,EAAe,CACjBtB,KAAM,MAYKA,MATf,WAA0C,IAA5BE,EAA2B,uDAArBoB,EAAcG,EAAO,uCACrC,OAAOA,EAAOC,MACV,IAAK,sBAED,OADAxB,EAAMF,KAAOyB,EAAOzB,KACbE,EAEf,OAAOA,GCVLoB,EAAe,CACjBK,OAAQ,GACRlC,KAAM,EACNC,KAAM,GACN8B,MAAO,GAoBIG,MAjBf,WAA4C,IAA5BzB,EAA2B,uDAArBoB,EAAcG,EAAO,uCACvC,OAAOA,EAAOC,MACV,IAAK,gBAGD,OAFAxB,EAAMyB,OAASF,EAAOE,OACtBzB,EAAMT,KAAO,EACNS,EACX,IAAK,cAGD,OAFAA,EAAMyB,OAASzB,EAAMyB,OAAOf,OAAOa,EAAOE,QAC1CzB,EAAMT,KAAOS,EAAMT,KAAO,EACnBS,EACX,IAAK,mBAED,OADAA,EAAMsB,MAAQC,EAAOD,MACdtB,EAEf,OAAOA,GCVI0B,EANEC,YAAgB,CAC7BC,YAAaC,EACb5B,UAAW6B,EACXC,YAAaC,ICFFC,EAFDC,YAAYR,G,0DCgDXS,I,2BA9Cc,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACvBC,EAAQD,EAAME,YAAYzE,OAAS,GACnCuE,EAAME,YAAYnE,MAAM,EAAE,IAAM,MAAQiE,EAAME,YAE9CC,EAAiBH,EAAMI,MAAM3E,OAAS,EAEtC4E,EAAO,GACPC,EAAO,GACPC,EAAO,GACPC,EAAM,GASV,OAPIL,IACAG,EAAON,EAAMI,MAAM,GAAGK,WAAW1E,MAAM,EAAEiE,EAAMI,MAAM,GAAGK,WAAWhF,OAAO,GAE1E8E,GADAF,EAAO,IAAIK,KAAKV,EAAMI,MAAM,GAAGO,aACnBC,mBAAmB,QAAS,CAAEC,QAAS,SACnDL,EAAMH,EAAKO,mBAAmB,QAAS,CAAEE,MAAO,OAAQN,IAAK,aAI7D,yBAAK3F,UAAU,gCAQX,yBAAKA,UAAU,6BACX,2BAAIoF,GACHE,GACD,+BAAKK,GACJL,GACD,2BAAIG,EAAJ,IAAWC,EAAX,SCfDQ,GApBe,SAAC,GAAc,IAAb3F,EAAY,EAAZA,OAETA,EAAOI,cAAcO,MAAM,EAAE,GAEhD,OAEI,yBAAKlB,UAAU,gCAEX,yBAAKA,UAAU,kCACX,2BAAIO,EAAOG,YAEX,yGAAkB,2BAAIH,EAAOI,cAAcC,YCiB5CsE,GA3Bc,SAAC,GAAuB,IAAtBiB,EAAqB,EAArBA,gBAEvBC,EAAeC,KAAKC,IAAID,KAAKE,IAAIJ,GAAmB,GAAG,GACvDK,EAAc,CACdC,KAAM,CACFC,QAASP,EAAkB,EAAIC,EAAe,GAElDO,MAAO,CACHD,QAASP,EAAkB,EAAIC,EAAe,IAGtD,OAEI,yBAAKpG,UAAU,2BAEX,yBAAK+D,MAAOyC,EAAYG,MAAO3G,UAAU,kCAAzC,kCAIA,yBAAK+D,MAAOyC,EAAYC,KAAMzG,UAAU,iCAAxC,0CC6BG4G,GA7CE,SAAC,GAAsF,IAArFC,EAAoF,EAApFA,UAAWV,EAAyE,EAAzEA,gBAAiBW,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,SAIpEC,EAAe,CACX,UAAa,WAHKF,GAAgB,EAAI,GACTZ,EAAkB,GAEX,kBACjBA,EAAkB,OAAQW,EAAgB,MAC7D,WAP2F,EAAlBI,aAO3C,OAAS,IAG3CL,IACAI,EAAY,SAAe,WAC3BA,EAAa,WAAa,MAG9B,IAAIE,EAAcH,EAASI,eAAe,eAEtCC,EAAcF,EAAcH,EAASM,OAAO,GAAGC,MAAQP,EAASvG,eAEpE,OAEI,yBAAKT,UAAU,gBAAgB+D,MAAOkD,GAElC,yBAAKjH,UAAU,oBACX,kBAACwH,GAAD,CAAkBrB,gBAAiBA,IACnC,yBAAKnG,UAAU,yBAAyBC,IAAKoH,IAE7C,yBAAKrH,UAAU,sBACVmH,EACG,kBAAC,GAAD,CAAsBhC,MAAO6B,IAC7B,kBAAC,GAAD,CAAuBzG,OAAQyG,QC8ExCS,G,YA9GX,WAAYC,GAAQ,IAAD,8BACf,8CAAMA,KAcVC,QAAU,SAACxC,GAEP,IADA,IAAIyC,EAAUzC,EAAM0C,eACXC,EAAI,EAAGA,EAAIF,EAAQhH,OAAQkH,IAChC,EAAKC,cAAcH,EAAQE,KAlBhB,EAsBnBE,aAAe,SAAC7C,GACZ,EAAK8C,SAAS,CACVC,cAAc,EACdC,WAAW,EACXjB,cAAc,KA1BH,EA8BnBkB,WAAa,SAACjD,GACV,GAAIkB,KAAKE,IAAI,EAAKxD,MAAMoD,iBAAmB,IAAI,CAC3C,IAAIkC,EAAQ,EAAKtF,MAAMoD,gBAAkB,EACzC,EAAKmC,cACL,IAAIC,EAAW,gBACfC,YAAW,WACPD,EAAYE,WAAU,GACtBF,EAAYb,MAAMgB,WAAWL,KAC/B,UAEF,EAAKI,WAAU,IAxCJ,EA6CnBV,cAAgB,SAACY,GACb,IAAIC,EAAY,EAAK7F,MAAM8F,SACvBC,EAAY,EAAK/F,MAAMgG,SAEvBC,EAAe,CACfH,SAAUF,EAAMM,QAChBF,SAAUJ,EAAMO,SAGhB,EAAKnG,MAAMmF,cACXc,EAAajC,aAAe4B,EAAMO,QAAU,IAC5CF,EAAad,cAAe,IAE5Bc,EAAa7C,gBAAkB,EAAKpD,MAAMoD,gBAAkBwC,EAAMM,QAAUL,EAC5EI,EAAalC,cAAgB,EAAK/D,MAAM+D,cAAgB6B,EAAMO,QAAUJ,GAG5E,EAAKb,SAASe,IA9DC,EAkEnBV,YAAc,WAEV,EAAKL,SAAS,CACVf,cAAc,IAElB,EAAKe,SAAS,CACV9B,gBAA8C,EAA7B,EAAKpD,MAAMoD,gBAC5BW,cAA0C,EAA3B,EAAK/D,MAAM+D,iBAzEf,EA8EnB2B,UAAY,SAACU,GACT,EAAKlB,SAAS,CACVf,aAAciC,EACdhB,WAAW,EACXhC,gBAAiB,EACjBW,cAAe,EACf+B,SAAU,EACVE,SAAU,KAnFd,EAAKhG,MAAQ,CACT8F,SAAU,EACVE,SAAU,EACV5C,gBAAiB,EACjBW,cAAe,EACfoB,cAAc,EACdC,WAAW,EACXiB,OAAQ,GAEZ,EAAKd,YAAc,EAAKA,YAAYe,KAAjB,iBACnB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,iBAZF,E,wEA0Ff,OACI,yBACItF,MAAO,CAAC,SAAW,WAAY,UAAU,MACzC/D,UAAU,aACTsJ,YAAaC,KAAK5B,QAClBS,WAAYmB,KAAKnB,WACjBJ,aAAcuB,KAAKvB,cACpB,kBAAC,GAAD,CACInB,WAAW,EACXG,SAAUuC,KAAK7B,MAAMV,SACrBmB,UAAWoB,KAAKxG,MAAMoF,UACtBhC,gBAAiBoD,KAAKxG,MAAMoD,gBAC5BW,cAAeyC,KAAKxG,MAAM+D,cAC1BC,aAAcwC,KAAKxG,MAAMgE,aACzBG,aAAcqC,KAAKxG,MAAMmE,oB,GAzG1BsC,aCFZ,SAAeC,GAAQtH,EAAQuH,EAASC,GAAxC,eAAAvH,EAAAC,OAAA,uDACCG,EAAMC,EAAOD,IAAM,SAAWL,EAAS,kBADxC,kBAGIO,MAAMF,EAAK,CACdG,OAAQ,OACRiH,QAAS,CACL,eAAgB,oBAEpB3F,KAAM4F,KAAKC,UAAU,CACjB,CACIC,SAAUL,EACVM,SAAUL,QAXnB,qCAiBA,SAAeM,GAAY9H,EAAQ+H,EAAaP,GAAhD,eAAAvH,EAAAC,OAAA,uDACCG,EAAMC,EAAOD,IAAM,SAAWL,EAAS,iBADxC,kBAGIO,MAAMF,EAAK,CACdG,OAAQ,OACRiH,QAAS,CACL,eAAgB,oBAEpB3F,KAAM4F,KAAKC,UAAU,CACjB,CACIK,QAASD,EACTF,SAAUL,QAXnB,qCCNA,SAASS,GAAS/F,GACrB,MAAO,CACHE,KAAM,YACNF,SCLR,IA+BegG,GA/BF,SAAC,GAAoD,IAAnDhG,EAAkD,EAAlDA,MAAO+F,EAA2C,EAA3CA,SAAUE,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,UAY1CC,EAAepG,EACfqG,EAAkBD,EAAe,EACrC,OAEIH,EAAM1J,OAAS,GAAK6J,EAAeH,EAAM1J,OACrC,6BACI,kBAAC,GAAD,CAAMoG,SAAUsD,EAAMG,GAAe/B,WAjB7B,SAAeL,GAAf,SAAAjG,EAAAC,OAAA,gDAChBmI,EAAUF,EAAMjG,GAAOpD,GAAIoH,GAGvBiC,EAAM1J,OAASyD,EAAQ,IACvBkG,IAGJvF,EAAM2F,SAASP,EAAS/F,EAAQ,IARhB,wCAmBJqG,EAAkBJ,EAAM1J,OACpB,kBAAC,GAAD,CAAUiG,WAAW,EAAMG,SAAUsD,EAAMI,KAC3C,+BAGZ,+BChCL,SAAeE,KAAf,+CAAAxI,EAAAC,OAAA,uDAA2BwI,EAA3B,+BAAsC,CAAC,EAAE,GAAIC,EAA7C,gCAA6DC,IAA7D,iCACCC,EAAehG,EAAMiG,WACrB9I,EAAS6I,EAAahI,UAAUH,KAAK5B,GACrCqB,EAAO0I,EAAarG,YAAYrC,KAChCC,EAAOyI,EAAarG,YAAYpC,KAEhCC,EAAM0I,GAAO/I,EAAQ0I,EAAYE,EAAazI,EAAMC,GANrD,YAAAH,EAAA,MAOkBM,MAAMF,EAAK,CAACG,OAAQ,SAPtC,WAQqB,OADpBwI,EAPD,QAQUC,OARV,sEAAAhJ,EAAA,MAYuB+I,EAAS5H,QAZhC,QAYC8H,EAZD,OAaCC,EAAYD,EAAc3H,QAE9B6H,GAAkBT,EAAUQ,GAfzB,sCAmBP,SAASJ,GAAO/I,EAAQ0I,EAAYE,EAAazI,EAAMC,GACnD,IAAIiJ,EAAsB,eAAiBX,EAAWY,KAAK,iBAC3D,OAAOhJ,EAAOD,IAAM,SAAWL,EACzB,qBAAuBqJ,EACvB,gBAAkBT,EAClB,SAAWzI,EACX,SAAWC,EAIrB,SAASgJ,GAAkBT,EAAUQ,GAC7BR,EACA9F,EAAM2F,SFlCH,CACHpG,KAAM,SACNH,OEgCsBkH,IAEG,IAArBA,EAAU1K,QACVoE,EAAM2F,SFhCX,SAAcvG,GACjB,MAAO,CACHG,KAAM,OACNH,UE6BmBsH,CAAKJ,ICzBhC,IA2CeK,GA3CD,SAAC,GAA2B,IAA1B1K,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YACdwB,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,QAC5CuB,EAAStB,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,YAAYP,UAChDC,EAAQvB,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,YAAYN,SAHhB,EAKDpB,mBAAS,CAAC,IAAI,MALb,mBAK9B4H,EAL8B,UAQrC,SAAee,IAAf,SAAAxJ,EAAAC,OAAA,kEAAAD,EAAA,MACUwI,GAAYC,IADtB,qCAyBA,OAjBAlH,qBAAU,WACM,MAARd,QAAwBgJ,GAARhJ,GACK,GAAjBuB,EAAOxD,QACPgL,MAET,CAAC/I,IAGJc,qBAAU,WACN,EAAAvB,EAAAC,OAAA,gDACIuB,SAASC,eAAe5C,GAAI6C,SAAS,GAAGC,MAAMC,WAAa,EAC3DJ,SAASK,KAAKF,MAAMG,YAAY,oBAAqB,SAFzD,uCAKD,IAIC,kBAAC,IAAD,CAAOjD,GAAIA,GACP,kBAAC,EAAD,CAAQlB,QAASkB,IACjB,kBAAC,GAAD,CAAMoD,MAAOA,EAAO+F,SAAUA,GAAUE,MAAOlG,EAAQmG,UAAWqB,EAAYpB,UAzBtF,SAAyBd,EAASrB,GAAlC,SAAAjG,EAAAC,OAAA,gDACIoH,GAAQ5G,EAAK5B,GAAIyI,EAASrB,GAD9B,wCA2BQ,kBAAC,EAAD,CAAQjH,GAAIA,EAAIC,YAAaA,M,qBCS1ByK,I,OAnDE,SAAC,GAA2B,IAA1B7K,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YAAiB,GAC3ByB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,QACnBI,mBAAS,OAFA,mBAEjC8I,EAFiC,KAEpBC,EAFoB,OAGd/I,mBAAS,MAHK,6BAwBxC,OApBAU,qBAAU,WACN,EAAAvB,EAAAC,OAAA,gDACIuB,SAASC,eAAe5C,GAAI6C,SAAS,GAAGC,MAAMC,WAAa,EAC3DJ,SAASK,KAAKF,MAAMG,YAAY,oBAAqB,SAFzD,qCAKA,mBAAA9B,EAAAC,OAAA,kEAAAD,EAAA,MACuB6J,IAAQC,YAAY,wBAD3C,OACUrJ,EADV,OAEImJ,EAAQnJ,GAFZ,qCAUAsJ,KAED,IAGC,kBAAC,IAAD,CAAOlL,GAAIA,GACP,kBAAC,EAAD,CAAQlB,QAASkB,IACjB,yBAAKjB,UAAU,mBACX,yBAAKA,UAAU,iBACP+L,GACA,yBAAK/L,UAAU,gBACZ,yBAAKC,IAAK8L,EAAYK,UAAYL,EAAYK,UAAY,KAAMjM,IAAI,WAEpE,2BAAI4L,EAAYrL,WAAaqL,EAAYrL,WAAa,OAarE,kBAAC,EAAD,CAAQU,GAAIA,EAAIC,YAAaA,OC7B1BgL,I,MApBO,SAAC,GAAgB,IAAfjL,EAAc,EAAdA,GAAIkL,EAAU,EAAVA,KAElBC,EAAc,SAAAC,GAChB,IAAInI,EAAQoI,OAAOD,EAAEE,cAAcC,QAAQtI,OAC3CW,EAAM2F,SAASP,GAAS/F,IACxBjD,EAAGoL,IAGP,OAAOF,EAAKhM,KACR,SAACsM,EAASvI,GAAV,OACI,yBAAKrE,UAAU,iBACZ6M,YAAWD,EAAQE,KAAOF,EAAQE,KAAO,UACzCvL,UAAQ,QACRwL,aAAY1I,EACZ/C,QAASiL,GACR,yBAAKtM,IAAK2M,EAAQtF,OAAO,GAAGC,MAAQqF,EAAQtF,OAAO,GAAGC,MAAQ,aCgJ/DyF,GAtJF,SAAC,GAA2B,IAA1B/L,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YACbwB,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,QAC5CuB,EAAStB,aAAY,SAAAC,GAAK,OAAIA,EAAM4B,YAAYP,UAFlB,EAIInB,mBAAS,CAAC,KAAM,IAAK,KAAM,KAAM,OAJrC,mBAI7BgK,EAJ6B,KAIfC,EAJe,OAKFjK,oBAAS,GALP,mBAK7BkK,EAL6B,KAKlBC,EALkB,KAsBpC,SAAexB,IAAf,SAAAxJ,EAAAC,OAAA,kEAAAD,EAAA,MACUwI,GAAYqC,IADtB,OAEIG,GAAa,GAFjB,qCAaAzJ,qBAAU,WACM,MAARd,QAAyBgJ,IAAThJ,GACM,IAAlBuB,EAAOxD,QACPgL,MAGT,CAAC/I,IAGJc,qBAAU,WACN,EAAAvB,EAAAC,OAAA,gDACIuB,SAASC,eAAe5C,GAAI6C,SAAS,GAAGC,MAAMC,WAAa,EAC3DJ,SAASK,KAAKF,MAAMG,YAAY,oBAAqB,SAFzD,uCAKD,IAEH,IAAMmJ,EAAU,SAAAb,GACZ,IAAIc,EAAQ1J,SAASC,eAAe,gBACN,WAA1ByJ,EAAMvJ,MAAMwJ,YA3BpB,EAAAnL,EAAAC,OAAA,mDACgB,MAARQ,QAAyBgJ,IAAThJ,EADxB,kCAAAT,EAAA,MAEcwI,GAAYqC,GAAa,IAFvC,OAGQG,GAAa,GAHrB,qCA8BIE,EAAMvJ,MAAMwJ,WAAwC,WAA1BD,EAAMvJ,MAAMwJ,WAA2B,SAAW,WAG1EC,EAA0B,SAAAhB,GACY,SAApCA,EAAEE,cAAcC,QAAQc,SACxBP,EAAgBD,EAAaxJ,OAAO+I,EAAEE,cAAcC,QAAQ1L,KAE3DgM,EAAaS,OAAOT,EAAaU,QAAQnB,EAAEE,cAAcC,QAAQ1L,IAAK,GAC3EuL,EAAEE,cAAcC,QAAQc,SAAgD,QAApCjB,EAAEE,cAAcC,QAAQc,SAAsB,QAAU,OAC5FjB,EAAEE,cAAc5I,SAAS,GAAG8J,UAAUC,OAAO,kDAC7CrB,EAAEE,cAAc5I,SAAS,GAAG8J,UAAUC,OAAO,iDAOjD,OAEI,kBAAC,IAAD,CAAO5M,GAAIA,GACP,kBAAC,EAAD,CAAQlB,QAASkB,IAEb,yBAAKjB,UAAU,iBAAiB8N,SAxEzB,SAAAtB,GACf,IAAIuB,EAAOvB,EAAEE,cACb,GAAIqB,EAAKC,aAAiC,EAAlBD,EAAKE,cAAkBF,EAAKG,UAChD,IACSf,IACDC,GAAa,GACbxB,KAGR,MAAOuC,GACHC,QAAQC,IAAIF,MA+DP/J,GACG,kBAAC,GAAD,CAAehD,GAAIA,EAAIkL,KAAMlI,KAGrC,yBAAKpE,UAAU,SAASsB,QAAS+L,GAC7B,oEAGJ,yBAAKrN,UAAU,eAAeiB,GAAG,eAAe8C,MAAO,CAACwJ,WAAY,UAAWjM,QAlB1D,SAAAkL,GACV,gBAAfA,EAAE8B,OAAOrN,IAAsBoM,MAkBvB,yBAAKrN,UAAU,wBAEX,yBAAKA,UAAU,uBACX,oEAGJ,yBAAKA,UAAU,gCACX,qKACA,yBAAKA,UAAU,4CAGnB,yBAAKA,UAAU,2BAEX,yBAAKA,UAAU,+BACZsB,QAASkM,EAAyBe,iBAAe,EAAMC,UAAS,IAC/D,yBAAKxO,UAAU,uFAEf,uBAAGA,UAAU,qCAAb,yCAGJ,yBAAKA,UAAU,+BACZsB,QAASkM,EAAyBe,iBAAe,EAAMC,UAAS,IAC/D,yBAAKxO,UAAU,uFAEf,uBAAGA,UAAU,qCAAb,qDAGJ,yBAAKA,UAAU,+BACZsB,QAASkM,EAAyBe,iBAAe,EAAMC,UAAS,GAC/D,yBAAKxO,UAAU,uFAEf,uBAAGA,UAAU,qCAAb,qDAGJ,yBAAKA,UAAU,+BACZsB,QAASkM,EAAyBe,iBAAe,EAAMC,UAAS,IAC/D,yBAAKxO,UAAU,uFAEf,uBAAGA,UAAU,qCAAb,qDAGJ,yBAAKA,UAAU,+BACZsB,QAASkM,EAAyBe,iBAAe,EAAMC,UAAS,IAC/D,yBAAKxO,UAAU,uFAEf,uBAAGA,UAAU,qCAAb,yEAKR,yBAAKA,UAAU,wBAAwBsB,QAAS+L,GAC5C,8CAMhB,kBAAC,EAAD,CAAQjM,GAAIA,EAAIC,YAAaA,M,OCpJlC,SAAS+I,GAAS/F,GACrB,MAAO,CACHE,KAAM,mBACNF,SCZD,SAAeoK,KAAf,mCAAArM,EAAAC,OAAA,uDAA2ByI,EAA3B,gCACCtI,EAAMkM,KADP,WAAAtM,EAAA,MAEkBM,MAAMF,EAAK,CAACG,OAAQ,SAFtC,UAGqB,OADpBwI,EAFD,QAGUC,OAHV,mEAAAhJ,EAAA,MAOuB+I,EAAS5H,QAPhC,OAOCoL,EAPD,OAQCnL,EAAYmL,EAAcjL,QAE9BkL,GAAY9D,EAAUtH,GAVnB,sCAaP,SAASkL,KACL,IAAI1D,EAAehG,EAAMiG,WACrB9I,EAAS6I,EAAahI,UAAUH,KAAK5B,GACrCqB,EAAO0I,EAAarG,YAAYrC,KAChCC,EAAOyI,EAAarG,YAAYpC,KAEpC,OAAOE,EAAOD,IAAM,SAAWL,EACzB,oBACWG,EACX,SAAWC,EAGrB,SAASqM,GAAY9D,EAAUtH,GACvBsH,EACA9F,EAAM2F,SD9BH,CACHpG,KAAM,gBACNC,OC4BsBhB,IAEG,IAArBA,EAAU5C,QACVoE,EAAM2F,SD5BX,SAAcnG,GACjB,MAAO,CACHD,KAAM,cACNC,UCyBmBkH,CAAKlI,ICtBhC,IA+CeqL,GA/CA,SAAC,GAA2B,IAA1B5N,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,YACfwB,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,QAC5C2B,EAAS1B,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,YAAYN,UAChDH,EAAQvB,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,YAAYT,SAErD,SAAeyK,IAAf,SAAA1M,EAAAC,OAAA,kEAAAD,EAAA,MACUqM,GAA8B,IAAlBjK,EAAO5D,SAD7B,qCAQA,IAAMmO,EAAe,WACjB,OAAe,MAARlM,QAAyBgJ,IAAThJ,GAuB3B,OAnBAc,qBAAU,WACFoL,KAAoC,IAAlBvK,EAAO5D,QACzBkO,MAEL,CAACjM,IAGJc,qBAAU,WACN,EAAAvB,EAAAC,OAAA,gDACIuB,SAASC,eAAe5C,GAAI6C,SAAS,GAAGC,MAAMC,WAAa,EAC3DJ,SAASK,KAAKF,MAAMG,YAAY,oBAAqB,SAFzD,qCAMI6K,KAAoC,IAAlBvK,EAAO5D,QACzBkO,MACL,IAIC,kBAAC,IAAD,CAAO7N,GAAIA,GACP,kBAAC,EAAD,CAAQlB,QAASkB,IACjB,kBAAC,GAAD,CAAMoD,MAAOA,EAAO+F,SAAUA,GAAUE,MAAO9F,EAAQ+F,UAAWuE,EAAYtE,UA/BtF,SAAyBN,EAAa7B,GAAtC,SAAAjG,EAAAC,OAAA,gDACI4H,GAAYpH,EAAK5B,GAAIiJ,EAAa7B,GADtC,wCAiCQ,kBAAC,EAAD,CAAQjH,GAAIA,EAAIC,YAAaA,M,OCtDlC,SAAS2N,GAAkBnM,GAC9B,MAAO,CACH0B,KAAM,sBACN1B,QCCD,SAAeoM,GAAUpM,GAAzB,eAAAT,EAAAC,OAAA,uDACCG,EADD,UACUC,EAAOD,IADjB,kCAC8CK,EAAK5B,IADnD,WAAAmB,EAAA,MAEkBM,MAAMF,EAAK,CAACG,OAAQ,SAFtC,OAGoB,KAHpB,OAGUyI,QACTpG,EAAM2F,SAASqE,GAAkBnM,IAJlC,qC,cC4CQqM,GAhCG,WAAO,IAAD,EACkBjM,mBAAS,SAD3B,mBACb5B,EADa,KACA8N,EADA,OAEIlM,mBAAS,MAFb,mBAEP+I,GAFO,WAGd5K,EAAK,SAAAoL,GACP2C,EAAe3C,EAAEE,cAAcC,QAAQyC,KAiB3C,OAdAzL,qBAAU,YACN,mBAAAvB,EAAAC,OAAA,oDACsBI,EAAO4M,OAD7B,qBAEQ,CAAC,GAAOC,GAASnF,SAFzB,wCAAA/H,EAAA,MAGc6J,IAAQC,YAAY,wBAHlC,iCACQH,EADR,iBAAA3J,EAAA,MAKU6M,GAAUlD,IALpB,QAMIC,EAAQD,GANZ,sCAQAI,KAED,IAIC,kBAAC,KAAD,CAAM9K,YAAaA,GACf,kBAAC,GAAD,CAAUJ,GAAG,WAAWG,GAAIA,EAAIC,YAAaA,IAC7C,kBAAC,GAAD,CAAMJ,GAAG,OAAOG,GAAIA,EAAIC,YAAaA,IACrC,kBAAC,GAAD,CAAOJ,GAAG,QAAQG,GAAIA,EAAIC,YAAaA,IACvC,kBAAC,GAAD,CAAQJ,GAAG,SAASG,GAAIA,EAAIC,YAAaA,IACzC,kBAAC,EAAD,CAASJ,GAAG,UAAUG,GAAIA,EAAIC,YAAaA,MC7BvD4K,IAAQsD,KAAK,gBAQbC,IAASC,OACL,kBAAC,IAAD,CAAUzK,MAAOA,GACb,kBAAC,GAAD,OACSpB,SAASC,eAAe,U,kFCzBzClE,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.c53aa6a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swipeGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.08ccde92.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationLeftButton.abf4fa91.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationRightButton.0a756658.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nimport IconApp from '../icons/culterIcon.svg';\n\nconst Header = ({panelId}) => {\n    let panelTitle = \"\";\n    switch (panelId) {\n        case \"personal\": panelTitle = \"Профиль\"; break;\n        case \"grid\": panelTitle = \"События\"; break;\n        case \"swipe\": panelTitle = \"События\"; break;\n        case \"people\": panelTitle = \"Люди\"; break;\n        case \"matches\": panelTitle = \"Диалоги\"; break;\n    }\n    return (\n        <div className=\"App-header\">\n            <div className=\"App-header-content\">\n               <img src={IconApp} alt=\"icon\" />\n                <p>{\"Culter\"}</p>\n            </div>\n            <div className=\"App-header-bottomLine\"></div>\n            <div className=\"App-header-panelTitle\">\n                <p>{panelTitle}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.first_name}</div>\n                <div className=\"Cirle\">{person.common_events.length}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst MatchedList = ({list}) => {\n    const text = \"Перейти в сообщения\";\n\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img src={person.photo_400_orig} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.first_name + \" \" + person.last_name}</b></div>\n                    {text.length > 26 &&\n                        <a className=\"PersonPlacesList\" href={\"https://vk.com/im?sel=\" + person.id}>\n                            {text.slice(0, 26) + \"..\"}\n                        </a>}\n                    {!(text.length > 26) &&\n                        <a className=\"PersonPlacesList\" href={\"https://vk.com/im?sel=\" + person.id}>\n                            {text}\n                        </a>}\n                </div>\n            </div>\n            <div className=\"BottomLine\"></div>\n        </div>\n    );\n\n   /* return list.map(\n        person =>\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\n                    {person.commonPlaces.toString().length > 25 &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\n                        </div>}\n                    {!(person.commonPlaces.toString().length > 25) &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString()}\n                        </div>}\n                </div>\n            </div>\n    );*/\n}\n\n\n/*    renderPlaces = () => {\n        let str = this.props.commonPlaces.toString();\n        if (str.length > 25)\n            str = str.slice(0, 25) + \"..\";\n        return str;\n    };\n\n    render() {\n        return (\n            <div className=\"Person\" key={this.props.key}>\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\n                    <div className=\"PersonPlacesList\">\n                        {this.renderPlaces()}\n                    </div>\n                </div>\n            </div>\n        );\n    }*/\nexport default MatchedList;\n","import React, {useState} from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDes from \"../icons/chatGrey.svg\";\nimport eventDes from \"../icons/eventGrey.svg\";\nimport gridDes from \"../icons/gridGrey.svg\";\nimport swipeDes from \"../icons/swipeGrey.svg\";\nimport userDes from \"../icons/userGrey.svg\";\n\nimport chatActive from \"../icons/chatRed.svg\";\nimport eventActive from \"../icons/eventRed.svg\";\nimport gridActive from \"../icons/gridRed.svg\";\nimport swipeActive from \"../icons/swipeRed.svg\";\nimport userActive from \"../icons/userRed.svg\";\n\nconst Bottom = ({go, activePanel}) => {\n\n    return (\n        \n        <div className=\"App-bottom\">\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\n                data-to=\"personal\">\n               <img id=\"personalButton\" src={activePanel == \"personal\" ? userActive : userDes} alt=\"personal\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\n               <img id=\"gridButton\" src={activePanel == \"grid\" ? gridActive : gridDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\n                data-to=\"swipe\">\n               <img  id=\"swipeButton\" src={activePanel == \"swipe\" ? swipeActive : swipeDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\" onClick={go} data-to=\"people\">\n               <img id=\"peopleButton\" src={activePanel == \"people\" ? eventActive : eventDes} alt=\"people\" />\n           </div>\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\n                data-to=\"matches\">\n               <img id=\"matchesButton\" src={activePanel == \"matches\" ? chatActive : chatDes} alt=\"matches\" />\n           </div>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\n}\n\nexport default Bottom;\n","import config from \"./api_config\";\n\nexport async function fetchMatches(userId, page=0, size=20) {\n    let url = config.url + \"/user/\" + userId\n        + \"/users/ratings?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {fetchMatches} from \"../Api/Matches\";\n\nconst Matches = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const [matchedPeople, setMatchedPeople] = useState([]);\n    const [page, setPage] = useState(0);\n    const [size, setSize] = useState(20);\n\n    async function loadMatches(){\n        let peopleResponse = await fetchMatches(user.id, page, size);\n        let newPeople = await peopleResponse.json();\n\n        setPage(page + 1);\n        setMatchedPeople(matchedPeople.concat(newPeople.content));\n    }\n\n    useEffect(() => {\n        if (user != null)\n            loadMatches();\n    }, [user]);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n        if (user != null)\n            loadMatches();\n    }, []);\n\n    /*<MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>*/\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"Head\">\n                <p>{matchedPeople.length != 1 ?\n                \"\"+matchedPeople.length+\" новых совпадений\" :\n                   \"\" + matchedPeople.length + \" новое совпадение\"}</p>\n            </div>\n\n            <div className=\"ScrollContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedScrollList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <div className=\"Dialogues\">\n                <p>Совпадения</p>\n            </div>\n            <div className=\"ListContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n/*<MatchedNavigationButtons\n               stateList = {isSelectedFriends}\n               stateRefresh = {onSwitchClick}\n               matchedList = {matchedPeople}\n               friendsList = {matchedFriends}/>*/\n","const initialState = {\n    events: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\nfunction events(state=initialState, action){\n    switch(action.type){\n        case \"RELOAD\":\n            state.events = action.events;\n            state.page = 1;\n            return state;\n        case \"LOAD\":\n            state.events = state.events.concat(action.events);\n            state.page = state.page + 1;\n            return state;\n        case \"SET_INDEX\":\n            state.index = action.index;\n            return state;\n    }\n    return state;\n}\n\nexport default events;\n","const initialState = {\n    user: null\n};\n\nfunction user(state=initialState, action){\n    switch(action.type){\n        case \"SET_AUTHORIZED_USER\":\n            state.user = action.user;\n            return state;\n    }\n    return state;\n}\n\nexport default user;","const initialState = {\n    people: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\n\nfunction people(state=initialState, action){\n    switch(action.type){\n        case \"PEOPLE_RELOAD\":\n            state.people = action.people;\n            state.page = 1;\n            return state;\n        case \"PEOPLE_LOAD\":\n            state.people = state.people.concat(action.people);\n            state.page = state.page + 1;\n            return state;\n        case \"PEOPLE_SET_INDEX\":\n            state.index = action.index;\n            return state;\n    }\n    return state;\n}\n\nexport default people;\n","import {combineReducers} from \"redux\"\nimport eventsReducer from './events-reducer';\nimport userReducer from './user-reducer';\nimport peopleReducer from \"./people-reducer\";\n\nconst reducers = combineReducers({\n    eventsState: eventsReducer,\n    userState: userReducer,\n    peopleState: peopleReducer\n});\n\nexport default reducers;\n","import {createStore} from 'redux';\nimport reducers from '../reducers/combine'\n\n\nconst store = createStore(reducers);\n\nexport default store;","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport LeftButton from '../../icons/eventAnnotationLeftButton.svg';\nimport RightButton from '../../icons/eventAnnotationRightButton.svg';\n\nconst EventInformationView = ({event}) => {\n    let title = event.short_title.length > 18 ?\n        event.short_title.slice(0,15) + \"...\" : event.short_title;\n\n    let isDateProvided = event.dates.length > 0;\n\n    let date = \"\";\n    let time = \"\";\n    let week = \"\";\n    let day = \"\";\n\n    if (isDateProvided) {\n        time = event.dates[0].start_time.slice(0,event.dates[0].start_time.length-3);\n        date = new Date(event.dates[0].start_date);\n        week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\n        day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\n    }\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n\n            {/* <div className=\"Swipe-content-down-aside\">\n                <div className=\"Swipe-content-down-button\">\n                    <img src={LeftButton} alt=\"leftButton\" />\n                </div>\n            </div> */}\n\n            <div className=\"Swipe-content-down-center\">\n                <p>{title}</p>\n                {isDateProvided &&\n                <p> {day}</p>}\n                {isDateProvided &&\n                <p>{time} {week} </p>\n                 }\n            </div>\n\n            {/* <div className=\"Swipe-content-down-aside\">\n                <div className=\"Swipe-content-down-button\">\n                    <img id=\"Swipe-content-down-button-right\" src={RightButton} alt=\"rightButton\" />\n                </div>\n            </div> */}\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nconst PersonInformationView = ({person}) => {\n\n    let wantedEvents = person.common_events.slice(0,5);\n\n    return  (\n\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center user\">\n                <p>{person.first_name}</p>\n\n                <p>Общих событий: <b>{person.common_events.length}</b></p>\n   \n            </div>\n\n        </div>\n    )\n\n};\n\nexport default PersonInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({horizontalShift}) => {\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n    \n    return  (\n\n        <div className=\"Swipe-content-up-labels\">\n\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                Круто\n            </div>\n\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                Отстой\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\nimport EventInformationView from './EventInformationView';\nimport PersonInformationView from './PersonInformationView';\nimport ChoiceLabelsView from './ChoiceLabelsView';\n\n\nconst CardView = ({hasMargin, horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\n\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    if (hasMargin){\n        contentStyle[\"position\"] = \"absolute\";\n        contentStyle[\"z-index\"] = \"10\";\n    }\n\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\n\n    let imageSource = isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n\n            <div className=\"Swipe-content-up\">\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\n\n                <div className=\"Swipe-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n    /*<div className=\"Swipe-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>*/\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./View/CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                style={{\"position\":\"absolute\", \"z-index\":\"20\"}}\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                    hasMargin={false}\n                    cardInfo={this.props.cardInfo}\n                    isSwiping={this.state.isSwiping}\n                    horizontalShift={this.state.horizontalShift}\n                    verticalShift={this.state.verticalShift}\n                    isUpperTouch={this.state.isUpperTouch}\n                    isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import config from \"./api_config\"\n\nexport async function setRate(userId, eventId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n\nexport async function setUserRate(userId, otherUserId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                user_id: otherUserId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","export function reload(events){\n    return {\n        type: \"RELOAD\",\n        events\n    }\n}\nexport function load(events){\n    return {\n        type: \"LOAD\",\n        events\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"SET_INDEX\",\n        index\n    }\n}","import React, {Component} from 'react';\nimport store from \"../redux/store/store\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Card from \"./Card\";\nimport CardView from \"./View/CardView\";\nimport {setRate} from \"../Api/Ratings\";\n\nimport {setIndex} from '../redux/actions/events-actions';\n\nconst Deck = ({index, setIndex, cards, loadCards, setRateBy}) => {\n     const onSwipeEnd = async function(isLike) {\n        setRateBy(cards[index].id, isLike);\n\n        // Uploading if nessecary\n        if (cards.length - index < 10){\n            loadCards();\n        }\n\n        store.dispatch(setIndex(index + 1));\n    };\n\n    let topCardIndex = index;\n    let bottomCardIndex = topCardIndex + 1;\n    return (\n\n        cards.length > 0 && topCardIndex < cards.length ?\n            <div>\n                <Card cardInfo={cards[topCardIndex]} onSwipeEnd={onSwipeEnd}/>\n                {\n                    bottomCardIndex < cards.length ?\n                        <CardView hasMargin={true} cardInfo={cards[bottomCardIndex]} />:\n                        <div/>\n                }\n            </div> :\n            <div >\n            </div>\n      \n    )\n}\n\nexport default Deck;\n","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nexport async function fetchEvents(categories=[1,6], isReload=false, is_personal=true )  {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.eventsState.page;\n    let size = requestState.eventsState.size;\n\n    let url = getUrl(userId, categories, is_personal, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200){\n        return;\n    }\n\n    let newEventsJson = await response.json();\n    let newEvents = newEventsJson.content;\n\n    updateEventsState(isReload, newEvents);\n\n}\n\nfunction getUrl(userId, categories, is_personal, page, size) {\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\n    return config.url + \"/user/\" + userId\n        + \"/events/selection?\" + categoriesParameter\n        + \"&is_personal=\" + is_personal\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\n\nfunction updateEventsState(isReload, newEvents) {\n    if (isReload) {\n        store.dispatch(reload(newEvents));\n    } else {\n        if (newEvents.length !== 0)\n            store.dispatch(load(newEvents));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Swipe.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\nimport { setRate } from '../Api/Ratings';\nimport {setIndex} from \"../redux/actions/events-actions\";\n\nconst Swipe = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n    const index = useSelector(state => state.eventsState.index);\n\n    const [categories, setCategories] = useState([\"1\",\"6\"]);\n    \n\n    async function loadEvents(){\n        await fetchEvents(categories);\n    }\n    async function setRateBy(eventId, isLike){\n        setRate(user.id, eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null || user != undefined)\n            if (events.length == 0){\n                loadEvents();\n            }\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck index={index} setIndex={setIndex} cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>\n\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n};\n\nexport default Swipe;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const [fetchedUser, setUser] = useState(null);\n    const [token, setToken] = useState(null);\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        // async function fetchToken(){\n        //     let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n        //         \"app_id\": lol, \"scope\": \"friends\"});\n        //     setToken(tokenObject.access_token);\n        // }\n        fetchData();\n        //fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {fetchedUser &&\n                        <div className=\"PersonalData\">\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\n\n                           <p>{fetchedUser.first_name ? fetchedUser.first_name : \"\"}</p>\n                           \n                            \n                            {\n                               /* token &&\n                                <p>\n                                    {token}\n                                </p>*/\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n}\n\nexport default Personal;\n//<p>{fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }</p>","import React from 'react';\nimport store from \"../redux/store/store\";\n\nimport '../panels/panelsStyle/Grid.css';\nimport {setIndex} from '../redux/actions/events-actions';\n\nconst GridEventList = ({go, data}) => {\n\n    const handleClick = e => {\n        let index = Number(e.currentTarget.dataset.index);\n        store.dispatch(setIndex(index));\n        go(e);\n    }\n\n    return data.map (\n        (product, index) =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}\n               data-to=\"swipe\"\n               data-index={index}\n               onClick={handleClick}>\n                <img src={product.images[0].image ? product.images[0].image : null}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../Api/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                if (!isLoading){\n                    setIsLoading(true);\n                    loadEvents();\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    async function loadEvents(){\n        await fetchEvents(categoriesId);\n        setIsLoading(false);\n    }\n\n    async function deleteAndloadEvents(){\n        if (user != null || user !== undefined){\n            await fetchEvents(categoriesId,true);\n            setIsLoading(false);\n        }\n    }\n\n\n    useEffect(() => {\n        if (user != null || user !== undefined)\n            if (events.length === 0){\n                loadEvents();\n            }\n              \n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    const onModal = e => {\n        let modal = document.getElementById(\"filter_modal\");\n        if (modal.style.visibility == \"visible\") {\n            deleteAndloadEvents();\n        }\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\n    };\n\n    const onChangeFilterItemState = e => {\n        if (e.currentTarget.dataset.isactive == \"false\") {\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\n        }\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\n    };\n\n    const onCloseFilterEnvironment = e => {\n        if (e.target.id == \"filter_modal\") onModal(e);\n    };\n\n    return (\n        \n        <Panel id={id}>\n            <Header panelId={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {events &&\n                        <GridEventList go={go} data={events}/> }\n                </div>\n\n                <div className=\"Filter\" onClick={onModal}>\n                    <p>Фильтр</p>\n                </div>\n\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\n                    <div className=\"Filter-modal-content\">\n\n                        <div className=\"Filter-modal-header\">\n                            <p>Фильтр</p>\n                        </div>\n\n                        <div className=\"Filter-modal-categoriesTitle\">\n                            <p>Выберите тип мероприятия</p>\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\n                        </div>\n\n                        <div className=\"Filter-modal-categories\">\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\n                            </div>\n\n                        </div>\n\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\n                            <p>ОК</p>\n                        </div>\n\n                    </div>\n                </div>\n\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n};\nexport default Grid;\n// function mapStateToProps(store) {\n//     return {\n//         user: store.userState.user\n//     }\n//   }\n//   export default connect(mapStateToProps)(Grid)\n","export function reload(people){\n    return {\n        type: \"PEOPLE_RELOAD\",\n        people\n    }\n}\nexport function load(people){\n    return {\n        type: \"PEOPLE_LOAD\",\n        people\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"PEOPLE_SET_INDEX\",\n        index\n    }\n}\n","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport {load, reload} from \"../redux/actions/people-actions\";\n\nexport async function fetchPeople(isReload = false)  {\n    let url = createUrl();\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200){\n        return;\n    }\n\n    let newPeopleJson = await response.json();\n    let newPeople = newPeopleJson.content;\n\n    updateStore(isReload, newPeople);\n}\n\nfunction createUrl() {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.eventsState.page;\n    let size = requestState.eventsState.size;\n\n    return config.url + \"/user/\" + userId\n        + \"/users/all?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction updateStore(isReload, newPeople) {\n    if (isReload) {\n        store.dispatch(reload(newPeople));\n    } else {\n        if (newPeople.length !== 0)\n            store.dispatch(load(newPeople));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchPeople} from \"../Api/People\";\nimport { setUserRate } from '../Api/Ratings';\nimport {setIndex} from \"../redux/actions/people-actions\";\n\nconst People = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const people = useSelector(state => state.peopleState.people);\n    const index = useSelector(state => state.peopleState.index);\n\n    async function loadPeople(){\n        await fetchPeople(people.length === 0);\n    }\n\n    async function setRateBy(otherUserId, isLike){\n        setUserRate(user.id, otherUserId, isLike );\n    }\n\n    const isUserLoaded = () => {\n        return user != null && user !== undefined;\n    };\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (isUserLoaded() && people.length === 0){\n            loadPeople();\n        }\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        if (isUserLoaded() && people.length === 0)\n            loadPeople();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck index={index} setIndex={setIndex} cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\n\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n};\n\nexport default People;\n","export function setAuthorizedUser(user){\n    return {\n        type: \"SET_AUTHORIZED_USER\",\n        user\n    }\n}","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport {setAuthorizedUser} from \"../redux/actions/user-actions\";\n\nexport async function authorize(user)  {\n    let url = `${config.url}/user/identify?user_id=${user.id}`;\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status == 200){\n        store.dispatch(setAuthorizedUser(user));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Swipe from './panels/Swipe';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./Api/Auth\";\nimport config from \"./Api/api_config.json\";\nimport settings from \"./Api/dev_settings.json\";\n\nconst AppCulter = () => {\n    const [activePanel, setActivePanel] = useState('swipe');\n    const [user, setUser] = useState(null);\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : settings.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n            \n            await authorize(fetchedUser);\n            setUser(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id='personal' go={go} activePanel={activePanel}/>\n            <Grid id=\"grid\" go={go} activePanel={activePanel}/>\n            <Swipe id='swipe' go={go} activePanel={activePanel}/>\n            <People id='people' go={go} activePanel={activePanel}/>\n            <Matches id='matches' go={go} activePanel={activePanel}/>\n        </View>\n    );\n}\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Swipe from './panels/Swipe';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppCulter/>\n    </Provider>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/culterIcon.b59f5a6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";"],"sourceRoot":""}