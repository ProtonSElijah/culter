{"version":3,"sources":["assets/icons/filter.svg","assets/icons/chatGrey.svg","assets/icons/peopleGrey.svg","assets/icons/gridGrey.svg","assets/icons/eventsGrey.svg","assets/icons/userGrey.svg","assets/icons/gridRed.svg","assets/icons/userRed.svg","assets/defaultEventImage.jpg","assets/preloader.svg","assets/icons/messageRed.svg","assets/icons/matchesArrow.svg","Components/Header.js","redux/actions/panel-actions.js","redux/reducers/events-reducer.js","redux/reducers/user-reducer.js","redux/reducers/people-reducer.js","redux/reducers/panel-reducer.js","redux/reducers/matches-reducer.js","redux/reducers/combine.js","redux/store/store.js","Components/BottomButton.js","Components/Bottom.js","panels/Personal.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/EventEndView.js","Components/View/PeopleEndView.js","Components/View/CardView.js","Components/Card.js","Components/Deck.js","redux/actions/events-actions.js","Api/Utils.js","Api/Events.js","services/Events.js","redux/actions/matches-actions.js","Api/Ratings.js","services/Ratings.js","panels/Events.js","Components/MatchedScrollList.js","Components/CommonEventsList.js","Components/MatchedList.js","Api/Matches.js","services/Matches.js","panels/Matches.js","Components/GridEventList.js","panels/Grid.js","redux/actions/people-actions.js","Api/People.js","services/People.js","panels/People.js","redux/actions/user-actions.js","Api/Auth.js","services/Auth.js","AppCulter.js","index.js","assets/icons/chatRed.svg","assets/icons/peopleRed.svg","assets/icons/eventsRed.svg"],"names":["module","exports","Header","panelTitle","panelId","className","src","IconFilter","alt","changePanel","panel","type","initialState","events","page","size","index","state","action","concat","user","people","Math","trunc","length","receivedPeople","peopleCount","shiftIndex","newPeople","slice","active","panels","matches","eventsPageSize","receivedMatches","matchesCount","newMatches","otherUserId","newEvents","matchedUserId","findIndex","match","id","updatedMatches","commonEvents","reducers","combineReducers","eventsState","eventsReducer","userState","userReducer","peopleState","peopleReducer","panelState","panelReducer","matchesState","matchesReducer","store","createStore","BottomButton","activePanel","activeImage","disabledImage","onClick","text","data-to","Bottom","useSelector","onChangePanelClick","event","dispatch","currentTarget","dataset","to","personal","userActive","userDisabled","grid","gridActive","gridDisabled","eventsActive","eventsDisabled","peopleActive","peopleDisabled","chatActive","chatDisabled","Personal","useEffect","a","async","document","getElementById","children","style","paddingTop","body","setProperty","photo_200","first_name","last_name","EventInformationView","isDateProvided","start_date","start_time","date","time","week","day","Date","toLocaleDateString","weekday","month","short_title","PersonInformationView","person","count_common_events","horizontalShift","labelOpacity","min","abs","labelStyles","left","opacity","right","EventEndView","peopleIcon","chatIcon","PeopleEndView","eventsIcon","CardView","hasMargin","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEnd","hasOwnProperty","isEventEnd","isEventCard","imageSource","defaultImage","images","image","photo_400_orig","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","Deck","setIndex","cards","loadCards","setRateBy","isEventDeck","topCardIndex","bottomCardIndex","endCard","isValidResponse","response","status","fetchEventsRequest","userId","categories","is_personal","url","buildUrl","getEventsByUrl","fetchCommonEventsRequest","buildUrlForCommonEvents","fetch","method","json","eventsJson","content","forEach","item","imageItem","config","images_url","console","log","categoriesParameter","join","fetchEvents","isReload","requestState","getState","updateEventsState","updateCommonEventsState","updateCommonEvents","load","setEventRateCall","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRateCall","user_id","setEventRate","getUserId","setUserRate","Events","useState","isLoading","setIsLoading","loadEvents","then","spinner","MatchedScrollList","list","map","key","CommonEventsList","place","MatchedList","openEvents","e","display","parentElement","isHidden","matchedUser","find","fetchCommonEvents","parseInt","classList","add","remove","toVKChat","location","href","userid","data-userid","data-id","matchesArrow","fetchMatchesCall","newMatchesJson","setUpEmptyCommonEvents","fetchMatches","updateStore","Matches","GridEventList","data","handleClick","Number","product","data-name","name","data-index","Grid","categoriesId","setCategoriesId","onModal","modal","visibility","onChangeFilterItemState","isactive","splice","indexOf","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","target","data-isactive","fetchPeopleCall","newPeopleJson","fetchPeople","People","loadPeople","setAuthorizedUser","authorizeRequest","authorize","AppCulter","is_dev","settings","connect","sendPromise","fetchedUser","fetchData","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.a18fbf29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filter.84137ab6.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatGrey.01b80399.svg\";","module.exports = __webpack_public_path__ + \"static/media/peopleGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventsGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/defaultEventImage.ca717777.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3c9d0119.svg\";","module.exports = __webpack_public_path__ + \"static/media/messageRed.5d681222.svg\";","module.exports = __webpack_public_path__ + \"static/media/matchesArrow.24f07fbc.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nimport IconFilter from '../assets/icons/filter.svg';\n\nconst Header = ({panelId}) => {\n    let panelTitle = \"\";\n    switch (panelId) {\n        case \"personal\": panelTitle = \"Профиль\"; break;\n        case \"grid\": panelTitle = \"События\"; break;\n        case \"events\": panelTitle = \"События\"; break;\n        case \"people\": panelTitle = \"Люди\"; break;\n        case \"matches\": panelTitle = \"Диалоги\"; break;\n    }\n    return (\n        <div className=\"App-header\">\n            <div className=\"App-header-content\">\n                <p>{\"Culter\"}</p>\n            </div>\n            <div className=\"App-header-panelTitle\">\n                <p>{panelTitle}</p>\n                <img src={IconFilter} alt=\"filter\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n","export function changePanel(panel){\n    return {\n        type: \"CHANGE_PANEL\",\n        panel\n    }\n}\n","const initialState = {\n    events: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\nfunction events(state=initialState, action){\n    switch(action.type){\n        case \"RELOAD\":\n            state.events = action.events;\n            state.page = 1;\n            return state;\n        case \"LOAD\":\n            state.events = state.events.concat(action.events);\n            state.page = state.page + 1;\n            return state;\n        case \"SET_INDEX\":\n            state.index = action.index;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default events;\n","const initialState = {\n    user: null\n};\n\nfunction user(state=initialState, action){\n    switch(action.type){\n        case \"SET_AUTHORIZED_USER\":\n            state.user = action.user;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default user;\n","const initialState = {\n    people: [],\n    page: 0,\n    size: 20,\n    index: 0\n};\n\nfunction people(state=initialState, action){\n    switch(action.type){\n        case \"PEOPLE_RELOAD\":\n            state.people = state.people.concat(action.people);\n            state.page = Math.trunc(state.people.length / state.size);\n            return state;\n        case \"PEOPLE_LOAD\":\n            let receivedPeople = action.people;\n            let peopleCount = receivedPeople.length;\n            let shiftIndex = state.people.length % state.size;\n            let newPeople = receivedPeople.slice(shiftIndex, peopleCount);\n\n            state.people = state.people.concat(newPeople);\n            state.page = Math.trunc(state.people.length / state.size);\n            return state;\n        case \"PEOPLE_SET_INDEX\":\n            state.index = action.index;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default people;\n","const initialState = {\n    active: \"events\"\n};\nfunction panels(state=initialState, action){\n    switch(action.type){\n        case \"CHANGE_PANEL\":\n            state.active = action.panel;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default panels;\n","const initialState = {\n    matches: [],\n    page: 0,\n    size: 15,\n    eventsPageSize: 10\n};\n\nfunction matches(state = initialState, action) {\n    switch (action.type) {\n        case \"MATCHES_RELOAD\":\n            state.matches = state.matches.concat(action.matches);\n            state.page = Math.trunc(state.matches.length / state.size);\n            return state;\n        case \"MATCHES_LOAD\":\n            let receivedMatches = action.matches;\n            let matchesCount = receivedMatches.length;\n            let shiftIndex = state.matches.length % state.size;\n            let newMatches = receivedMatches.slice(shiftIndex, matchesCount);\n\n            state.matches = state.matches.concat(newMatches);\n            state.page = Math.trunc(state.matches.length / state.size);\n            return state;\n        case  \"UPDATE_COMMON_EVENTS\":\n            let otherUserId = action.otherUserId;\n            let events = action.newEvents;\n\n            let matchedUserId = state.matches.findIndex((match)=>match.id === otherUserId);\n            let updatedMatches = state.matches.slice();\n            updatedMatches[matchedUserId].commonEvents = events;\n            state.matches = updatedMatches;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default matches;\n","import {combineReducers} from \"redux\"\nimport eventsReducer from './events-reducer';\nimport userReducer from './user-reducer';\nimport peopleReducer from \"./people-reducer\";\nimport panelReducer from \"./panel-reducer\";\nimport matchesReducer from \"./matches-reducer\";\n\nconst reducers = combineReducers({\n    eventsState: eventsReducer,\n    userState: userReducer,\n    peopleState: peopleReducer,\n    panelState: panelReducer,\n    matchesState: matchesReducer\n});\n\nexport default reducers;\n","import {createStore} from 'redux';\nimport reducers from '../reducers/combine'\n\n\nconst store = createStore(reducers);\n\nexport default store;","import React from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nconst BottomButton = ({panel, activePanel, activeImage, disabledImage, onClick, text }) => {\n    return (\n        <div className=\"Bottom-button\" onClick={onClick}\n             data-to={panel}>\n            <img src={activePanel === panel ? activeImage : disabledImage} alt={panel} />\n            <p className={activePanel === panel ? 'active' : ''}>{text}</p>\n        </div>\n    );\n};\n\nexport default BottomButton;\n","import React from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDisabled from \"../assets/icons/chatGrey.svg\";\nimport peopleDisabled from \"../assets/icons/peopleGrey.svg\";\nimport gridDisabled from \"../assets/icons/gridGrey.svg\";\nimport eventsDisabled from \"../assets/icons/eventsGrey.svg\";\nimport userDisabled from \"../assets/icons/userGrey.svg\";\n\nimport chatActive from \"../assets/icons/chatRed.svg\";\nimport peopleActive from \"../assets/icons/peopleRed.svg\";\nimport gridActive from \"../assets/icons/gridRed.svg\";\nimport eventsActive from \"../assets/icons/eventsRed.svg\";\nimport userActive from \"../assets/icons/userRed.svg\";\n\nimport {changePanel} from \"../redux/actions/panel-actions\";\nimport store from \"../redux/store/store\";\nimport panels from \"../panels.json\";\nimport BottomButton from \"./BottomButton\";\nimport {useSelector} from \"react-redux\";\n\nconst Bottom = () => {\n    const activePanel = useSelector(state => state.panelState.active);\n    const onChangePanelClick = (event) => {\n        store.dispatch(changePanel(event.currentTarget.dataset.to))\n    };\n\n    return (\n\n        <div className=\"App-bottom\">\n            <BottomButton onClick={onChangePanelClick} panel={panels.personal} activePanel={activePanel}\n                          activeImage={userActive} disabledImage={userDisabled} text='Профиль'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.grid} activePanel={activePanel}\n                          activeImage={gridActive} disabledImage={gridDisabled} text='Подборки'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.events} activePanel={activePanel}\n                          activeImage={eventsActive} disabledImage={eventsDisabled} text='События'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.people} activePanel={activePanel}\n                          activeImage={peopleActive} disabledImage={peopleDisabled} text='Люди'/>\n            <BottomButton onClick={onChangePanelClick} panel={panels.matches} activePanel={activePanel}\n                          activeImage={chatActive} disabledImage={chatDisabled} text='Совпадения'/>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick=onChangePanelClick data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick=onChangePanelClick data-to={right}><div></div></div>*/\n};\n\nexport default Bottom;\n","import React, { useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        // async function fetchToken(){\n        //     let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n        //         \"app_id\": lol, \"scope\": \"friends\"});\n        //     setToken(tokenObject.access_token);\n        // }\n        //fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {user &&\n                        <div className=\"PersonalData\">\n                           <img src={user.photo_200 ? user.photo_200 : null} alt=\"Person\"/>\n\n                           <p>{user.first_name ? user.first_name : \"\"}</p>\n                           <p>{user.last_name ? (\" \" + user.last_name) : \"\" }</p>\n\n                            {\n                               /* token &&\n                                <p>\n                                    {token}\n                                </p>*/\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom/>\n        </Panel>\n    );\n};\n\nexport default Personal;\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nconst EventInformationView = ({event}) => {\n    let isDateProvided = event.start_date && event.start_time;\n\n    let date = \"\";\n    let time = \"\";\n    let week = \"\";\n    let day = \"\";\n\n    if (isDateProvided) {\n        time = event.start_time.slice(0,event.start_time.length-3);\n        date = new Date(event.start_date);\n        week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\n        day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\n    }\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center\">\n                <p>{event.short_title}</p>\n                {isDateProvided &&\n                <p> {day}</p>}\n                {isDateProvided &&\n                <p>{time} {week} </p>\n                 }\n            </div>\n\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nconst PersonInformationView = ({person}) => {\n\n\n    return  (\n\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center user\">\n                <p>{person.first_name}</p>\n\n                <p>Общих событий: <b>{person.count_common_events}</b></p>\n   \n            </div>\n\n        </div>\n    )\n\n};\n\nexport default PersonInformationView;\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({horizontalShift}) => {\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n    \n    return  (\n\n        <div className=\"Swipe-content-up-labels\">\n\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                Like\n            </div>\n\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                Pass\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport peopleIcon from '../../assets/icons/peopleRed.svg';\nimport chatIcon from '../../assets/icons/chatRed.svg';\n\nconst EventEndView = () => {\n\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n            <div className=\"Swipe-content-down-center\">\n                <p>События закончились</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={peopleIcon}  alt=\"people icon\"/></div>&nbsp; Найди компанию на ивент</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={chatIcon} alt=\"chat icon\" /></div>&nbsp; Позови людей на ивент</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventEndView;\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport eventsIcon from '../../assets/icons/eventsRed.svg';\nimport chatIcon from '../../assets/icons/chatRed.svg';\n\nconst PeopleEndView = () => {\n\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n            <div className=\"Swipe-content-down-center\">\n                <p>Люди закончились</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={eventsIcon}  alt=\"events icon\"/></div>&nbsp; Выбери куда пойти</p>\n                <p><div className=\"Swipe-content-down-image\"><img src={chatIcon} alt=\"chat icon\" /></div>&nbsp; Позови людей на ивент</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default PeopleEndView;\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\nimport EventInformationView from './EventInformationView';\nimport PersonInformationView from './PersonInformationView';\nimport ChoiceLabelsView from './ChoiceLabelsView';\nimport EventEndView from \"./EventEndView\";\nimport PeopleEndView from \"./PeopleEndView\";\n\nimport defaultImage from \"../../assets/defaultEventImage.jpg\";\n\nconst CardView = ({hasMargin, horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\n\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    if (hasMargin){\n        contentStyle[\"position\"] = \"absolute\";\n        contentStyle[\"z-index\"] = \"10\";\n    }\n\n    let isEnd = cardInfo.hasOwnProperty(\"isEnd\");\n    let isEventEnd = isEnd && cardInfo[\"end_type\"];\n\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\n\n    let imageSource = isEnd ? defaultImage :\n            isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n\n            <div className=\"Swipe-content-up\">\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\n                <img className=\"Swipe-content-up-image\" src={imageSource} alt=\"Card\"/>\n\n                <div className=\"Swipe-content-down\">\n                    {isEnd ?\n                        isEventEnd ?\n                            <EventEndView/> :\n                             <PeopleEndView/> :\n                        isEventCard ? \n                            <EventInformationView event={cardInfo}/> :\n                             <PersonInformationView person={cardInfo}/>}\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n    /*<div className=\"Events-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>*/\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./View/CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                style={{\"position\":\"absolute\", \"z-index\":\"20\"}}\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                    hasMargin={false}\n                    cardInfo={this.props.cardInfo}\n                    isSwiping={this.state.isSwiping}\n                    horizontalShift={this.state.horizontalShift}\n                    verticalShift={this.state.verticalShift}\n                    isUpperTouch={this.state.isUpperTouch}\n                    isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React from 'react';\nimport store from \"../redux/store/store\";\n\n\nimport Card from \"./Card\";\nimport CardView from \"./View/CardView\";\n\nconst Deck = ({index, setIndex, cards, loadCards, setRateBy, isEventDeck}) => {\n     const onSwipeEnd = async function(isLike) {\n        setRateBy(cards[index].id, isLike);\n\n        // Uploading if necessary\n        if (cards.length - index < 10){\n            loadCards();\n        }\n\n        store.dispatch(setIndex(index + 1));\n    };\n\n    let topCardIndex = index;\n    let bottomCardIndex = topCardIndex + 1;\n\n    let endCard = {\"isEnd\": true, \"end_type\" : isEventDeck}\n    return (\n\n        cards.length > 0 && topCardIndex < cards.length ?\n            <div>\n                <Card cardInfo={cards[topCardIndex]} onSwipeEnd={onSwipeEnd}/>\n                {\n                    bottomCardIndex < cards.length ?\n                        <CardView hasMargin={true} cardInfo={cards[bottomCardIndex]} />:\n                        <div/>\n                }\n            </div> :\n            <div >\n                <Card cardInfo={endCard} onSwipeEnd={()=>{}}/>\n            </div>\n      \n    )\n};\n\nexport default Deck;\n","export function reload(events){\n    return {\n        type: \"RELOAD\",\n        events\n    }\n}\nexport function load(events){\n    return {\n        type: \"LOAD\",\n        events\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"SET_INDEX\",\n        index\n    }\n}","export function isValidResponse(response) {\n    return response.status === 200;\n}\n","import config from \"./api_config\"\nimport {isValidResponse} from \"./Utils\";\n\nexport async function fetchEventsRequest(userId, categories, is_personal,\n                                         page, size) {\n    let url = buildUrl(userId, categories, is_personal, page, size);\n    return await getEventsByUrl(url);\n}\n\nexport async function fetchCommonEventsRequest(userId, otherUserId, page, size) {\n    let url = buildUrlForCommonEvents(userId, otherUserId, page, size);\n    return await getEventsByUrl(url);\n\n}\n\nasync function getEventsByUrl(url) {\n    let response = await fetch(url, {method: \"GET\",});\n    if (!isValidResponse(response)) {\n        return [];\n    }\n\n    let eventsJson = await response.json();\n    let events = eventsJson.content;\n    updateImageUrls(events);\n    console.log(events);\n    return events;\n}\n\n\nfunction buildUrl(userId, categories, is_personal, page, size) {\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\n    return config.url + \"/user/\" + userId\n        + \"/events/selection?\" + categoriesParameter\n        + \"&is_personal=\" + is_personal\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction buildUrlForCommonEvents(userId, otherUserId, page, size) {\n    return `${config.url}/user/${userId}`\n        + `/common/events?anotherUserId=${otherUserId}`\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction updateImageUrls(newEvents) {\n    newEvents.forEach((item) => {\n        item.images.forEach((imageItem) => {\n            imageItem.image = config.images_url + imageItem.image;\n        })\n    });\n}\n","import store from \"../redux/store/store\";\nimport {reload, load} from \"../redux/actions/events-actions\";\nimport {fetchCommonEventsRequest, fetchEventsRequest} from \"../Api/Events\";\nimport {updateCommonEvents} from \"../redux/actions/matches-actions\";\n\nexport async function fetchEvents(categories = [1, 6], isReload = false, is_personal = true) {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.eventsState.page;\n    let size = requestState.eventsState.size;\n\n    let newEvents = await fetchEventsRequest(userId,categories, is_personal, page, size);\n\n    updateEventsState(isReload, newEvents);\n}\n\nexport async function fetchCommonEvents(otherUserId) {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let matches = requestState.matchesState.matches;\n\n    let matchedUser = matches.find(\n        (match =>  match.id === otherUserId)\n    );\n    let page = matchedUser.page;\n    let size = requestState.matchesState.eventsPageSize;\n\n    let newEvents = await fetchCommonEventsRequest(userId, otherUserId, page, size);\n\n    updateCommonEventsState(otherUserId, newEvents);\n}\n\nfunction updateCommonEventsState(otherUserId, newEvents) {\n    if (newEvents.length !== 0)\n        store.dispatch(updateCommonEvents(otherUserId,newEvents))\n}\n\nfunction updateEventsState(isReload, newEvents) {\n    if (isReload) {\n        store.dispatch(reload(newEvents));\n    } else if (newEvents.length !== 0) {\n        store.dispatch(load(newEvents));\n    }\n\n}\n\n\n","export function reloadMatches(matches){\n    return {\n        type: \"MATCHES_RELOAD\",\n        matches\n    }\n}\nexport function loadMatches(matches){\n    return {\n        type: \"MATCHES_LOAD\",\n        matches\n    }\n}\n\nexport function updateCommonEvents(otherUserId, newEvents) {\n    return {\n        type: \"UPDATE_COMMON_EVENTS\",\n        otherUserId,\n        newEvents\n    }\n}\n","import config from \"./api_config\"\n\nexport async function setEventRateCall(userId, eventId, isLiked) {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n\nexport async function setUserRateCall(userId, otherUserId, isLiked) {\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                user_id: otherUserId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import {setEventRateCall, setUserRateCall} from '../Api/Ratings';\nimport store from \"../redux/store/store\";\n\nexport async function setEventRate(eventId, isLiked) {\n    let userId = getUserId();\n\n    return setEventRateCall(userId, eventId, isLiked);\n}\n\nexport async function setUserRate(otherUserId, isLiked) {\n    let userId = getUserId();\n\n    return setUserRateCall(userId, otherUserId, isLiked);\n}\n\nfunction getUserId() {\n    let requestState = store.getState();\n    return requestState.userState.user.id;\n}","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Events.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../services/Events\";\nimport { setEventRate } from '../services/Ratings';\nimport {setIndex} from \"../redux/actions/events-actions\";\nimport spinner from \"../assets/preloader.svg\";\n\nconst Events = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n    const index = useSelector(state => state.eventsState.index);\n\n    const [categories, setCategories] = useState([\"1\",\"6\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function loadEvents(){\n        await fetchEvents(categories);\n    }\n    async function setRateBy(eventId, isLike){\n        setEventRate( eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user && events.length === 0) {\n            setIsLoading(true);\n            loadEvents().then(\n                () => {\n                    setIsLoading(false);\n                }\n            );\n        }\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"container\">\n                {!isLoading && <Deck isEventDeck={true} index={index} setIndex={setIndex} cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>}\n                {isLoading && <div className=\"spinner-preloader-forPeople\">\n                    <img src={spinner} alt=\"loading spinner\"/>\n                </div>}\n            </div>\n\n\n            <Bottom />\n        </Panel>\n    );\n};\n\nexport default Events;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.id}>\n            <div className=\"ScrollPerson\">\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.first_name}</div>\n                <div className=\"Cirle\">{person.count_common_events}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React from 'react';\n\nconst CommonEventsList = ({events}) => {\n\n    return events.map(\n        event =>\n        <div className=\"eventContainer\" key={event.id}>\n            <div className=\"poster\">\n                <img src={event.images[0].image}  alt={event.short_title}/>\n                <div className=\"annotation\">\n                    <p>{event.start_date}</p>\n                    <p>{event.place}</p>\n                </div>\n            </div>\n            <div className=\"name\">\n                <p>{event.short_title}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default CommonEventsList;\n","import React from 'react';\n\nimport CommonEventsList from './CommonEventsList.js';\n\nimport chatActive from \"../assets/icons/messageRed.svg\";\nimport matchesArrow from \"../assets/icons/matchesArrow.svg\";\nimport {fetchCommonEvents} from \"../services/Events\";\n\nconst MatchedList = ({list}) => {\n    const openEvents = (e) => {\n        let display = e.currentTarget.parentElement.children[3].style.display;\n        let isHidden = display ===  \"none\" || display === \"\";\n        if (isHidden) {\n            let otherUserId = parseInt(e.currentTarget.dataset.id);\n            fetchCommonEvents(otherUserId);\n        }\n        e.currentTarget.parentElement.children[3].style.display = isHidden ? \"flex\" : \"none\";\n\n        if (isHidden) {\n            e.currentTarget.classList.add(\"arrowActive\");\n        } else {\n            e.currentTarget.classList.remove(\"arrowActive\");\n        }\n    };\n\n    const toVKChat = (e) => {\n        document.location.href = \"https://vk.com/im?sel=\" + e.currentTarget.dataset.userid;\n    };\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\" key={person.id}>\n            <div className=\"Person\" key={person.key}>\n                <img className=\"avatar\" src={person.photo_400_orig} alt=\"Person\"/>\n\n\n                <div className=\"messageTitle\" onClick={toVKChat} data-userid={person.id}>\n                    <img src={chatActive} alt=\"message\" />\n                    <p>Написать</p>\n                </div>\n\n                <div className=\"personData\">\n                    <div className=\"name\">{person.first_name}</div>\n                    <div className=\"events\">4 Общих события</div>\n                </div>\n\n                <div className=\"eventsContainer\">\n                   <div className=\"events\">\n                        <CommonEventsList events={\n                            person.commonEvents.length > 0 ?\n                                person.commonEvents :\n                                []\n                        }/>\n\n                    </div>\n                </div>\n\n                <img className=\"arrow\" onClick={openEvents} data-id={person.id} src={matchesArrow} alt=\"icon\" />\n\n            </div>\n        </div>\n    );\n}\n\n/*<a className=\"PersonPlacesList\" href={\"https://vk.com/im?sel=\" + person.id}>\n                            {\"Перейти в сообщения\"}\n                        </a>*/\nexport default MatchedList;\n","import config from \"./api_config\";\n\nexport async function fetchMatchesCall(userId, page, size) {\n    let url = buildUrl(userId, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200) {\n        return [];\n    }\n\n    let newMatchesJson = await response.json();\n    let newMatches = newMatchesJson.content;\n    setUpEmptyCommonEvents(newMatches);\n    return newMatches;\n}\n\n\nfunction buildUrl(userId, page, size) {\n    return config.url + \"/user/\" + userId\n        + \"/users/ratings?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n\nfunction setUpEmptyCommonEvents(newMatches) {\n    newMatches.forEach((item) => {\n        item.commonEvents = [];\n        item.page = 0;\n    });\n}\n\n","import store from \"../redux/store/store\";\nimport {loadMatches} from \"../redux/actions/matches-actions\";\nimport { fetchMatchesCall } from \"../Api/Matches\"\n\nexport async function fetchMatches() {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.peopleState.page;\n    let size = requestState.peopleState.size;\n\n    let matches = await fetchMatchesCall(userId, page, size);\n    updateStore(matches);\n\n}\n\n\nfunction updateStore(newMatches) {\n    if (newMatches.length !== 0)\n        store.dispatch(loadMatches(newMatches));\n\n}\n","import React, { useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {fetchMatches} from \"../services/Matches\";\n\nconst Matches = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const matches = useSelector(state => state.matchesState.matches);\n\n    async function loadMatches(){\n        await fetchMatches();\n    }\n\n    useEffect(() => {\n        if (user)\n            loadMatches();\n    }, [user]);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    /*<MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>*/\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"Head\">\n                <p>{matches.length !== 1 ?\n                \"\"+matches.length+\" новых совпадений\" :\n                   \"\" + matches.length + \" новое совпадение\"}</p>\n            </div>\n\n            <div className=\"ScrollContainer\">\n                {matches.length > 0 ?\n                    <MatchedScrollList\n                        list={matches}/> :\n                    <div/>\n                }\n            </div>\n            <div className=\"Dialogues\">\n                <p>Совпадения</p>\n            </div>\n            <div className=\"ListContainer\">\n                {matches.length > 0 ?\n                    <MatchedList\n                        list={matches}/> :\n                    <div/>\n                }\n            </div>\n            <Bottom/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n/*<MatchedNavigationButtons\n               stateList = {isSelectedFriends}\n               stateRefresh = {onSwitchClick}\n               matchedList = {matchedPeople}\n               friendsList = {matchedFriends}/>*/\n","import React from 'react';\nimport store from \"../redux/store/store\";\n\nimport '../panels/panelsStyle/Grid.css';\nimport {setIndex} from '../redux/actions/events-actions';\nimport {changePanel} from \"../redux/actions/panel-actions\";\n\nimport panels from \"../panels.json\";\n\nconst GridEventList = ({data}) => {\n\n    const handleClick = e => {\n        let index = Number(e.currentTarget.dataset.index);\n        store.dispatch(setIndex(index));\n        store.dispatch(changePanel(panels.events));\n    };\n\n    return data.map (\n        (product, index) =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}\n               data-to=\"swipe\"\n               data-index={index}\n                 key={index}\n               onClick={handleClick}>\n                <img src={product.images[0].image ? product.images[0].image : null} alt={product.name ? product.name : \"unknown\"}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../services/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                if (!isLoading){\n                    setIsLoading(true);\n                    loadEvents();\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    const loadEvents = async function (){\n        await fetchEvents(categoriesId);\n        setIsLoading(false);\n    };\n\n    const deleteAndloadEvents = async function (){\n        if (user){\n            await fetchEvents(categoriesId,true);\n            setIsLoading(false);\n        }\n    };\n\n\n    useEffect(() => {\n        if (user && events.length === 0) {\n            loadEvents();\n        }\n\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    const onModal = e => {\n        let modal = document.getElementById(\"filter_modal\");\n        if (modal.style.visibility === \"visible\") {\n            deleteAndloadEvents();\n        }\n        modal.style.visibility = (modal.style.visibility === \"visible\") ? \"hidden\" : \"visible\";\n    };\n\n    const onChangeFilterItemState = e => {\n        if (e.currentTarget.dataset.isactive === \"false\") {\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\n        }\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive === \"true\") ? \"false\" : \"true\";\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\n    };\n\n    const onCloseFilterEnvironment = e => {\n        if (e.target.id === \"filter_modal\") onModal(e);\n    };\n\n    return (\n        \n        <Panel id={id}>\n            <Header panelId={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {events &&\n                        <GridEventList data={events}/> }\n                </div>\n\n                <div className=\"Filter\" onClick={onModal}>\n                    <p>Фильтр</p>\n                </div>\n\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\n                    <div className=\"Filter-modal-content\">\n\n                        <div className=\"Filter-modal-header\">\n                            <p>Фильтр</p>\n                        </div>\n\n                        <div className=\"Filter-modal-categoriesTitle\">\n                            <p>Выберите тип мероприятия</p>\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\n                        </div>\n\n                        <div className=\"Filter-modal-categories\">\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\n                            </div>\n\n                        </div>\n\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\n                            <p>ОК</p>\n                        </div>\n\n                    </div>\n                </div>\n\n            <Bottom/>\n        </Panel>\n    );\n};\nexport default Grid;\n// function mapStateToProps(store) {\n//     return {\n//         user: store.userState.user\n//     }\n//   }\n//   export default connect(mapStateToProps)(Grid)\n","export function reload(people){\n    return {\n        type: \"PEOPLE_RELOAD\",\n        people\n    }\n}\nexport function load(people){\n    return {\n        type: \"PEOPLE_LOAD\",\n        people\n    }\n}\n\nexport function setIndex(index){\n    return {\n        type: \"PEOPLE_SET_INDEX\",\n        index\n    }\n}\n","import config from \"./api_config\"\n\nexport async function fetchPeopleCall(userId, page, size, isReload) {\n\n    let url = buildUrl(userId, page, size);\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status !== 200) {\n        return [];\n    }\n\n    let newPeopleJson = await response.json();\n    let newPeople = newPeopleJson.content;\n\n    return newPeople;\n\n}\n\nfunction buildUrl(userId, page, size) {\n    return config.url + \"/user/\" + userId\n        + \"/users/all?\"\n        + \"&page=\" + page\n        + \"&size=\" + size;\n}\n","import store from \"../redux/store/store\";\nimport {load, reload} from \"../redux/actions/people-actions\";\nimport { fetchPeopleCall } from \"../Api/People\"\n\nexport async function fetchPeople(isReload = false) {\n    let requestState = store.getState();\n    let userId = requestState.userState.user.id;\n    let page = requestState.peopleState.page;\n    let size = requestState.peopleState.size;\n\n    let people = await fetchPeopleCall(userId, page, size, isReload);\n    updateStore(isReload, people);\n}\n\n\nfunction updateStore(isReload, newPeople) {\n    if (isReload) {\n        store.dispatch(reload(newPeople));\n    } else {\n        if (newPeople.length !== 0)\n            store.dispatch(load(newPeople));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchPeople} from \"../services/People\";\nimport { setUserRate } from '../services/Ratings';\nimport {setIndex} from \"../redux/actions/people-actions\";\n\nconst People = ({id}) => {\n    const user = useSelector(state => state.userState.user);\n    const people = useSelector(state => state.peopleState.people);\n    const index = useSelector(state => state.peopleState.index);\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function loadPeople(){\n        if (!isLoading){\n            setIsLoading(true);\n            await fetchPeople(people.length === 0);\n            setIsLoading(false);\n        }\n         \n    }\n\n    async function setRateBy(otherUserId, isLike){\n        setUserRate( otherUserId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    // useEffect(() => {\n    //     if (isUserLoaded() && people.length === 0){\n    //         loadPeople();\n    //     }\n    // }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n\n        if (user && people.length === 0)\n            loadPeople();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck isEventDeck={false} index={index} setIndex={setIndex} cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\n\n            <Bottom/>\n        </Panel>\n    );\n};\n\nexport default People;\n","export function setAuthorizedUser(user){\n    return {\n        type: \"SET_AUTHORIZED_USER\",\n        user\n    }\n}","import config from \"./api_config\"\n\nexport async function authorizeRequest(user) {\n    let url = `${config.url}/user/identify?user_id=${user.id}`;\n    return fetch(url, {method: \"GET\",});\n\n}\n","import store from \"../redux/store/store\";\nimport {setAuthorizedUser} from \"../redux/actions/user-actions\";\nimport {authorizeRequest} from \"../Api/Auth\";\n\nexport async function authorize(user) {\n    let response = await authorizeRequest(user);\n\n    if (response.status === 200) {\n        store.dispatch(setAuthorizedUser(user));\n    }\n}\n","import React, { useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Events from './panels/Events';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./services/Auth\";\nimport config from \"./Api/api_config.json\";\nimport settings from \"./Api/dev_settings.json\";\nimport {useSelector} from \"react-redux\";\n\nimport panels from \"./panels.json\"\n\nconst AppCulter = () => {\n    const activePanel = useSelector(state => state.panelState.active);\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : settings.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n            \n            await authorize(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id={panels.personal}/>\n            <Grid id={panels.grid}/>\n            <Events id={panels.events}/>\n            <People id={panels.people}/>\n            <Matches id={panels.matches}/>\n        </View>\n    );\n};\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport AppCulter from './AppCulter';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppCulter/>\n    </Provider>, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/chatRed.6ffa4715.svg\";","module.exports = __webpack_public_path__ + \"static/media/peopleRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventsRed.08ccde92.svg\";"],"sourceRoot":""}