{"version":3,"sources":["icons/culterIcon.svg","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg","icons/swipeGrey.svg","icons/userGrey.svg","icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","icons/eventAnnotationLeftButton.svg","icons/eventAnnotationRightButton.svg","Components/Header.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Api/People.js","panels/Matches.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","redux/reducers/events-reducer.js","redux/reducers/user-reducer.js","redux/reducers/combine.js","redux/store/store.js","redux/actions/events-actions.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","panels/People.js","redux/actions/user-actions.js","Api/Auth.js","AppCulter.js","index.js"],"names":["module","exports","Header","panelTitle","panelId","className","src","IconApp","alt","MatchedScrollList","list","map","person","key","photo_400_orig","first_name","common_events","length","MatchedList","text","last_name","slice","Bottom","go","activePanel","onClick","data-to","id","userActive","userDes","gridActive","gridDes","swipeActive","swipeDes","eventActive","eventDes","chatActive","chatDes","fetchPeople","userId","a","async","page","size","url","config","fetch","method","fetchMatches","Matches","user","useSelector","state","userState","useState","matchedPeople","setMatchedPeople","setPage","useEffect","peopleResponse","json","newPeople","console","log","concat","content","loadMatches","document","getElementById","children","style","paddingTop","body","setProperty","EventInformationView","event","title","short_title","isDateProvided","dates","date","time","week","day","start_time","Date","start_date","toLocaleDateString","weekday","month","LeftButton","RightButton","PersonInformationView","liked_events","horizontalShift","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","CardView","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEventCard","hasOwnProperty","imageSource","images","image","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","setRate","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRate","otherUserId","user_id","Deck","setRateBy","cards","currentIndex","swipesCountFromUpload","loadCards","topCardIndex","bottomCardIndex","initialState","events","action","type","reducers","combineReducers","eventsState","eventsReducer","userReducer","store","createStore","reload","load","fetchEvents","categories","isReload","is_personal","requestState","getState","categoriesParameter","join","response","newEvents","dispatch","Swipe","loadEvents","undefined","Personal","fetchedUser","setUser","setToken","connect","sendPromise","fetchData","tokenObject","access_token","fetchToken","photo_200","GridEventList","data","product","data-name","name","Grid","categoriesId","setCategoriesId","isLoading","setIsLoading","onModal","e","modal","visibility","onChangeFilterItemState","currentTarget","dataset","isactive","splice","indexOf","classList","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","target","data-isactive","data-id","People","people","setPeople","loadPeople","setAuthorizedUser","authorize","status","AppCulter","setActivePanel","to","is_dev","settings","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.6816440b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/culterIcon.b59f5a6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.08ccde92.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationLeftButton.abf4fa91.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationRightButton.0a756658.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nimport IconApp from '../icons/culterIcon.svg';\n\nconst Header = ({panelId}) => {\n    let panelTitle = \"\";\n    switch (panelId) {\n        case \"personal\": panelTitle = \"Профиль\"; break;\n        case \"grid\": panelTitle = \"События\"; break;\n        case \"swipe\": panelTitle = \"События\"; break;\n        case \"people\": panelTitle = \"Люди\"; break;\n        case \"matches\": panelTitle = \"Диалоги\"; break;\n    }\n    return (\n        <div className=\"App-header\">\n            <div className=\"App-header-content\">\n               <img src={IconApp} alt=\"icon\" />\n                <p>{\"Culter\"}</p>\n            </div>\n            <div className=\"App-header-bottomLine\"></div>\n            <div className=\"App-header-panelTitle\">\n                <p>{panelTitle}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.first_name}</div>\n                <div className=\"Cirle\">{person.common_events.length}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst MatchedList = ({list}) => {\n    const text = \"Я о моём последнем сообщении\";\n\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img src={person.photo_400_orig} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.first_name + \" \" + person.last_name}</b></div>\n                    {text.length > 26 &&\n                        <div className=\"PersonPlacesList\">\n                            {text.slice(0, 26) + \"..\"}\n                        </div>}\n                    {!(text.length > 26) &&\n                        <div className=\"PersonPlacesList\">\n                            {text}\n                        </div>}\n                </div>\n            </div>\n            <div className=\"BottomLine\"></div>\n        </div>\n    );\n\n   /* return list.map(\n        person =>\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\n                    {person.commonPlaces.toString().length > 25 &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\n                        </div>}\n                    {!(person.commonPlaces.toString().length > 25) &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString()}\n                        </div>}\n                </div>\n            </div>\n    );*/\n}\n\n\n/*    renderPlaces = () => {\n        let str = this.props.commonPlaces.toString();\n        if (str.length > 25)\n            str = str.slice(0, 25) + \"..\";\n        return str;\n    };\n\n    render() {\n        return (\n            <div className=\"Person\" key={this.props.key}>\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\n                    <div className=\"PersonPlacesList\">\n                        {this.renderPlaces()}\n                    </div>\n                </div>\n            </div>\n        );\n    }*/\nexport default MatchedList;\n","import React, {useState} from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDes from \"../icons/chatGrey.svg\";\nimport eventDes from \"../icons/eventGrey.svg\";\nimport gridDes from \"../icons/gridGrey.svg\";\nimport swipeDes from \"../icons/swipeGrey.svg\";\nimport userDes from \"../icons/userGrey.svg\";\n\nimport chatActive from \"../icons/chatRed.svg\";\nimport eventActive from \"../icons/eventRed.svg\";\nimport gridActive from \"../icons/gridRed.svg\";\nimport swipeActive from \"../icons/swipeRed.svg\";\nimport userActive from \"../icons/userRed.svg\";\n\nconst Bottom = ({go, activePanel}) => {\n\n    return (\n        \n        <div className=\"App-bottom\">\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\n                data-to=\"personal\">\n               <img id=\"personalButton\" src={activePanel == \"personal\" ? userActive : userDes} alt=\"personal\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\n               <img id=\"gridButton\" src={activePanel == \"grid\" ? gridActive : gridDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\n                data-to=\"swipe\">\n               <img  id=\"swipeButton\" src={activePanel == \"swipe\" ? swipeActive : swipeDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\" onClick={go} data-to=\"people\">\n               <img id=\"peopleButton\" src={activePanel == \"people\" ? eventActive : eventDes} alt=\"people\" />\n           </div>\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\n                data-to=\"matches\">\n               <img id=\"matchesButton\" src={activePanel == \"matches\" ? chatActive : chatDes} alt=\"matches\" />\n           </div>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\n}\n\nexport default Bottom;\n","import config from \"./api_config\"\n\nexport async function fetchPeople(userId, page=0, size=20)  {\n    let url = config.url + \"/user/\" + userId \n        + \"/users/all?\"\n        + \"&page=\" + page \n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}\n\nexport async function fetchMatches(userId, page=0, size=20) {\n    let url = config.url + \"/user/\" + userId \n        + \"/users/ratings?\"\n        + \"&page=\" + page \n        + \"&size=\" + size;\n    return fetch(url, {method: \"GET\",});\n}","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport {fetchMatches, fetchPeople} from \"../Api/People\";\n\nconst Matches = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const [matchedPeople, setMatchedPeople] = useState([]);\n    const [page, setPage] = useState(0);\n    const [size, setSize] = useState(20);\n\n    async function loadMatches(){\n        let peopleResponse = await fetchMatches(user.id, page, size);\n        let newPeople = await peopleResponse.json();\n        console.log(newPeople);\n        setPage(page + 1);\n        setMatchedPeople(matchedPeople.concat(newPeople.content));\n    }\n\n    useEffect(() => {\n        if (user != null)\n            loadMatches();\n    }, [user]);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    /*<MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>*/\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"Head\">\n                <p>{matchedPeople.length != 1 ?\n                \"\"+matchedPeople.length+\" новых совпадений\" :\n                   \"\" + matchedPeople.length + \" новое совпадение\"}</p>\n            </div>\n\n            <div className=\"ScrollContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedScrollList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <div className=\"Dialogues\">\n                <p>Диалоги</p>\n            </div>\n            <div className=\"ListContainer\">\n                {matchedPeople.length > 0 ?\n                    <MatchedList\n                        list={matchedPeople}/> :\n                    <div/>\n                }\n            </div>\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n/*<MatchedNavigationButtons\n               stateList = {isSelectedFriends}\n               stateRefresh = {onSwitchClick}\n               matchedList = {matchedPeople}\n               friendsList = {matchedFriends}/>*/\n","import React from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nimport LeftButton from '../../icons/eventAnnotationLeftButton.svg';\nimport RightButton from '../../icons/eventAnnotationRightButton.svg';\n\nconst EventInformationView = ({event}) => {\n    let title = event.short_title.length > 14 ?\n        event.short_title.slice(0,11) + \"...\" : event.short_title;\n\n    let isDateProvided = event.dates.length > 0;\n\n    let date = \"\";\n    let time = \"\";\n    let week = \"\";\n    let day = \"\";\n\n    if (isDateProvided) {\n        time = event.dates[0].start_time.slice(0,event.dates[0].start_time.length-3);\n        date = new Date(event.dates[0].start_date);\n        week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\n        day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\n    }\n\n    return  (\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-aside\">\n                <div className=\"Swipe-content-down-button\">\n                    <img src={LeftButton} alt=\"leftButton\" />\n                </div>\n            </div>\n\n            <div className=\"Swipe-content-down-center\">\n                <p>{title}</p>\n                {isDateProvided &&\n                <p> {day}</p>}\n                {isDateProvided &&\n                <p>{time} {week} </p>\n                 }\n            </div>\n\n            <div className=\"Swipe-content-down-aside\">\n                <div className=\"Swipe-content-down-button\">\n                    <img id=\"Swipe-content-down-button-right\" src={RightButton} alt=\"rightButton\" />\n                </div>\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\nconst PersonInformationView = ({person}) => {\n\n    let wantedEvents = person.common_events.slice(0,5);\n\n    return  (\n\n        <div className=\"Swipe-content-down-container\">\n\n            <div className=\"Swipe-content-down-center user\">\n                <p>{person.first_name}</p>\n\n                <p>Общих событий: {person.common_events.length}</p>\n                <p>Всего событий: {person.liked_events.length}</p>\n            </div>\n\n        </div>\n    )\n\n};\n\nexport default PersonInformationView;\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\n\n\nconst EventInformationView = ({horizontalShift}) => {\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n    \n    return  (\n\n        <div className=\"Swipe-content-up-labels\">\n\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                Круто\n            </div>\n\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                Отстой\n            </div>\n        </div>\n    )\n\n};\n\nexport default EventInformationView;\n\n","import React, {Component} from 'react';\nimport '../ComponentsStyle/CardView.scss'\nimport EventInformationView from './EventInformationView';\nimport PersonInformationView from './PersonInformationView';\nimport ChoiceLabelsView from './ChoiceLabelsView';\n\n\nconst CardView = ({horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\n\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\n\n    let imageSource = isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n\n            <div className=\"Swipe-content-up\">\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\n\n                <div className=\"Swipe-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n    /*<div className=\"Swipe-content-down\">\n                    {isEventCard ?\n                        <EventInformationView event={cardInfo}/> :\n                        <PersonInformationView person={cardInfo}/>}\n                </div>*/\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./View/CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                          cardInfo={this.props.cardInfo}\n                          isSwiping={this.state.isSwiping}\n                          horizontalShift={this.state.horizontalShift}\n                          verticalShift={this.state.verticalShift}\n                          isUpperTouch={this.state.isUpperTouch}\n                            isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import config from \"./api_config\"\n\nexport async function setRate(userId, eventId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n\nexport async function setUserRate(userId, otherUserId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                user_id: otherUserId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport CardView from \"./View/CardView\";\nimport {setRate} from \"../Api/Ratings\";\n\nclass Deck extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentIndex: 0,\n            swipesCountFromUpload: 0\n        };\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\n    }\n\n     onSwipeEnd = async function(isLike) {\n        this.props.setRateBy(this.props.cards[this.state.currentIndex].id, isLike);\n\n        // Uploading if nessecary\n        if (this.state.swipesCountFromUpload == 10){\n            this.props.loadCards();\n            this.setState({\n                swipesCountFromUpload: 0\n            })\n        }\n\n        // Ticking index for next card and decreasing\n        this.setState({\n            currentIndex: this.state.currentIndex + 1,\n            swipesCountFromUpload: this.state.swipesCountFromUpload + 1\n        });\n\n\n    };\n\n    render() {\n\n        let cards = this.props.cards;\n        let topCardIndex = this.state.currentIndex;\n        let bottomCardIndex = topCardIndex + 1;\n        return (\n            cards.length > 0 && topCardIndex < cards.length ?\n                <div>\n                    <Card cardInfo={cards[topCardIndex]} onSwipeEnd={this.onSwipeEnd}/>\n                    {\n                        bottomCardIndex < cards.length ?\n                            <CardView cardInfo={cards[bottomCardIndex]}/>:\n                            <div/>\n                    }\n                </div> :\n                <div/>\n        );\n    }\n}\n\nexport default Deck;\n","const initialState = {\n    events: [],\n    page: 0,\n    size: 20\n};\n\nfunction events(state=initialState, action){\n    switch(action.type){\n        case \"RELOAD\":\n            state.events = action.events;\n            state.page = 1;\n            return state;\n        case \"LOAD\":\n            state.events = state.events.concat(action.events);\n            state.page = state.page + 1;\n            return state;\n    }\n    return state;\n}\n\nexport default events;","const initialState = {\n    user: null\n};\n\nfunction user(state=initialState, action){\n    switch(action.type){\n        case \"SET_AUTHORIZED_USER\":\n            state.user = action.user;\n            return state;\n    }\n    return state;\n}\n\nexport default user;","import {combineReducers} from \"redux\"\nimport eventsReducer from './events-reducer';\nimport userReducer from './user-reducer';\n\nconst reducers = combineReducers({\n    eventsState: eventsReducer,\n    userState: userReducer\n\n});\n\nexport default reducers;","import {createStore} from 'redux';\nimport reducers from '../reducers/combine'\n\n\nconst store = createStore(reducers);\n\nexport default store;","export function reload(events){\n    return {\n        type: \"RELOAD\",\n        events\n    }\n}\nexport function load(events){\n    return {\n        type: \"LOAD\",\n        events\n    }\n}","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nexport async function fetchEvents(categories=[1,6], isReload=false, is_personal=true )  {\n    let requestState = store.getState();\n\n    let userId = requestState.userState.user.id;\n    let page = requestState.eventsState.page;\n    let size = requestState.eventsState.size;\n\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\n\n    let url = config.url + \"/user/\" + userId \n        + \"/events/selection?\" + categoriesParameter \n        + \"&is_personal=\" + is_personal \n        + \"&page=\" + page \n        + \"&size=\" + size;\n    let response = await fetch(url, {method: \"GET\",});\n\n    let newEvents = await response.json();\n\n    if (isReload){\n        store.dispatch(reload(newEvents.content));\n    } else {\n        if (newEvents.content.length !== 0) \n         store.dispatch(load(newEvents.content));\n    }\n   \n       \n       \n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Swipe.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\nimport { setRate } from '../Api/Ratings';\n\nconst Swipe = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n\n    const [categories, setCategories] = useState([\"1\",\"6\"]);\n    \n\n    async function loadEvents(){\n        await fetchEvents(categories);\n    }\n    async function setRateBy(eventId, isLike){\n        setRate(user.id, eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null || user != undefined)\n            if (events.length == 0){\n                loadEvents();\n            }\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>\n\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n};\n\nexport default Swipe;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const [fetchedUser, setUser] = useState(null);\n    const [token, setToken] = useState(null);\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        async function fetchToken(){\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n                \"app_id\": 7197573, \"scope\": \"friends\"});\n            setToken(tokenObject.access_token);\n        }\n        fetchData();\n        fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {fetchedUser &&\n                        <div className=\"PersonalData\">\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\n\n                           <p>{fetchedUser.first_name ? fetchedUser.first_name : \"\"}</p>\n                           <p>{fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }</p>\n\n                            {\n                               /* token &&\n                                <p>\n                                    {token}\n                                </p>*/\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n}\n\nexport default Personal;\n","import React from 'react';\n\nimport '../panels/panelsStyle/Grid.css';\n\nconst GridEventList = ({data}) => {\n    return data.map (\n        product =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}>\n                <img src={product.images[0].image ? product.images[0].image : null}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { reload, load } from \"../redux/actions/events-actions\";\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../Api/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n    const events = useSelector(state => state.eventsState.events);\n\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                if (!isLoading){\n                    setIsLoading(true);\n                    loadEvents();\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n    async function loadEvents(){\n        await fetchEvents(categoriesId);\n        // let eventsResponse = await fetchEvents(user.id,categoriesId,page,size);\n        // let newEvents = await eventsResponse.json();\n\n        // setPage(page + 1);\n        // setDataEvents(dataEvents.concat(newEvents.content));\n        setIsLoading(false);\n    }\n\n    async function deleteAndloadEvents(){\n        if (user != null || user != undefined){\n            await fetchEvents(categoriesId,true);\n            setIsLoading(false);\n        }\n        // let eventsResponse = await fetchEvents(user.id,categoriesId,0,size);\n        // let newEvents = await eventsResponse.json();\n\n        // setPage(1);\n        // setDataEvents(newEvents.content);\n    }\n\n\n    useEffect(() => {\n        if (user != null || user != undefined)\n            if (events.length == 0){\n                loadEvents();\n            }\n              \n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n    const onModal = e => {\n        let modal = document.getElementById(\"filter_modal\");\n        if (modal.style.visibility == \"visible\") {\n            deleteAndloadEvents();\n        }\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\n    };\n\n    const onChangeFilterItemState = e => {\n        if (e.currentTarget.dataset.isactive == \"false\") {\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\n        }\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\n    };\n\n    const onCloseFilterEnvironment = e => {\n        if (e.target.id == \"filter_modal\") onModal(e);\n    };\n\n    return (\n        \n        <Panel id={id}>\n            <Header panelId={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {events &&\n                        <GridEventList data={events}/> }\n                </div>\n\n                <div className=\"Filter\" onClick={onModal}>\n                    <p>Фильтр</p>\n                </div>\n\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\n                    <div className=\"Filter-modal-content\">\n\n                        <div className=\"Filter-modal-header\">\n                            <p>Фильтр</p>\n                        </div>\n\n                        <div className=\"Filter-modal-categoriesTitle\">\n                            <p>Выберите тип мероприятия</p>\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\n                        </div>\n\n                        <div className=\"Filter-modal-categories\">\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\n                            </div>\n\n                            <div className=\"Filter-modal-categories-item\"\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\n                                <div className=\"Filter-modal-categories-item-checkbox\n                                    Filter-modal-categories-item-checkbox-active\"></div>\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\n                            </div>\n\n                        </div>\n\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\n                            <p>ОК</p>\n                        </div>\n\n                    </div>\n                </div>\n\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n};\nexport default Grid;\n// function mapStateToProps(store) {\n//     return {\n//         user: store.userState.user\n//     }\n//   }\n//   export default connect(mapStateToProps)(Grid)\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchPeople} from \"../Api/People\";\nimport { setUserRate } from '../Api/Ratings';\n\nconst People = ({id, go, activePanel}) => {\n    const user = useSelector(state => state.userState.user);\n\n    const [people, setPeople] = useState([]);\n    const [page, setPage] = useState(0);\n    const [categories, setCategories] = useState([1,6]);\n    const [size, setSize] = useState(20);\n\n    async function loadPeople(){\n        let peopleResponse = await fetchPeople(user.id, page, size);\n        let newPeople = await peopleResponse.json();\n\n        setPage(page + 1);\n        setPeople(people.concat(newPeople.content));\n\n    }\n\n    async function setRateBy(otherUserId, isLike){\n        setUserRate(user.id, otherUserId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null)\n            loadPeople();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n            document.body.style.setProperty('--background_page', 'white');\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header panelId={id}/>\n            <Deck cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\n\n            <Bottom go={go} activePanel={activePanel}/>\n        </Panel>\n    );\n};\n\nexport default People;\n","export function setAuthorizedUser(user){\n    return {\n        type: \"SET_AUTHORIZED_USER\",\n        user\n    }\n}","import config from \"./api_config\"\nimport store from \"../redux/store/store\";\nimport {setAuthorizedUser} from \"../redux/actions/user-actions\";\n\nexport async function authorize(user)  {\n    let url = `${config.url}/user/identify?user_id=${user.id}`;\n    let response = await fetch(url, {method: \"GET\",});\n    if (response.status == 200){\n        store.dispatch(setAuthorizedUser(user));\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Swipe from './panels/Swipe';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./Api/Auth\";\nimport config from \"./Api/api_config.json\";\nimport settings from \"./Api/dev_settings.json\";\n\nconst AppCulter = () => {\n    const [activePanel, setActivePanel] = useState('swipe');\n    const [user, setUser] = useState(null);\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : settings.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n            \n            await authorize(fetchedUser);\n            setUser(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id='personal' go={go} activePanel={activePanel}/>\n            <Grid id=\"grid\" go={go} activePanel={activePanel}/>\n            <Swipe id='swipe' go={go} activePanel={activePanel}/>\n            <People id='people' go={go} activePanel={activePanel}/>\n            <Matches id='matches' go={go} activePanel={activePanel}/>\n        </View>\n    );\n}\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Swipe from './panels/Swipe';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppCulter/>\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}