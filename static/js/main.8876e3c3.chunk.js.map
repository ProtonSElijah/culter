{"version":3,"sources":["Components/Header.js","Components/MatchedNavigationButtons.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Components/ExportMatchedPeople.js","Components/ExportMatchedFriends.js","panels/Matches.js","Components/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Api/Auth.js","AppCulter.js","index.js"],"names":["Header","text","className","toUpperCase","MatchedNavigationButtons","stateList","stateRefresh","matchedList","friendsList","RefreshButtons","value","document","getElementById","classList","toggle","id","onClick","length","MatchedScrollList","list","map","person","key","src","imgLink","alt","firstName","commonPlacesCount","MatchedList","lastName","slice","Bottom","go","left","right","data-to","matchedPeople","commonPlaces","matchedFriends","Matches","useState","isSelectedFriends","setIsSelectedFriends","useEffect","a","children","style","paddingTop","refreshHeaderVK","CardView","horizontalShift","verticalShift","hasMargin","isUpperTouch","cardInfo","contentStyle","isTransition","labelOpacity","Math","min","abs","labelStyles","opacity","images","image","short_title","Card","props","componentDidMount","setState","height","onTouch","event","touches","changedTouches","i","previousX","state","currentX","previousY","currentY","updatedState","clientX","clientY","isFirstTouch","onTouchStart","preventDefault","isSwiping","onTouchEnd","isLike","thisHandler","setTimeout","onSwipeEnd","viewRef","React","createRef","ref","this","onTouchMove","Component","setRate","userId","eventId","isLiked","url","config","fetch","method","headers","body","JSON","stringify","event_id","is_liked","Deck","user","events","currentIndex","loadEvents","updateEvents","nextIndex","bind","fetchEvents","Swipe","setEvents","bufferedEvents","setBufferedEvents","newEventsResponse","json","newEvents","loadAndUpdateEvents","console","log","content","Personal","fetchedUser","setUser","token","setToken","connect","sendPromise","tokenObject","access_token","fetchData","fetchToken","photo_200","first_name","last_name","authorize","accessToken","AppCulter","activePanel","setActivePanel","e","currentTarget","dataset","to","loadedUser","fetchAuthorizationData","then","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.8876e3c3.chunk.js","sourcesContent":["import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nconst Header = ({text}) => {\n    return (\n        <div className=\"App-header\">\n            <p>{text.toUpperCase()}</p>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedNavigationButtons = ({stateList, stateRefresh, matchedList, friendsList}) => {\n\n    const onSwitchMatched = () => {stateRefresh(true); RefreshButtons(true)};\n    const onSwitchFriends = () => {stateRefresh(false); RefreshButtons(false)};\n\n    const RefreshButtons = (value) => {\n        document.getElementById(\"matchedButton\").classList.toggle(\"NavigationButtonsActive\", value);\n        document.getElementById(\"friendsButton\").classList.toggle(\"NavigationButtonsActive\", !value);\n        document.getElementById(\"matchedButton\").classList.toggle(\"NavigationButtonsDefault\", !value);\n        document.getElementById(\"friendsButton\").classList.toggle(\"NavigationButtonsDefault\", value);\n    };\n\n    return (\n        <div className=\"NavigationButtons\">\n            <button\n                id=\"matchedButton\"\n                className=\"NavigationButtonsActive\"\n                onClick={onSwitchMatched}>\n                    {matchedList.length} людей\n            </button>\n            <button\n                id=\"friendsButton\"\n                className=\"NavigationButtonsDefault\"\n                onClick={onSwitchFriends}>\n                    {friendsList.length} друг\n                </button>\n        </div>\n    );\n}\n\nexport default MatchedNavigationButtons;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.imgLink} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.firstName}</div>\n                <div className=\"Cirle\">{person.commonPlacesCount}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst MatchedList = ({list}) => {\n    const text = \"Я о моём последнем сообщении\";\n\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    {text.length > 26 &&\n                        <div className=\"PersonPlacesList\">\n                            {text.slice(0, 26) + \"..\"}\n                        </div>}\n                    {!(text.length > 26) &&\n                        <div className=\"PersonPlacesList\">\n                            {text}\n                        </div>}\n                </div>\n            </div>\n            <div className=\"BottomLine\"></div>\n        </div>\n    );\n\n   /* return list.map(\n        person =>\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\n                    {person.commonPlaces.toString().length > 25 &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\n                        </div>}\n                    {!(person.commonPlaces.toString().length > 25) &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString()}\n                        </div>}\n                </div>\n            </div>\n    );*/\n}\n\n\n/*    renderPlaces = () => {\n        let str = this.props.commonPlaces.toString();\n        if (str.length > 25)\n            str = str.slice(0, 25) + \"..\";\n        return str;\n    };\n\n    render() {\n        return (\n            <div className=\"Person\" key={this.props.key}>\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\n                    <div className=\"PersonPlacesList\">\n                        {this.renderPlaces()}\n                    </div>\n                </div>\n            </div>\n        );\n    }*/\nexport default MatchedList;\n","import React from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nconst Bottom = ({go, left, right}) => {\n    return (\n        <div className=\"App-bottom\">\n            <div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\n            <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>\n        </div>\n    );\n}\n\nexport default Bottom;\n","const matchedPeople = [\n    {\n        key: \"1\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"2\",\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\n        firstName: \"Никита\",\n        lastName: \"Башкин\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Концерт Замая\"\n        ]\n    },\n    {\n        key: \"3\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"4\",\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\n        firstName: \"Никита\",\n        lastName: \"Башкин\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Концерт Замая\"\n        ]\n    },\n    {\n        key: \"5\",\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\n        firstName: \"Никита\",\n        lastName: \"Башкин\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Концерт Замая\"\n        ]\n    },\n    {\n        key: \"6\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"7\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"8\",\n        imgLink: \"https://sun9-45.userapi.com/c854528/v854528685/d255a/ooAN1guMTAc.jpg\",\n        firstName: \"Данила\",\n        lastName: \"Сергачев\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Рок\"\n        ]\n    },\n    {\n        key: \"9\",\n        imgLink: \"https://sun9-44.userapi.com/c848536/v848536553/153b99/ypLiVUE1jZA.jpg\",\n        firstName: \"Илья\",\n        lastName: \"Курнаков\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Треп\"\n        ]\n    }];\n\n\nexport default matchedPeople;\n","const matchedFriends = [\n    {\n        key: \"0\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    }];\n\nexport default matchedFriends;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport matchedPeople from \"../Components/ExportMatchedPeople\";\nimport matchedFriends from \"../Components/ExportMatchedFriends\";\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Matches = ({id, go}) => {\n    const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n\n    const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header text={id}/>\n            <div className=\"Head\">\n                <p>Новые совпадения</p>\n            </div>\n            <MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>\n            <div className=\"ScrollContainer\">\n                <MatchedScrollList\n                       list={isSelectedFriends\n                            ? matchedPeople\n                            : matchedFriends} />\n            </div>\n            <div className=\"Head\">\n                <p>Диалоги</p>\n            </div>\n            <div className=\"ListContainer\">\n                <MatchedList\n                       list = {isSelectedFriends\n                            ? matchedPeople\n                            : matchedFriends} />\n            </div>\n            <Bottom go={go} left=\"swipe\" right=\"personal\"/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/CardView.css'\n\nconst CardView = ({horizontalShift, verticalShift, hasMargin, isUpperTouch, cardInfo,isTransition}) => {\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotationCoefficient * horizontalShift / 15 + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    if (hasMargin) {\n        contentStyle[\"margin-top\"] =  \"-80vmax\";\n    }\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n            <div className=\"Swipe-content-up\">\n                <div className=\"Swipe-content-up-labels\">\n                    <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                        Круто\n                    </div>\n                    <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                        Отстой\n                    </div>\n                </div>\n                <img className=\"Swipe-content-up-image\"\n                     src={cardInfo.images[0].image}/>\n            </div>\n            <div className=\"Swipe-content-down\">\n                <p id=\"Font-bold\"><b>{cardInfo.short_title}</b></p>\n                <p><b>4</b> апреля, суббота, <b>20:00</b></p>\n                <p><b>20</b> человек идёт - <b>1</b> друг</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.css'\nimport CardView from \"./CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.viewRef = React.createRef();\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            height: 650\n        })\n    };\n\n    onTouch = (event) => {  \n\n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            let previousX = this.state.currentX;\n            let previousY = this.state.currentY;\n\n            let updatedState = {\n                currentX: touches[i].clientX,\n                currentY: touches[i].clientY,\n            };\n\n            if (this.state.isFirstTouch){\n                updatedState.isUpperTouch = touches[i].clientY > this.state.height / 2;\n                updatedState.isFirstTouch = false;\n            } else {\n                updatedState.horizontalShift = this.state.horizontalShift + touches[i].clientX - previousX;\n                updatedState.verticalShift = this.state.verticalShift + touches[i].clientY - previousY;\n            }\n\n            this.setState(updatedState);\n        }\n    };\n\n    onTouchStart = (event) => {\n        event.preventDefault();\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.setState({\n                isTransition: true\n            });\n            this.setState(\n                {\n                    horizontalShift: this.state.horizontalShift * 5,\n                    verticalShift: this.state.verticalShift * 5,\n                });\n\n\n            let thisHandler = this;\n            setTimeout(function () {\n                thisHandler.setState({\n                    isTransition: false,\n                    horizontalShift: 0,\n                    verticalShift: 0,\n                    currentX: 0,\n                    currentY: 0,\n                });\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n\n\n        } else {\n            this.setState(\n                {\n                    horizontalShift: 0,\n                    verticalShift: 0,\n                    currentX: 0,\n                    currentY: 0,\n                    isSwiping: false,\n                    isTransition: true\n                });\n        }\n\n    };\n\n    render() {\n\n        return (\n            <div ref={this.viewRef}\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                          cardInfo={this.props.cardInfo}\n                          isSwiping={this.state.isSwiping}\n                          horizontalShift={this.state.horizontalShift}\n                          verticalShift={this.state.verticalShift}\n                          isUpperTouch={this.state.isUpperTouch}\n                            isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import config from \"./api_config\"\n\nexport async function setRate(userId, eventId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport \"./testData/exportDataCards\"\nimport {cardsData} from \"./testData/exportDataCards\";\nimport CardView from \"./CardView\";\nimport {setRate} from \"../Api/Ratings\";\n\nclass Deck extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentIndex: 0\n        }\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\n    }\n    \n     onSwipeEnd = async function(isLike) {\n        setRate(this.props.user.id, this.props.events[this.state.currentIndex].id, isLike);\n\n        if (this.state.currentIndex === 5){\n            this.props.loadEvents();\n        }\n\n        if (this.state.currentIndex === 9){\n            await this.props.updateEvents();\n        }\n        this.setState({\n            currentIndex: this.nextIndex()\n        });\n\n        \n    };\n    nextIndex = () => {\n        return this.state.currentIndex === 9 ? 0 : this.state.currentIndex + 1;\n    };\n    render() {\n\n        let events = this.props.events;\n        return (\n\n                events.length !== 0 ?\n                <div>\n                    <Card cardInfo={this.props.events[this.state.currentIndex]} onSwipeEnd={this.onSwipeEnd}/>\n                    <CardView hasMargin={true} cardInfo={this.props.events[this.nextIndex()]}/>\n                </div>\n                    : <div>\n\n                    </div>\n\n        );\n    }\n}\n\nexport default Deck;\n","import config from \"./api_config\"\n\nexport async function fetchEvents(userId)  {\n    let url = config.url + \"/user/\" + userId + \"/events/selection?category_id=1&category_id=6\";\n    if (userId == \"test\"){\n        url = config.url + \"/user/\" + userId + \"/events\";\n    }\n    return await fetch(url, {\n        method: \"GET\",\n    });\n}\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Swipe.css';\nimport Card from \"../Components/Card\";\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\n\nconst Swipe = ({id, go, user}) => {\n    const [events, setEvents] = useState([]);\n    const [bufferedEvents, setBufferedEvents] = useState([]);\n    const [people, setPeople] = useState([]);\n    const [isUserSet, setIsUserSet] = useState(false);\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n\n        async function loadAndUpdateEvents(){\n            if (user != null){\n                let newEventsResponse = await fetchEvents(user.id);\n                let newEvents = await newEventsResponse.json();\n                setEvents(newEvents);\n            }\n        }\n        loadAndUpdateEvents();\n\n    }, []);\n\n    useEffect(() => {\n        console.log(\"hello\");\n        async function loadAndUpdateEvents(){\n            if (user != null){\n                let newEventsResponse = await fetchEvents(user.id);\n                let newEvents = await newEventsResponse.json();\n                console.log(newEvents);\n                setEvents(newEvents.content);\n            }\n        }\n        loadAndUpdateEvents();\n    }, [user]);\n\n\n    async function loadEvents(){\n        let newEventsResponse = await fetchEvents(user.id);\n        let newEvents = await newEventsResponse.json();\n        setBufferedEvents(newEvents);\n    }\n\n    async function updateEvents(){\n        setEvents(bufferedEvents);\n    }\n\n    return (\n        <Panel id={id}>\n            <Header text={id}/>\n            <div className=\"HeaderLine\"></div>\n            <Deck userId={user} events={events} loadEvents={loadEvents} updateEvents={updateEvents}/>\n\n            <Bottom go={go} left=\"personal\" right=\"matches\"/>\n        </Panel>\n    );\n};\n\nexport default Swipe;\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id, go}) => {\n    const [fetchedUser, setUser] = useState(null);\n    const [token, setToken] = useState(null);\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        async function fetchToken(){\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n                \"app_id\": 7197573, \"scope\": \"friends\"});\n            setToken(tokenObject.access_token);\n        }\n        fetchData();\n        fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header text={id}></Header>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {fetchedUser &&\n                        <div className=\"PersonalData\">\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\n                           <p>\n                           {fetchedUser.first_name ? fetchedUser.first_name : \"\"}\n                           {fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }\n                           </p>\n                            {\n                                token &&\n                                <p>\n                                    {token}\n                                </p>\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom go={go} left=\"matches\" right=\"swipe\"/>\n        </Panel>\n    );\n}\n\nexport default Personal;\n","import config from \"./api_config\"\n\nexport async function authorize(userId, accessToken)  {\n    let url = `${config.url}/user/identify?user_id=${userId}&access_token=${accessToken}`;\n    return await fetch(url, {\n        method: \"GET\",\n    });\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Swipe from './panels/Swipe';\nimport Matches from './panels/Matches';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./Api/Auth\";\n\nconst AppCulter = () => {\n    const [activePanel, setActivePanel] = useState('panels');\n    const [user, setUser] = useState(null);\n    const [slideIndex, setSlideIndex] = useState(1);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    useEffect(() => {\n\n        async function fetchAuthorizationData(){\n            const loadedUser = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(loadedUser);\n            let authStatus = await authorize(loadedUser.id);\n\n        }\n\n        fetchAuthorizationData().then();\n\n\n    }, []);\n    return (\n        <View activePanel={activePanel}>\n            <Personal id='personal' go={go}/>\n            <Swipe user={user} id='swipe' go={go}/>\n            <Matches id='matches' go={go}/>\n        </View>\n    );\n}\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Swipe from './panels/Swipe';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<AppCulter />, document.getElementById('root'));\n"],"sourceRoot":""}