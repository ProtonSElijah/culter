{"version":3,"sources":["Components/MatchedPerson.js","panels/Matches.js","index.js"],"names":["MatchedPerson","props","renderPlaces","str","commonPlaces","toString","length","slice","className","src","this","imgLink","alt","name","commonPlacesCount","Component","Matches","onSwitchClick","value","setState","isSelectedFriends","renderMatchedPeople","state","matchedPeople","map","person","renderMatchedFriends","matchedFriends","onClick","connect","send","ReactDOM","render","document","getElementById"],"mappings":"qjBA+BeA,G,mBA3BX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAGVC,aAAe,WACX,IAAIC,EAAM,EAAKF,MAAMG,aAAaC,WAGlC,OAFIF,EAAIG,OAAS,KACbH,EAAMA,EAAII,MAAM,EAAG,IAAM,MACtBJ,GARQ,E,sEAYf,OACI,yBAAKK,UAAU,UACX,yBAAKC,IAAKC,KAAKT,MAAMU,QAASC,IAAK,iBACnC,yBAAKJ,UAAU,cACX,yBAAKA,UAAU,cAAa,2BAAIE,KAAKT,MAAMY,OAC3C,yBAAKL,UAAU,qBAAf,4DAA+C,2BAAIE,KAAKT,MAAMa,oBAC9D,yBAAKN,UAAU,oBACVE,KAAKR,sB,GArBFa,cC+FbC,G,0BAzFX,WAAYf,GAAO,IAAD,8BACd,4CAAMA,KAkCVgB,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACC,kBAAkBF,KApCnB,EAuClBG,oBAAsB,WACpB,OAAO,EAAKC,MAAMC,cAAcC,KAC5B,SAAAC,GAAM,OACJ,6BACK,kBAAC,EAAD,CACGd,QAASc,EAAOd,QAChBE,KAAMY,EAAOZ,KACbC,kBAAmBW,EAAOX,kBAC1BV,aAAcqB,EAAOrB,oBA/CnB,EAqDlBsB,qBAAuB,WACnB,OAAO,EAAKJ,MAAMK,eAAeH,KAC7B,SAAAC,GAAM,OACF,yBAAKjB,UAAU,cACV,kBAAC,EAAD,CACGG,QAASc,EAAOd,QAChBE,KAAMY,EAAOZ,KACbC,kBAAmBW,EAAOX,kBAC1BV,aAAcqB,EAAOrB,oBA3DrC,EAAKkB,MAAQ,CACTF,mBAAmB,EACnBG,cAAe,CACX,CACIZ,QAAS,uEACTE,KAAM,0GACNC,kBAAmB,EACnBV,aAAc,CACV,uCAAU,uCAAU,oGAAqB,UAGjD,CACIO,QAAS,uEACTE,KAAM,4EACNC,kBAAmB,EACnBV,aAAc,CACV,+EAIZuB,eAAgB,CACZ,CACIhB,QAAS,uEACTE,KAAM,0GACNC,kBAAmB,EACnBV,aAAc,CACV,uCAAU,uCAAU,oGAAqB,YA5B3C,E,sEAmER,IAAD,OACL,OACI,yBAAKI,UAAU,gBACX,yBAAKA,UAAU,cACX,uCAEL,yBAAKA,UAAU,qBACV,4BAAQoB,QAAS,kBAAK,EAAKX,eAAc,KAAzC,kDACA,4BAAQW,QAAS,kBAAK,EAAKX,eAAc,KAAzC,iCAEJ,yBAAKT,UAAU,iBACVE,KAAKY,MAAMF,kBAAoBV,KAAKW,sBAAwBX,KAAKgB,wBAEtE,yBAAKlB,UAAU,cACX,yBAAKA,UAAU,oBAAmB,+BAClC,yBAAKA,UAAU,qBAAoB,qC,GApFjCO,cCKtBc,IAAQC,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,W","file":"static/js/main.29d079f3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass MatchedPerson extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderPlaces = () => {\r\n        let str = this.props.commonPlaces.toString();\r\n        if (str.length > 25)\r\n            str = str.slice(0, 25) + \"..\";\r\n        return str;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Person\">\r\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\r\n                    <div className=\"PersonPlacesList\">\r\n                        {this.renderPlaces()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MatchedPerson;\r\n","import React, {Component} from 'react';\r\nimport {CellButton} from \"@vkontakte/vkui\";\r\nimport MatchedPerson from \"../Components/MatchedPerson\";\r\nimport '../ResetBrowser.css';\r\nimport './Matches.css';\r\n\r\nclass Matches extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSelectedFriends: true, //показывает выбранную вкладку\r\n            matchedPeople: [\r\n                {\r\n                    imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n                    name: \"Молодецкий Арсений\",\r\n                    commonPlacesCount: 4,\r\n                    commonPlaces: [\r\n                        \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n                    ]\r\n                },\r\n                {\r\n                    imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n                    name: \"Никита Башкин\",\r\n                    commonPlacesCount: 1,\r\n                    commonPlaces: [\r\n                        \"Концерт Замая\"\r\n                    ]\r\n                }\r\n            ],\r\n            matchedFriends: [\r\n                {\r\n                    imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n                    name: \"Молодецкий Арсений\",\r\n                    commonPlacesCount: 4,\r\n                    commonPlaces: [\r\n                        \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    onSwitchClick = (value) => {\r\n        this.setState({isSelectedFriends:value});\r\n    };\r\n\r\n    renderMatchedPeople = () => {\r\n      return this.state.matchedPeople.map(\r\n          person =>\r\n            <div>\r\n                {<MatchedPerson\r\n                    imgLink={person.imgLink}\r\n                    name={person.name}\r\n                    commonPlacesCount={person.commonPlacesCount}\r\n                    commonPlaces={person.commonPlaces}\r\n                />}\r\n            </div>\r\n      )\r\n    };\r\n\r\n    renderMatchedFriends = () =>{\r\n        return this.state.matchedFriends.map(\r\n            person =>\r\n                <div className=\"PersonList\">\r\n                    {<MatchedPerson\r\n                        imgLink={person.imgLink}\r\n                        name={person.name}\r\n                        commonPlacesCount={person.commonPlacesCount}\r\n                        commonPlaces={person.commonPlaces}\r\n                    />}\r\n                </div>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PanelMatches\">\r\n                <div className=\"App-header\">\r\n                    <p>Matches</p>\r\n                </div>\r\n               <div className=\"NavigationButtons\">\r\n                    <button onClick={()=> this.onSwitchClick(true)}> 2 Совпали </button>\r\n                    <button onClick={()=> this.onSwitchClick(false)}> 1 друг </button>\r\n                </div>\r\n                <div className=\"ListContainer\">\r\n                    {this.state.isSelectedFriends ? this.renderMatchedPeople() : this.renderMatchedFriends()}\r\n                </div>\r\n                <div className=\"App-bottom\">\r\n                    <div className=\"BottomLeftButton\"><div></div></div>\r\n                    <div className=\"BottomRightButton\"><div></div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Matches;\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\n//import App from './App';\r\n//import Test from './Test';\r\nimport Matches from './panels/Matches';\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<Matches />, document.getElementById('root'));\r\n"],"sourceRoot":""}