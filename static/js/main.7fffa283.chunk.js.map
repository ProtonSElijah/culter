{"version":3,"sources":["icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","Components/Header.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Components/ExportMatchedPeople.js","Components/ExportMatchedFriends.js","panels/Matches.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","Api/People.js","panels/People.js","Api/Auth.js","AppCulter.js","index.js","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg","icons/swipeGrey.svg","icons/userGrey.svg"],"names":["module","exports","Header","panelTitle","panelId","className","toUpperCase","MatchedScrollList","list","map","person","key","src","imgLink","alt","firstName","commonPlacesCount","MatchedList","text","lastName","length","slice","Bottom","go","onClick","data-to","id","userDes","gridDes","swipeDes","eventDes","chatDes","matchedPeople","commonPlaces","matchedFriends","Matches","useState","isSelectedFriends","useEffect","a","async","document","getElementById","children","style","paddingTop","body","setProperty","EventInformationView","event","title","short_title","dates","time","start_time","date","Date","start_date","week","toLocaleDateString","weekday","day","month","PersonInformationView","common_events","first_name","liked_events","horizontalShift","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","CardView","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEventCard","hasOwnProperty","imageSource","images","image","photo_400_orig","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","state","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","setRate","userId","eventId","isLiked","url","config","fetch","method","headers","JSON","stringify","event_id","is_liked","setUserRate","otherUserId","user_id","Deck","setRateBy","cards","currentIndex","swipesCountFromUpload","loadCards","topCardIndex","bottomCardIndex","fetchEvents","categories","page","size","is_personal","categoriesParameter","join","Swipe","user","events","setEvents","setPage","loadEvents","eventsResponse","json","newEventsJson","newEvents","content","isLastPartition","undefined","concat","Personal","fetchedUser","setUser","token","setToken","connect","sendPromise","fetchData","tokenObject","access_token","fetchToken","photo_200","last_name","GridEventList","data","product","data-name","name","Grid","dataEvents","setDataEvents","categoriesId","setCategoriesId","isLoading","setIsLoading","onModal","e","modal","visibility","deleteAndloadEvents","onChangeFilterItemState","currentTarget","dataset","isactive","splice","indexOf","classList","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","console","log","target","data-isactive","data-id","fetchPeople","People","people","setPeople","loadPeople","peopleResponse","newPeople","authorize","AppCulter","activePanel","setActivePanel","to","is_dev","settings","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.7fffa283.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.b64b72cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.2f9e85a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","import React from 'react';\r\nimport './ComponentsStyle/Header.css';\r\n\r\nconst Header = ({panelId}) => {\r\n    let panelTitle = \"\";\r\n    switch (panelId) {\r\n        case \"personal\": panelTitle = \"Профиль\"; break;\r\n        case \"grid\": panelTitle = \"События\"; break;\r\n        case \"swipe\": panelTitle = \"События\"; break;\r\n        case \"people\": panelTitle = \"Люди\"; break;\r\n        case \"matches\": panelTitle = \"Диалоги\"; break;\r\n    }\r\n    return (\r\n        <div className=\"App-header\">\r\n            <div className=\"App-header-content\">\r\n                <p>{\"Culter\".toUpperCase()}</p>\r\n            </div>\r\n            <div className=\"App-header-bottomLine\"></div>\r\n            <div className=\"App-header-panelTitle\">\r\n                <p>{panelTitle}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst MatchedScrollList = ({list}) => {\r\n    return list.map(\r\n        person =>\r\n        <div className=\"ScrollContainerContent\" key={person.key}>\r\n            <div className=\"ScrollPerson\">\r\n                <img src={person.imgLink} alt=\"Person\" className=\"ScrollPeopleImg\"/>\r\n                <div>{person.firstName}</div>\r\n                <div className=\"Cirle\">{person.commonPlacesCount}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchedScrollList;\r\n","import React, {useState} from 'react';\r\n\r\nconst MatchedList = ({list}) => {\r\n    const text = \"Я о моём последнем сообщении\";\r\n\r\n    return list.map(\r\n        person =>\r\n        <div className=\"PersonContainer\">\r\n            <div className=\"Person\" key={person.key}>\r\n                <img src={person.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\r\n                    {text.length > 26 &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {text.slice(0, 26) + \"..\"}\r\n                        </div>}\r\n                    {!(text.length > 26) &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {text}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"BottomLine\"></div>\r\n        </div>\r\n    );\r\n\r\n   /* return list.map(\r\n        person =>\r\n            <div className=\"Person\" key={person.key}>\r\n                <img src={person.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\r\n                    {person.commonPlaces.toString().length > 25 &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\r\n                        </div>}\r\n                    {!(person.commonPlaces.toString().length > 25) &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {person.commonPlaces.toString()}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n    );*/\r\n}\r\n\r\n\r\n/*    renderPlaces = () => {\r\n        let str = this.props.commonPlaces.toString();\r\n        if (str.length > 25)\r\n            str = str.slice(0, 25) + \"..\";\r\n        return str;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Person\" key={this.props.key}>\r\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\r\n                    <div className=\"PersonPlacesList\">\r\n                        {this.renderPlaces()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }*/\r\nexport default MatchedList;\r\n","import React, {useState} from 'react';\r\nimport './ComponentsStyle/Bottom.css';\r\n\r\nimport chatDes from \"../icons/chatGrey.svg\";\r\nimport eventDes from \"../icons/eventGrey.svg\";\r\nimport gridDes from \"../icons/gridGrey.svg\";\r\nimport swipeDes from \"../icons/swipeGrey.svg\";\r\nimport userDes from \"../icons/userGrey.svg\";\r\n\r\nimport chatActive from \"../icons/chatRed.svg\";\r\nimport eventActive from \"../icons/eventRed.svg\";\r\nimport gridActive from \"../icons/gridRed.svg\";\r\nimport swipeActive from \"../icons/swipeRed.svg\";\r\nimport userActive from \"../icons/userRed.svg\";\r\n\r\nconst Bottom = ({go}) => {\r\n\r\n    return (\r\n        <div className=\"App-bottom\">\r\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\r\n                data-to=\"personal\">\r\n               <img id=\"personalButton\" src={userDes} alt=\"personal\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\r\n               <img id=\"gridButton\" src={gridDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\r\n                data-to=\"swipe\">\r\n               <img  id=\"swipeButton\" src={swipeDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\" onClick={go} data-to=\"people\">\r\n               <img id=\"peopleButton\" src={eventDes} alt=\"people\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\r\n                data-to=\"matches\">\r\n               <img id=\"matchesButton\" src={chatDes} alt=\"matches\" />\r\n           </div>\r\n        </div>\r\n    );\r\n    //Переключатель - две кнопки\r\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\r\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\r\n}\r\n\r\nexport default Bottom;\r\n","const matchedPeople = [\r\n    {\r\n        key: \"1\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"2\",\r\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n        firstName: \"Никита\",\r\n        lastName: \"Башкин\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Концерт Замая\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"3\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"4\",\r\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n        firstName: \"Никита\",\r\n        lastName: \"Башкин\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Концерт Замая\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"5\",\r\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\r\n        firstName: \"Никита\",\r\n        lastName: \"Башкин\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Концерт Замая\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"6\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"7\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"8\",\r\n        imgLink: \"https://sun9-45.userapi.com/c854528/v854528685/d255a/ooAN1guMTAc.jpg\",\r\n        firstName: \"Данила\",\r\n        lastName: \"Сергачев\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Рок\"\r\n        ]\r\n    },\r\n    {\r\n        key: \"9\",\r\n        imgLink: \"https://sun9-44.userapi.com/c848536/v848536553/153b99/ypLiVUE1jZA.jpg\",\r\n        firstName: \"Илья\",\r\n        lastName: \"Курнаков\",\r\n        commonPlacesCount: 1,\r\n        commonPlaces: [\r\n            \"Треп\"\r\n        ]\r\n    }];\r\n\r\n\r\nexport default matchedPeople;\r\n","const matchedFriends = [\r\n    {\r\n        key: \"0\",\r\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\r\n        firstName: \"Арсений\",\r\n        lastName: \"Молодецкий\",\r\n        commonPlacesCount: 4,\r\n        commonPlaces: [\r\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\r\n        ]\r\n    }];\r\n\r\nexport default matchedFriends;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from \"../Components/Header\";\r\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\r\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\r\nimport MatchedList from \"../Components/MatchedList\";\r\nimport Bottom from \"../Components/Bottom\";\r\n\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Matches.css';\r\n\r\nimport matchedPeople from \"../Components/ExportMatchedPeople\";\r\nimport matchedFriends from \"../Components/ExportMatchedFriends\";\r\n\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\n\r\nconst Matches = ({id, go}) => {\r\n    const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\r\n\r\n    const onSwitchClick = (value) => {setIsSelectedFriends(value);}\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n    /*<MatchedNavigationButtons\r\n                stateList = {isSelectedFriends}\r\n                stateRefresh = {onSwitchClick}\r\n                matchedList = {matchedPeople}\r\n                friendsList = {matchedFriends}/>*/\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <div className=\"Head\">\r\n                <p>{matchedPeople.length != 1 ?\r\n                \"\"+matchedPeople.length+\" новых совпадений\" :\r\n                   \"\" + matchedPeople.length + \"новое совпадение\"}</p>\r\n            </div>\r\n\r\n            <div className=\"ScrollContainer\">\r\n                <MatchedScrollList\r\n                       list={isSelectedFriends\r\n                            ? matchedPeople\r\n                            : matchedFriends} />\r\n            </div>\r\n            <div className=\"Dialogies\">\r\n                <p>Диалоги</p>\r\n            </div>\r\n            <div className=\"ListContainer\">\r\n                <MatchedList\r\n                       list = {isSelectedFriends\r\n                            ? matchedPeople\r\n                            : matchedFriends} />\r\n            </div>\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Matches;\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\n\r\n\r\nconst EventInformationView = ({event}) => {\r\n    let title = event.short_title.length > 20 ?\r\n        event.short_title.slice(0,15) + \"...\" : event.short_title;\r\n\r\n    let isDateProvided = event.dates.length > 0;\r\n    if (!isDateProvided){\r\n        return  (\r\n            <div>\r\n                <p id=\"Font-bold\">{title}</p>\r\n            </div>\r\n        )\r\n    }\r\n    let time = event.dates[0].start_time.slice(0,event.dates[0].start_time.length-3);\r\n\r\n    let date = new Date(event.dates[0].start_date);\r\n\r\n    let week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\r\n    let day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\r\n\r\n    return  (\r\n        <div>\r\n            <p id=\"Font-bold\">{title}</p>\r\n                <p> {day}</p>\r\n                <p>{time} {week} </p>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default EventInformationView;\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\n\r\n\r\nconst PersonInformationView = ({person}) => {\r\n\r\n    let wantedEvents = person.common_events.slice(0,5);\r\n\r\n    return  (\r\n\r\n        <div>\r\n            <p id=\"Font-bold\">{person.first_name}</p>\r\n\r\n            <p>Общих событий: {person.common_events.length}</p>\r\n            <p>Всего событий: {person.liked_events.length}</p>\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default PersonInformationView;\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\n\r\n\r\nconst EventInformationView = ({horizontalShift}) => {\r\n\r\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\r\n    let labelStyles = {\r\n        left :{\r\n            opacity: horizontalShift < 0 ? labelOpacity : 0\r\n        },\r\n        right :{\r\n            opacity: horizontalShift > 0 ? labelOpacity : 0\r\n        }};\r\n    \r\n    return  (\r\n\r\n        <div className=\"Swipe-content-up-labels\">\r\n\r\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\r\n                Круто\r\n            </div>\r\n\r\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\r\n                Отстой\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default EventInformationView;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\nimport EventInformationView from './EventInformationView';\r\nimport PersonInformationView from './PersonInformationView';\r\nimport ChoiceLabelsView from './ChoiceLabelsView';\r\n\r\n\r\nconst CardView = ({horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\r\n\r\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\r\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\r\n    let contentStyle = {\r\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\r\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\r\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\r\n        };\r\n\r\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\r\n\r\n    let imageSource = isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\r\n\r\n    return  (\r\n\r\n        <div className=\"Swipe-content\" style={contentStyle}>\r\n\r\n            <div className=\"Swipe-content-up\">\r\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\r\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\r\n\r\n                <div className=\"Swipe-content-down\">\r\n                    {isEventCard ?\r\n                        <EventInformationView event={cardInfo}/> :\r\n                        <PersonInformationView person={cardInfo}/>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n    /*<div className=\"Swipe-content-down\">\r\n                    {isEventCard ?\r\n                        <EventInformationView event={cardInfo}/> :\r\n                        <PersonInformationView person={cardInfo}/>}\r\n                </div>*/\r\n};\r\n\r\nexport default CardView;\r\n","import React, {Component} from 'react';\r\nimport './ComponentsStyle/Card.scss'\r\nimport CardView from \"./View/CardView\";\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentX: 0,\r\n            currentY: 0,\r\n            horizontalShift: 0,\r\n            verticalShift: 0,\r\n            isFirstTouch: true,\r\n            isSwiping: false,\r\n            height: 0\r\n        };\r\n        this.animatePick = this.animatePick.bind(this);\r\n        this.resetCard = this.resetCard.bind(this);\r\n    }\r\n\r\n    onTouch = (event) => {  \r\n        let touches = event.changedTouches;\r\n        for (let i = 0; i < touches.length; i++){\r\n            this.updateByTouch(touches[i])\r\n        }\r\n    };\r\n\r\n    onTouchStart = (event) => {\r\n        this.setState({\r\n            isFirstTouch: true,\r\n            isSwiping: true,\r\n            isTransition: false\r\n        });\r\n    };\r\n\r\n    onTouchEnd = (event) => {\r\n        if (Math.abs(this.state.horizontalShift) > 100){\r\n            let isLike= this.state.horizontalShift > 0;\r\n            this.animatePick();\r\n            let thisHandler = this;\r\n            setTimeout(() => {\r\n                thisHandler.resetCard(false);\r\n                thisHandler.props.onSwipeEnd(isLike);\r\n            },400);\r\n        } else {\r\n            this.resetCard(true);\r\n        }\r\n\r\n    };\r\n\r\n    updateByTouch = (touch) =>{\r\n        let previousX = this.state.currentX;\r\n        let previousY = this.state.currentY;\r\n\r\n        let updatedState = {\r\n            currentX: touch.clientX,\r\n            currentY: touch.clientY,\r\n        };\r\n\r\n        if (this.state.isFirstTouch){\r\n            updatedState.isUpperTouch = touch.clientY > 300;\r\n            updatedState.isFirstTouch = false;\r\n        } else {\r\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\r\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\r\n        }\r\n\r\n        this.setState(updatedState);\r\n    }\r\n\r\n    // Перемещает карту в сторону свайпа\r\n    animatePick = () => {\r\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\r\n        this.setState({\r\n            isTransition: true\r\n        });\r\n        this.setState({\r\n            horizontalShift: this.state.horizontalShift * 5,\r\n            verticalShift: this.state.verticalShift * 5,\r\n        });\r\n    };\r\n\r\n    // Возвращает карту в начальное положение\r\n    resetCard = (withTransition) => {\r\n        this.setState({\r\n            isTransition: withTransition,\r\n            isSwiping: false,\r\n            horizontalShift: 0,\r\n            verticalShift: 0,\r\n            currentX: 0,\r\n            currentY: 0,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"Swipe-main\"\r\n                 onTouchMove={this.onTouch}\r\n                 onTouchEnd={this.onTouchEnd}\r\n                 onTouchStart={this.onTouchStart}>\r\n                <CardView\r\n                          cardInfo={this.props.cardInfo}\r\n                          isSwiping={this.state.isSwiping}\r\n                          horizontalShift={this.state.horizontalShift}\r\n                          verticalShift={this.state.verticalShift}\r\n                          isUpperTouch={this.state.isUpperTouch}\r\n                            isTransition={this.state.isTransition}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import config from \"./api_config\"\r\n\r\nexport async function setRate(userId, eventId, isLiked)  {\r\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify([\r\n            {\r\n                event_id: eventId,\r\n                is_liked: isLiked\r\n            }\r\n        ])\r\n    });\r\n}\r\n\r\nexport async function setUserRate(userId, otherUserId, isLiked)  {\r\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify([\r\n            {\r\n                user_id: otherUserId,\r\n                is_liked: isLiked\r\n            }\r\n        ])\r\n    });\r\n}\r\n","import React, {Component} from 'react';\r\nimport Card from \"./Card\";\r\nimport CardView from \"./View/CardView\";\r\nimport {setRate} from \"../Api/Ratings\";\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentIndex: 0,\r\n            swipesCountFromUpload: 0\r\n        };\r\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\r\n    }\r\n\r\n     onSwipeEnd = async function(isLike) {\r\n        this.props.setRateBy(this.props.cards[this.state.currentIndex].id, isLike);\r\n\r\n        // Uploading if nessecary\r\n        if (this.state.swipesCountFromUpload == 10){\r\n            this.props.loadCards();\r\n            this.setState({\r\n                swipesCountFromUpload: 0\r\n            })\r\n        }\r\n\r\n        // Ticking index for next card and decreasing\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            swipesCountFromUpload: this.state.swipesCountFromUpload + 1\r\n        });\r\n\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        let cards = this.props.cards;\r\n        let topCardIndex = this.state.currentIndex;\r\n        let bottomCardIndex = topCardIndex + 1;\r\n        return (\r\n            cards.length > 0 && topCardIndex < cards.length ?\r\n                <div>\r\n                    <Card cardInfo={cards[topCardIndex]} onSwipeEnd={this.onSwipeEnd}/>\r\n                    {\r\n                        bottomCardIndex < cards.length ?\r\n                            <CardView cardInfo={cards[bottomCardIndex]}/>:\r\n                            <div/>\r\n                    }\r\n                </div> :\r\n                <div/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Deck;\r\n","import config from \"./api_config\"\r\n\r\nexport async function fetchEvents(userId, categories=[1,6], page=0, size=20, is_personal=true )  {\r\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\r\n    let url = config.url + \"/user/\" + userId \r\n        + \"/events/selection?\" + categoriesParameter \r\n        + \"&is_personal=\" + is_personal \r\n        + \"&page=\" + page \r\n        + \"&size=\" + size;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Swipe.scss';\r\nimport Deck from \"../Components/Deck\";\r\nimport {fetchEvents} from \"../Api/Events\";\r\nimport { setRate } from '../Api/Ratings';\r\n\r\nconst Swipe = ({id, go, user}) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [categories, setCategories] = useState([1,6]);\r\n    const [size, setSize] = useState(20);\r\n\r\n    async function loadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id,categories,page,size);\r\n\r\n        let newEventsJson = await eventsResponse.json();\r\n        let newEvents = newEventsJson.content;\r\n\r\n        let isLastPartition = newEvents == undefined || newEvents.length < size;\r\n        if (isLastPartition){\r\n            setPage(0);\r\n        } else {\r\n            setPage(page + 1);\r\n        }\r\n\r\n        setEvents(events.concat(newEvents));\r\n\r\n    }\r\n    async function setRateBy(eventId, isLike){\r\n        setRate(user.id, eventId, isLike );\r\n    }\r\n\r\n    // При получении user id, получаем ивенты\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadEvents();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <Deck cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Swipe;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport './panelsStyle/Personal.css';\r\n\r\n\r\nconst Personal = ({id, go}) => {\r\n    const [fetchedUser, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n        async function fetchData() {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n        }\r\n\r\n        async function fetchToken(){\r\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\r\n                \"app_id\": 7197573, \"scope\": \"friends\"});\r\n            setToken(tokenObject.access_token);\r\n        }\r\n        fetchData();\r\n        fetchToken();\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <div className=\"PersonalContent\">\r\n                <div className=\"PersonalBlock\">\r\n                       {fetchedUser &&\r\n                        <div className=\"PersonalData\">\r\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\r\n                           <p>\r\n                           {fetchedUser.first_name ? fetchedUser.first_name : \"\"}\r\n                           {fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }\r\n                           </p>\r\n                            {\r\n                                token &&\r\n                                <p>\r\n                                    {token}\r\n                                </p>\r\n                            }\r\n                        </div>\r\n                        }\r\n                </div>\r\n            </div>\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Personal;\r\n","import React from 'react';\r\n\r\nimport '../panels/panelsStyle/Grid.css';\r\n\r\nconst GridEventList = ({data}) => {\r\n    return data.map (\r\n        product =>\r\n            <div className=\"Grid-eventCell\"\r\n               data-name={product.name ? product.name : \"unknown\"}>\r\n                <img src={product.images[0].image ? product.images[0].image : null}/>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default GridEventList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\n\r\nimport GridEventList from \"../Components/GridEventList\";\r\n\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Grid.css';\r\n\r\nimport {fetchEvents} from \"../Api/Events\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\n\r\nconst Grid = ({id, go, user}) => {\r\n\r\n    const [dataEvents, setDataEvents] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [size, setSize] = useState(20);\r\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const uploadData = e => {\r\n        let elem = e.currentTarget;\r\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\r\n            try {\r\n                if (!isLoading){\r\n                    setIsLoading(true);\r\n                    loadEvents();\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    async function loadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id,categoriesId,page,size);\r\n\r\n        let newEvents = await eventsResponse.json();\r\n\r\n        setPage(page + 1);\r\n\r\n        setDataEvents(dataEvents.concat(newEvents.content));\r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    async function deleteAndloadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id,categoriesId,0,size);\r\n\r\n        let newEvents = await eventsResponse.json();\r\n\r\n        setPage(1);\r\n\r\n        setDataEvents(newEvents.content);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadEvents();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n    const onModal = e => {\r\n        let modal = document.getElementById(\"filter_modal\");\r\n        if (modal.style.visibility == \"visible\") {\r\n            deleteAndloadEvents();\r\n        }\r\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\r\n    }\r\n\r\n    const onChangeFilterItemState = e => {\r\n        if (e.currentTarget.dataset.isactive == \"false\") {\r\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\r\n        }\r\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\r\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\r\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\r\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\r\n    }\r\n\r\n    const onCloseFilterEnvironment = e => {\r\n        if (e.target.id == \"filter_modal\") onModal(e);\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n\r\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\r\n                    {dataEvents &&\r\n                        <GridEventList data={dataEvents}/> }\r\n                </div>\r\n\r\n                <div className=\"Filter\" onClick={onModal}>\r\n                    <p>Фильтр</p>\r\n                </div>\r\n\r\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\r\n                    <div className=\"Filter-modal-content\">\r\n\r\n                        <div className=\"Filter-modal-header\">\r\n                            <p>Фильтр</p>\r\n                        </div>\r\n\r\n                        <div className=\"Filter-modal-categoriesTitle\">\r\n                            <p>Выберите тип мероприятия</p>\r\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"Filter-modal-categories\">\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\r\n                            <p>ОК</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Grid;\r\n","import config from \"./api_config\"\r\n\r\nexport async function fetchPeople(userId, page=0, size=20)  {\r\n    let url = config.url + \"/user/\" + userId \r\n        + \"/users/all?\"\r\n        + \"&page=\" + page \r\n        + \"&size=\" + size;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n\r\nexport async function fetchMatches(userId, page=0, size=20) {\r\n    let url = config.url + \"/user/\" + userId \r\n        + \"/users/ratings?\"\r\n        + \"&page=\" + page \r\n        + \"&size=\" + size;\r\n    return fetch(url, {method: \"GET\",});\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/People.scss';\r\nimport Deck from \"../Components/Deck\";\r\nimport {fetchPeople} from \"../Api/People\";\r\nimport { setUserRate } from '../Api/Ratings';\r\n\r\nconst People = ({id, go, user}) => {\r\n    const [people, setPeople] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [categories, setCategories] = useState([1,6]);\r\n    const [size, setSize] = useState(20);\r\n\r\n    async function loadPeople(){\r\n        let peopleResponse = await fetchPeople(user.id, page, size);\r\n        let newPeople = await peopleResponse.json();\r\n\r\n        setPage(page + 1);\r\n        setPeople(people.concat(newPeople.content));\r\n\r\n    }\r\n\r\n    async function setRateBy(otherUserId, isLike){\r\n        setUserRate(user.id, otherUserId, isLike );\r\n    }\r\n\r\n    // При получении user id, получаем ивенты\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadPeople();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <Deck cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default People;\r\n","import config from \"./api_config\"\r\n\r\nexport async function authorize(userId)  {\r\n    let url = `${config.url}/user/identify?user_id=${userId}`;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\n\r\nimport Personal from './panels/Personal';\r\nimport Swipe from './panels/Swipe';\r\nimport Matches from './panels/Matches';\r\nimport Grid from './panels/Grid';\r\nimport People from './panels/People';\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './ResetBrowser.css';\r\nimport {authorize} from \"./Api/Auth\";\r\nimport config from \"./Api/api_config.json\";\r\nimport settings from \"./Api/dev_settings.json\";\r\n\r\nconst AppCulter = () => {\r\n    const [activePanel, setActivePanel] = useState('swipe');\r\n    const [user, setUser] = useState(null);\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let fetchedUser = config.is_dev ?\r\n                {'id' : settings.user_id} :\r\n                await connect.sendPromise('VKWebAppGetUserInfo');\r\n\r\n            await authorize(fetchedUser.id);\r\n            setUser(fetchedUser);\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <View activePanel={activePanel}>\r\n            <Personal id='personal' go={go} />\r\n            <Grid user={user} id=\"grid\" go={go} />\r\n            <Swipe user={user} id='swipe' go={go} />\r\n            <People user={user} id='people' go={go} />\r\n            <Matches id='matches' go={go} />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default AppCulter;\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\n//import App from './App';\r\n//import Test from './Test';\r\nimport Matches from './panels/Matches';\r\nimport Swipe from './panels/Swipe';\r\n// import registerServiceWorker from './sw';\r\nimport AppCulter from './AppCulter';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<AppCulter />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.c04b6039.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeGrey.2be3924b.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";"],"sourceRoot":""}