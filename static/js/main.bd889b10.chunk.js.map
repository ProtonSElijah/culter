{"version":3,"sources":["icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","Components/Header.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Api/People.js","panels/Matches.js","Components/View/EventInformationView.js","Components/View/PersonInformationView.js","Components/View/ChoiceLabelsView.js","Components/View/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","panels/People.js","Api/Auth.js","AppCulter.js","index.js","icons/culterIcon.svg","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg","icons/swipeGrey.svg","icons/userGrey.svg","icons/eventAnnotationLeftButton.svg","icons/eventAnnotationRightButton.svg"],"names":["module","exports","Header","panelTitle","panelId","className","src","IconApp","alt","MatchedScrollList","list","map","person","key","photo_400_orig","first_name","common_events","length","MatchedList","text","last_name","slice","Bottom","go","onClick","data-to","id","userDes","gridDes","swipeDes","eventDes","chatDes","fetchPeople","userId","a","async","page","size","url","config","fetch","method","fetchMatches","Matches","user","useState","matchedPeople","setMatchedPeople","setPage","useEffect","peopleResponse","json","newPeople","console","log","concat","content","loadMatches","document","getElementById","children","style","paddingTop","body","setProperty","EventInformationView","event","title","short_title","isDateProvided","dates","date","time","week","day","start_time","Date","start_date","toLocaleDateString","weekday","month","LeftButton","RightButton","PersonInformationView","liked_events","horizontalShift","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","CardView","verticalShift","isUpperTouch","cardInfo","contentStyle","isTransition","isEventCard","hasOwnProperty","imageSource","images","image","ChoiceLabelsView","Card","props","onTouch","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","state","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","setRate","eventId","isLiked","headers","JSON","stringify","event_id","is_liked","setUserRate","otherUserId","user_id","Deck","setRateBy","cards","currentIndex","swipesCountFromUpload","loadCards","topCardIndex","bottomCardIndex","fetchEvents","categories","is_personal","categoriesParameter","join","Swipe","events","setEvents","loadEvents","eventsResponse","newEventsJson","newEvents","isLastPartition","undefined","Personal","fetchedUser","setUser","token","setToken","connect","sendPromise","fetchData","tokenObject","access_token","fetchToken","photo_200","GridEventList","data","product","data-name","name","Grid","dataEvents","setDataEvents","categoriesId","setCategoriesId","isLoading","setIsLoading","onModal","e","modal","visibility","deleteAndloadEvents","onChangeFilterItemState","currentTarget","dataset","isactive","splice","indexOf","classList","toggle","onScroll","elem","scrollHeight","clientHeight","scrollTop","err","target","data-isactive","data-id","People","people","setPeople","loadPeople","authorize","AppCulter","activePanel","setActivePanel","to","is_dev","settings","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd889b10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.b64b72cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.2f9e85a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","import React from 'react';\r\nimport './ComponentsStyle/Header.css';\r\n\r\nimport IconApp from '../icons/culterIcon.svg';\r\n\r\nconst Header = ({panelId}) => {\r\n    let panelTitle = \"\";\r\n    switch (panelId) {\r\n        case \"personal\": panelTitle = \"Профиль\"; break;\r\n        case \"grid\": panelTitle = \"События\"; break;\r\n        case \"swipe\": panelTitle = \"События\"; break;\r\n        case \"people\": panelTitle = \"Люди\"; break;\r\n        case \"matches\": panelTitle = \"Диалоги\"; break;\r\n    }\r\n    return (\r\n        <div className=\"App-header\">\r\n            <div className=\"App-header-content\">\r\n               <img src={IconApp} alt=\"icon\" />\r\n                <p>{\"Culter\"}</p>\r\n            </div>\r\n            <div className=\"App-header-bottomLine\"></div>\r\n            <div className=\"App-header-panelTitle\">\r\n                <p>{panelTitle}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst MatchedScrollList = ({list}) => {\r\n    return list.map(\r\n        person =>\r\n        <div className=\"ScrollContainerContent\" key={person.key}>\r\n            <div className=\"ScrollPerson\">\r\n                <img src={person.photo_400_orig} alt=\"Person\" className=\"ScrollPeopleImg\"/>\r\n                <div>{person.first_name}</div>\r\n                <div className=\"Cirle\">{person.common_events.length}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MatchedScrollList;\r\n","import React, {useState} from 'react';\r\n\r\nconst MatchedList = ({list}) => {\r\n    const text = \"Я о моём последнем сообщении\";\r\n\r\n    return list.map(\r\n        person =>\r\n        <div className=\"PersonContainer\">\r\n            <div className=\"Person\" key={person.key}>\r\n                <img src={person.photo_400_orig} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{person.first_name + \" \" + person.last_name}</b></div>\r\n                    {text.length > 26 &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {text.slice(0, 26) + \"..\"}\r\n                        </div>}\r\n                    {!(text.length > 26) &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {text}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"BottomLine\"></div>\r\n        </div>\r\n    );\r\n\r\n   /* return list.map(\r\n        person =>\r\n            <div className=\"Person\" key={person.key}>\r\n                <img src={person.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\r\n                    {person.commonPlaces.toString().length > 25 &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\r\n                        </div>}\r\n                    {!(person.commonPlaces.toString().length > 25) &&\r\n                        <div className=\"PersonPlacesList\">\r\n                            {person.commonPlaces.toString()}\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n    );*/\r\n}\r\n\r\n\r\n/*    renderPlaces = () => {\r\n        let str = this.props.commonPlaces.toString();\r\n        if (str.length > 25)\r\n            str = str.slice(0, 25) + \"..\";\r\n        return str;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Person\" key={this.props.key}>\r\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\r\n                <div className=\"PersonData\">\r\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\r\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\r\n                    <div className=\"PersonPlacesList\">\r\n                        {this.renderPlaces()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }*/\r\nexport default MatchedList;\r\n","import React, {useState} from 'react';\r\nimport './ComponentsStyle/Bottom.css';\r\n\r\nimport chatDes from \"../icons/chatGrey.svg\";\r\nimport eventDes from \"../icons/eventGrey.svg\";\r\nimport gridDes from \"../icons/gridGrey.svg\";\r\nimport swipeDes from \"../icons/swipeGrey.svg\";\r\nimport userDes from \"../icons/userGrey.svg\";\r\n\r\nimport chatActive from \"../icons/chatRed.svg\";\r\nimport eventActive from \"../icons/eventRed.svg\";\r\nimport gridActive from \"../icons/gridRed.svg\";\r\nimport swipeActive from \"../icons/swipeRed.svg\";\r\nimport userActive from \"../icons/userRed.svg\";\r\n\r\nconst Bottom = ({go}) => {\r\n\r\n    return (\r\n        <div className=\"App-bottom\">\r\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\r\n                data-to=\"personal\">\r\n               <img id=\"personalButton\" src={userDes} alt=\"personal\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\r\n               <img id=\"gridButton\" src={gridDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\r\n                data-to=\"swipe\">\r\n               <img  id=\"swipeButton\" src={swipeDes} alt=\"swipe\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\" onClick={go} data-to=\"people\">\r\n               <img id=\"peopleButton\" src={eventDes} alt=\"people\" />\r\n           </div>\r\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\r\n                data-to=\"matches\">\r\n               <img id=\"matchesButton\" src={chatDes} alt=\"matches\" />\r\n           </div>\r\n        </div>\r\n    );\r\n    //Переключатель - две кнопки\r\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\r\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\r\n}\r\n\r\nexport default Bottom;\r\n","import config from \"./api_config\"\r\n\r\nexport async function fetchPeople(userId, page=0, size=20)  {\r\n    let url = config.url + \"/user/\" + userId \r\n        + \"/users/all?\"\r\n        + \"&page=\" + page \r\n        + \"&size=\" + size;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n\r\nexport async function fetchMatches(userId, page=0, size=20) {\r\n    let url = config.url + \"/user/\" + userId \r\n        + \"/users/ratings?\"\r\n        + \"&page=\" + page \r\n        + \"&size=\" + size;\r\n    return fetch(url, {method: \"GET\",});\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from \"../Components/Header\";\r\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\r\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\r\nimport MatchedList from \"../Components/MatchedList\";\r\nimport Bottom from \"../Components/Bottom\";\r\n\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Matches.css';\r\n\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport {fetchMatches, fetchPeople} from \"../Api/People\";\r\n\r\nconst Matches = ({id, user, go}) => {\r\n    const [matchedPeople, setMatchedPeople] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [size, setSize] = useState(20);\r\n\r\n    async function loadMatches(){\r\n        let peopleResponse = await fetchMatches(user.id, page, size);\r\n        let newPeople = await peopleResponse.json();\r\n        console.log(newPeople);\r\n        setPage(page + 1);\r\n        setMatchedPeople(matchedPeople.concat(newPeople.content));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadMatches();\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <div className=\"Head\">\r\n                <p>{matchedPeople.length != 1 ?\r\n                \"\"+matchedPeople.length+\" новых совпадений\" :\r\n                   \"\" + matchedPeople.length + \" новое совпадение\"}</p>\r\n            </div>\r\n\r\n            <div className=\"ScrollContainer\">\r\n                {matchedPeople.length > 0 ?\r\n                    <MatchedScrollList\r\n                        list={matchedPeople}/> :\r\n                    <div/>\r\n                }\r\n            </div>\r\n            <div className=\"Dialogues\">\r\n                <p>Диалоги</p>\r\n            </div>\r\n            <div className=\"ListContainer\">\r\n                {matchedPeople.length > 0 ?\r\n                    <MatchedList\r\n                        list={matchedPeople}/> :\r\n                    <div/>\r\n                }\r\n            </div>\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Matches;\r\n\r\n//const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\r\n//const onSwitchClick = (value) => {setIsSelectedFriends(value);}\r\n/*<MatchedNavigationButtons\r\n               stateList = {isSelectedFriends}\r\n               stateRefresh = {onSwitchClick}\r\n               matchedList = {matchedPeople}\r\n               friendsList = {matchedFriends}/>*/\r\n","import React from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\n\r\nimport LeftButton from '../../icons/eventAnnotationLeftButton.svg';\r\nimport RightButton from '../../icons/eventAnnotationRightButton.svg';\r\n\r\nconst EventInformationView = ({event}) => {\r\n    let title = event.short_title.length > 14 ?\r\n        event.short_title.slice(0,11) + \"...\" : event.short_title;\r\n\r\n    let isDateProvided = event.dates.length > 0;\r\n\r\n    let date = \"\";\r\n    let time = \"\";\r\n    let week = \"\";\r\n    let day = \"\";\r\n\r\n    if (isDateProvided) {\r\n        time = event.dates[0].start_time.slice(0,event.dates[0].start_time.length-3);\r\n        date = new Date(event.dates[0].start_date);\r\n        week = date.toLocaleDateString(\"ru-Ru\", { weekday: 'long' });\r\n        day = date.toLocaleDateString(\"ru-Ru\", { month: 'long', day: 'numeric'});\r\n    }\r\n\r\n    return  (\r\n        <div className=\"Swipe-content-down-container\">\r\n\r\n            <div className=\"Swipe-content-down-aside\">\r\n                <div className=\"Swipe-content-down-button\">\r\n                    <img src={LeftButton} alt=\"leftButton\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Swipe-content-down-center\">\r\n                <p>{title}</p>\r\n                {isDateProvided &&\r\n                <p> {day}</p>}\r\n                {isDateProvided &&\r\n                <p>{time} {week} </p>\r\n                 }\r\n            </div>\r\n\r\n            <div className=\"Swipe-content-down-aside\">\r\n                <div className=\"Swipe-content-down-button\">\r\n                    <img id=\"Swipe-content-down-button-right\" src={RightButton} alt=\"rightButton\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default EventInformationView;\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\n\r\nconst PersonInformationView = ({person}) => {\r\n\r\n    let wantedEvents = person.common_events.slice(0,5);\r\n\r\n    return  (\r\n\r\n        <div className=\"Swipe-content-down-container\">\r\n\r\n            <div className=\"Swipe-content-down-center user\">\r\n                <p>{person.first_name}</p>\r\n\r\n                <p>Общих событий: {person.common_events.length}</p>\r\n                <p>Всего событий: {person.liked_events.length}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default PersonInformationView;\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\n\r\n\r\nconst EventInformationView = ({horizontalShift}) => {\r\n\r\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\r\n    let labelStyles = {\r\n        left :{\r\n            opacity: horizontalShift < 0 ? labelOpacity : 0\r\n        },\r\n        right :{\r\n            opacity: horizontalShift > 0 ? labelOpacity : 0\r\n        }};\r\n    \r\n    return  (\r\n\r\n        <div className=\"Swipe-content-up-labels\">\r\n\r\n            <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\r\n                Круто\r\n            </div>\r\n\r\n            <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\r\n                Отстой\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default EventInformationView;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../ComponentsStyle/CardView.scss'\r\nimport EventInformationView from './EventInformationView';\r\nimport PersonInformationView from './PersonInformationView';\r\nimport ChoiceLabelsView from './ChoiceLabelsView';\r\n\r\n\r\nconst CardView = ({horizontalShift, verticalShift, isUpperTouch, cardInfo,isTransition}) => {\r\n\r\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\r\n    let rotation = rotationCoefficient * horizontalShift / 15 ;\r\n    let contentStyle = {\r\n            \"transform\": \"rotate(\" + rotation + \"deg)\" +\r\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\r\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\r\n        };\r\n\r\n    let isEventCard = cardInfo.hasOwnProperty(\"short_title\");\r\n\r\n    let imageSource = isEventCard ? cardInfo.images[0].image : cardInfo.photo_400_orig ;\r\n\r\n    return  (\r\n\r\n        <div className=\"Swipe-content\" style={contentStyle}>\r\n\r\n            <div className=\"Swipe-content-up\">\r\n                <ChoiceLabelsView horizontalShift={horizontalShift} />\r\n                <img className=\"Swipe-content-up-image\" src={imageSource}/>\r\n\r\n                <div className=\"Swipe-content-down\">\r\n                    {isEventCard ?\r\n                        <EventInformationView event={cardInfo}/> :\r\n                        <PersonInformationView person={cardInfo}/>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n    /*<div className=\"Swipe-content-down\">\r\n                    {isEventCard ?\r\n                        <EventInformationView event={cardInfo}/> :\r\n                        <PersonInformationView person={cardInfo}/>}\r\n                </div>*/\r\n};\r\n\r\nexport default CardView;\r\n","import React, {Component} from 'react';\r\nimport './ComponentsStyle/Card.scss'\r\nimport CardView from \"./View/CardView\";\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentX: 0,\r\n            currentY: 0,\r\n            horizontalShift: 0,\r\n            verticalShift: 0,\r\n            isFirstTouch: true,\r\n            isSwiping: false,\r\n            height: 0\r\n        };\r\n        this.animatePick = this.animatePick.bind(this);\r\n        this.resetCard = this.resetCard.bind(this);\r\n    }\r\n\r\n    onTouch = (event) => {  \r\n        let touches = event.changedTouches;\r\n        for (let i = 0; i < touches.length; i++){\r\n            this.updateByTouch(touches[i])\r\n        }\r\n    };\r\n\r\n    onTouchStart = (event) => {\r\n        this.setState({\r\n            isFirstTouch: true,\r\n            isSwiping: true,\r\n            isTransition: false\r\n        });\r\n    };\r\n\r\n    onTouchEnd = (event) => {\r\n        if (Math.abs(this.state.horizontalShift) > 100){\r\n            let isLike= this.state.horizontalShift > 0;\r\n            this.animatePick();\r\n            let thisHandler = this;\r\n            setTimeout(() => {\r\n                thisHandler.resetCard(false);\r\n                thisHandler.props.onSwipeEnd(isLike);\r\n            },400);\r\n        } else {\r\n            this.resetCard(true);\r\n        }\r\n\r\n    };\r\n\r\n    updateByTouch = (touch) =>{\r\n        let previousX = this.state.currentX;\r\n        let previousY = this.state.currentY;\r\n\r\n        let updatedState = {\r\n            currentX: touch.clientX,\r\n            currentY: touch.clientY,\r\n        };\r\n\r\n        if (this.state.isFirstTouch){\r\n            updatedState.isUpperTouch = touch.clientY > 300;\r\n            updatedState.isFirstTouch = false;\r\n        } else {\r\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\r\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\r\n        }\r\n\r\n        this.setState(updatedState);\r\n    }\r\n\r\n    // Перемещает карту в сторону свайпа\r\n    animatePick = () => {\r\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\r\n        this.setState({\r\n            isTransition: true\r\n        });\r\n        this.setState({\r\n            horizontalShift: this.state.horizontalShift * 5,\r\n            verticalShift: this.state.verticalShift * 5,\r\n        });\r\n    };\r\n\r\n    // Возвращает карту в начальное положение\r\n    resetCard = (withTransition) => {\r\n        this.setState({\r\n            isTransition: withTransition,\r\n            isSwiping: false,\r\n            horizontalShift: 0,\r\n            verticalShift: 0,\r\n            currentX: 0,\r\n            currentY: 0,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"Swipe-main\"\r\n                 onTouchMove={this.onTouch}\r\n                 onTouchEnd={this.onTouchEnd}\r\n                 onTouchStart={this.onTouchStart}>\r\n                <CardView\r\n                          cardInfo={this.props.cardInfo}\r\n                          isSwiping={this.state.isSwiping}\r\n                          horizontalShift={this.state.horizontalShift}\r\n                          verticalShift={this.state.verticalShift}\r\n                          isUpperTouch={this.state.isUpperTouch}\r\n                            isTransition={this.state.isTransition}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import config from \"./api_config\"\r\n\r\nexport async function setRate(userId, eventId, isLiked)  {\r\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify([\r\n            {\r\n                event_id: eventId,\r\n                is_liked: isLiked\r\n            }\r\n        ])\r\n    });\r\n}\r\n\r\nexport async function setUserRate(userId, otherUserId, isLiked)  {\r\n    let url = config.url + \"/user/\" + userId + \"/users/ratings\";\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify([\r\n            {\r\n                user_id: otherUserId,\r\n                is_liked: isLiked\r\n            }\r\n        ])\r\n    });\r\n}\r\n","import React, {Component} from 'react';\r\nimport Card from \"./Card\";\r\nimport CardView from \"./View/CardView\";\r\nimport {setRate} from \"../Api/Ratings\";\r\n\r\nclass Deck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentIndex: 0,\r\n            swipesCountFromUpload: 0\r\n        };\r\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\r\n    }\r\n\r\n     onSwipeEnd = async function(isLike) {\r\n        this.props.setRateBy(this.props.cards[this.state.currentIndex].id, isLike);\r\n\r\n        // Uploading if nessecary\r\n        if (this.state.swipesCountFromUpload == 10){\r\n            this.props.loadCards();\r\n            this.setState({\r\n                swipesCountFromUpload: 0\r\n            })\r\n        }\r\n\r\n        // Ticking index for next card and decreasing\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            swipesCountFromUpload: this.state.swipesCountFromUpload + 1\r\n        });\r\n\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        let cards = this.props.cards;\r\n        let topCardIndex = this.state.currentIndex;\r\n        let bottomCardIndex = topCardIndex + 1;\r\n        return (\r\n            cards.length > 0 && topCardIndex < cards.length ?\r\n                <div>\r\n                    <Card cardInfo={cards[topCardIndex]} onSwipeEnd={this.onSwipeEnd}/>\r\n                    {\r\n                        bottomCardIndex < cards.length ?\r\n                            <CardView cardInfo={cards[bottomCardIndex]}/>:\r\n                            <div/>\r\n                    }\r\n                </div> :\r\n                <div/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Deck;\r\n","import config from \"./api_config\"\r\n\r\nexport async function fetchEvents(userId, categories=[1,6], page=0, size=20, is_personal=true )  {\r\n    let categoriesParameter = \"category_id=\" + categories.join(\"&category_id=\");\r\n    let url = config.url + \"/user/\" + userId \r\n        + \"/events/selection?\" + categoriesParameter \r\n        + \"&is_personal=\" + is_personal \r\n        + \"&page=\" + page \r\n        + \"&size=\" + size;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Swipe.scss';\r\nimport Deck from \"../Components/Deck\";\r\nimport {fetchEvents} from \"../Api/Events\";\r\nimport { setRate } from '../Api/Ratings';\r\n\r\nconst Swipe = ({id, go, user}) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [categories, setCategories] = useState([1,6]);\r\n    const [size, setSize] = useState(20);\r\n\r\n    async function loadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id,categories,page,size);\r\n\r\n        let newEventsJson = await eventsResponse.json();\r\n        let newEvents = newEventsJson.content;\r\n\r\n        let isLastPartition = newEvents == undefined || newEvents.length < size;\r\n        if (isLastPartition){\r\n            setPage(0);\r\n        } else {\r\n            setPage(page + 1);\r\n        }\r\n\r\n        setEvents(events.concat(newEvents));\r\n\r\n    }\r\n    async function setRateBy(eventId, isLike){\r\n        setRate(user.id, eventId, isLike );\r\n    }\r\n\r\n    // При получении user id, получаем ивенты\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadEvents();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <Deck cards={events} loadCards={loadEvents} setRateBy={setRateBy}/>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Swipe;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport './panelsStyle/Personal.css';\r\n\r\n\r\nconst Personal = ({id, go}) => {\r\n    const [fetchedUser, setUser] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n        async function fetchData() {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n        }\r\n\r\n        async function fetchToken(){\r\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\r\n                \"app_id\": 7197573, \"scope\": \"friends\"});\r\n            setToken(tokenObject.access_token);\r\n        }\r\n        fetchData();\r\n        fetchToken();\r\n    }, []);\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <div className=\"PersonalContent\">\r\n                <div className=\"PersonalBlock\">\r\n                       {fetchedUser &&\r\n                        <div className=\"PersonalData\">\r\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\r\n                           <p>\r\n                           {fetchedUser.first_name ? fetchedUser.first_name : \"\"}\r\n                           {fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }\r\n                           </p>\r\n                            {\r\n                                token &&\r\n                                <p>\r\n                                    {token}\r\n                                </p>\r\n                            }\r\n                        </div>\r\n                        }\r\n                </div>\r\n            </div>\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Personal;\r\n","import React from 'react';\r\n\r\nimport '../panels/panelsStyle/Grid.css';\r\n\r\nconst GridEventList = ({data}) => {\r\n    return data.map (\r\n        product =>\r\n            <div className=\"Grid-eventCell\"\r\n               data-name={product.name ? product.name : \"unknown\"}>\r\n                <img src={product.images[0].image ? product.images[0].image : null}/>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default GridEventList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\n\r\nimport GridEventList from \"../Components/GridEventList\";\r\n\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/Grid.css';\r\n\r\nimport {fetchEvents} from \"../Api/Events\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\n\r\nconst Grid = ({id, go, user}) => {\r\n\r\n    const [dataEvents, setDataEvents] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [size, setSize] = useState(20);\r\n    const [categoriesId, setCategoriesId] = useState([\"31\", \"6\", \"27\", \"15\", \"12\"]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const uploadData = e => {\r\n        let elem = e.currentTarget;\r\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\r\n            try {\r\n                if (!isLoading){\r\n                    setIsLoading(true);\r\n                    loadEvents();\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    async function loadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id,categoriesId,page,size);\r\n\r\n        let newEvents = await eventsResponse.json();\r\n\r\n        setPage(page + 1);\r\n\r\n        setDataEvents(dataEvents.concat(newEvents.content));\r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    async function deleteAndloadEvents(){\r\n        let eventsResponse = await fetchEvents(user.id,categoriesId,0,size);\r\n\r\n        let newEvents = await eventsResponse.json();\r\n\r\n        setPage(1);\r\n\r\n        setDataEvents(newEvents.content);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadEvents();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n    const onModal = e => {\r\n        let modal = document.getElementById(\"filter_modal\");\r\n        if (modal.style.visibility == \"visible\") {\r\n            deleteAndloadEvents();\r\n        }\r\n        modal.style.visibility = (modal.style.visibility == \"visible\") ? \"hidden\" : \"visible\";\r\n    }\r\n\r\n    const onChangeFilterItemState = e => {\r\n        if (e.currentTarget.dataset.isactive == \"false\") {\r\n            setCategoriesId(categoriesId.concat(e.currentTarget.dataset.id));\r\n        }\r\n        else categoriesId.splice(categoriesId.indexOf(e.currentTarget.dataset.id), 1);\r\n        e.currentTarget.dataset.isactive = (e.currentTarget.dataset.isactive == \"true\") ? \"false\" : \"true\";\r\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-disabled\");\r\n        e.currentTarget.children[0].classList.toggle(\"Filter-modal-categories-item-checkbox-active\");\r\n    }\r\n\r\n    const onCloseFilterEnvironment = e => {\r\n        if (e.target.id == \"filter_modal\") onModal(e);\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n\r\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\r\n                    {dataEvents &&\r\n                        <GridEventList data={dataEvents}/> }\r\n                </div>\r\n\r\n                <div className=\"Filter\" onClick={onModal}>\r\n                    <p>Фильтр</p>\r\n                </div>\r\n\r\n                <div className=\"Filter-modal\" id=\"filter_modal\" style={{visibility: 'hidden'}} onClick={onCloseFilterEnvironment}>\r\n                    <div className=\"Filter-modal-content\">\r\n\r\n                        <div className=\"Filter-modal-header\">\r\n                            <p>Фильтр</p>\r\n                        </div>\r\n\r\n                        <div className=\"Filter-modal-categoriesTitle\">\r\n                            <p>Выберите тип мероприятия</p>\r\n                            <div className=\"Filter-modal-categoriesTitleBottomLine\"></div>\r\n                        </div>\r\n\r\n                        <div className=\"Filter-modal-categories\">\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={31}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Квесты</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={15}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Флешмобы</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={6}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Концерты</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={12}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Выставки</p>\r\n                            </div>\r\n\r\n                            <div className=\"Filter-modal-categories-item\"\r\n                               onClick={onChangeFilterItemState} data-isactive={true} data-id={27}>\r\n                                <div className=\"Filter-modal-categories-item-checkbox\r\n                                    Filter-modal-categories-item-checkbox-active\"></div>\r\n                                <p className=\"Filter-modal-categories-item-name\">Ночная жизнь</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"Filter-modal-buttonOK\" onClick={onModal}>\r\n                            <p>ОК</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"../Components/Header\";\r\nimport Bottom from \"../Components/Bottom\";\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport '../ResetBrowser.css';\r\nimport './panelsStyle/People.scss';\r\nimport Deck from \"../Components/Deck\";\r\nimport {fetchPeople} from \"../Api/People\";\r\nimport { setUserRate } from '../Api/Ratings';\r\n\r\nconst People = ({id, go, user}) => {\r\n    const [people, setPeople] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [categories, setCategories] = useState([1,6]);\r\n    const [size, setSize] = useState(20);\r\n\r\n    async function loadPeople(){\r\n        let peopleResponse = await fetchPeople(user.id, page, size);\r\n        let newPeople = await peopleResponse.json();\r\n\r\n        setPage(page + 1);\r\n        setPeople(people.concat(newPeople.content));\r\n\r\n    }\r\n\r\n    async function setRateBy(otherUserId, isLike){\r\n        setUserRate(user.id, otherUserId, isLike );\r\n    }\r\n\r\n    // При получении user id, получаем ивенты\r\n    useEffect(() => {\r\n        if (user != null)\r\n            loadPeople();\r\n    }, [user]);\r\n\r\n\r\n    useEffect(() => {\r\n        async function refreshHeaderVK() {\r\n            document.getElementById(id).children[0].style.paddingTop = 0;\r\n            document.body.style.setProperty('--background_page', 'white');\r\n        }\r\n        refreshHeaderVK();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <Header panelId={id}/>\r\n            <Deck cards={people} loadCards={loadPeople} setRateBy={setRateBy}/>\r\n\r\n            <Bottom go={go}/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default People;\r\n","import config from \"./api_config\"\r\n\r\nexport async function authorize(userId)  {\r\n    let url = `${config.url}/user/identify?user_id=${userId}`;\r\n    return fetch(url, {method: \"GET\",});\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\n\r\nimport Personal from './panels/Personal';\r\nimport Swipe from './panels/Swipe';\r\nimport Matches from './panels/Matches';\r\nimport Grid from './panels/Grid';\r\nimport People from './panels/People';\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './ResetBrowser.css';\r\nimport {authorize} from \"./Api/Auth\";\r\nimport config from \"./Api/api_config.json\";\r\nimport settings from \"./Api/dev_settings.json\";\r\n\r\nconst AppCulter = () => {\r\n    const [activePanel, setActivePanel] = useState('swipe');\r\n    const [user, setUser] = useState(null);\r\n\r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let fetchedUser = config.is_dev ?\r\n                {'id' : settings.user_id} :\r\n                await connect.sendPromise('VKWebAppGetUserInfo');\r\n\r\n            await authorize(fetchedUser.id);\r\n            setUser(fetchedUser);\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <View activePanel={activePanel}>\r\n            <Personal id='personal' go={go} />\r\n            <Grid user={user} id=\"grid\" go={go} />\r\n            <Swipe user={user} id='swipe' go={go} />\r\n            <People user={user} id='people' go={go} />\r\n            <Matches user={user} id='matches' go={go} />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default AppCulter;\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\n//import App from './App';\r\n//import Test from './Test';\r\nimport Matches from './panels/Matches';\r\nimport Swipe from './panels/Swipe';\r\n// import registerServiceWorker from './sw';\r\nimport AppCulter from './AppCulter';\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<AppCulter />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/culterIcon.33102295.svg\";","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.c04b6039.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeGrey.2be3924b.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationLeftButton.f1d9bf7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventAnnotationRightButton.aabc099b.svg\";"],"sourceRoot":""}