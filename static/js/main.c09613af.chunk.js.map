{"version":3,"sources":["icons/chatRed.svg","icons/eventRed.svg","icons/gridRed.svg","icons/swipeRed.svg","icons/userRed.svg","Components/Header.js","Components/MatchedNavigationButtons.js","Components/MatchedScrollList.js","Components/MatchedList.js","Components/Bottom.js","Components/ExportMatchedPeople.js","Components/ExportMatchedFriends.js","panels/Matches.js","Components/CardView.js","Components/Card.js","Api/Ratings.js","Components/Deck.js","Api/Events.js","panels/Swipe.js","panels/Personal.js","Components/GridEventList.js","panels/Grid.js","panels/People.js","Api/Auth.js","AppCulter.js","index.js","icons/chatGrey.svg","icons/eventGrey.svg","icons/gridGrey.svg","icons/swipeGrey.svg","icons/userGrey.svg"],"names":["module","exports","Header","text","className","toUpperCase","MatchedNavigationButtons","stateList","stateRefresh","matchedList","friendsList","RefreshButtons","value","document","getElementById","classList","toggle","id","onClick","length","MatchedScrollList","list","map","person","key","src","imgLink","alt","firstName","commonPlacesCount","MatchedList","lastName","slice","Bottom","go","data-to","userDes","gridDes","swipeDes","eventDes","chatDes","matchedPeople","commonPlaces","matchedFriends","Matches","useState","isSelectedFriends","setIsSelectedFriends","useEffect","a","async","children","style","paddingTop","CardView","horizontalShift","verticalShift","hasMargin","isUpperTouch","cardInfo","contentStyle","isTransition","labelOpacity","Math","min","abs","labelStyles","left","opacity","right","images","image","short_title","Card","props","onTouch","event","touches","changedTouches","i","updateByTouch","onTouchStart","setState","isFirstTouch","isSwiping","onTouchEnd","state","isLike","animatePick","thisHandler","setTimeout","resetCard","onSwipeEnd","touch","previousX","currentX","previousY","currentY","updatedState","clientX","clientY","withTransition","height","bind","onTouchMove","this","Component","setRate","userId","eventId","isLiked","url","config","fetch","method","headers","body","JSON","stringify","event_id","is_liked","Deck","setRateBy","events","currentIndex","swipesCountFromUpload","loadEvents","index","fetchEvents","Swipe","user","setEvents","eventsResponse","json","newEvents","concat","content","Personal","fetchedUser","setUser","token","setToken","connect","sendPromise","fetchData","tokenObject","access_token","fetchToken","photo_200","first_name","last_name","GridEventList","data","product","data-name","name","Grid","dataEvents","setDataEvents","onScroll","e","elem","currentTarget","scrollHeight","clientHeight","scrollTop","err","console","log","People","authorize","AppCulter","activePanel","setActivePanel","dataset","to","is_dev","user_id","send","ReactDOM","render"],"mappings":"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","file":"static/js/main.c09613af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatRed.2e82a215.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventRed.333d01ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridRed.2dc70435.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeRed.08ccde92.svg\";","module.exports = __webpack_public_path__ + \"static/media/userRed.2079daaf.svg\";","import React from 'react';\nimport './ComponentsStyle/Header.css';\n\nconst Header = ({text}) => {\n    return (\n        <div className=\"App-header\">\n            <p>{text.toUpperCase()}</p>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nconst MatchedNavigationButtons = ({stateList, stateRefresh, matchedList, friendsList}) => {\n\n    const onSwitchMatched = () => {stateRefresh(true); RefreshButtons(true)};\n    const onSwitchFriends = () => {stateRefresh(false); RefreshButtons(false)};\n\n    const RefreshButtons = (value) => {\n        document.getElementById(\"matchedButton\").classList.toggle(\"NavigationButtonsActive\", value);\n        document.getElementById(\"friendsButton\").classList.toggle(\"NavigationButtonsActive\", !value);\n        document.getElementById(\"matchedButton\").classList.toggle(\"NavigationButtonsDefault\", !value);\n        document.getElementById(\"friendsButton\").classList.toggle(\"NavigationButtonsDefault\", value);\n    };\n\n    return (\n        <div className=\"NavigationButtons\">\n            <button\n                id=\"matchedButton\"\n                className=\"NavigationButtonsActive\"\n                onClick={onSwitchMatched}>\n                    {matchedList.length} людей\n            </button>\n            <button\n                id=\"friendsButton\"\n                className=\"NavigationButtonsDefault\"\n                onClick={onSwitchFriends}>\n                    {friendsList.length} друг\n                </button>\n        </div>\n    );\n}\n\nexport default MatchedNavigationButtons;\n","import React from 'react';\n\nconst MatchedScrollList = ({list}) => {\n    return list.map(\n        person =>\n        <div className=\"ScrollContainerContent\" key={person.key}>\n            <div className=\"ScrollPerson\">\n                <img src={person.imgLink} alt=\"Person\" className=\"ScrollPeopleImg\"/>\n                <div>{person.firstName}</div>\n                <div className=\"Cirle\">{person.commonPlacesCount}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default MatchedScrollList;\n","import React, {useState} from 'react';\n\nconst MatchedList = ({list}) => {\n    const text = \"Я о моём последнем сообщении\";\n\n    return list.map(\n        person =>\n        <div className=\"PersonContainer\">\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    {text.length > 26 &&\n                        <div className=\"PersonPlacesList\">\n                            {text.slice(0, 26) + \"..\"}\n                        </div>}\n                    {!(text.length > 26) &&\n                        <div className=\"PersonPlacesList\">\n                            {text}\n                        </div>}\n                </div>\n            </div>\n            <div className=\"BottomLine\"></div>\n        </div>\n    );\n\n   /* return list.map(\n        person =>\n            <div className=\"Person\" key={person.key}>\n                <img src={person.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{person.firstName + \" \" + person.lastName}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{person.commonPlacesCount}</b></div>\n                    {person.commonPlaces.toString().length > 25 &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString().slice(0, 25) + \"..\"}\n                        </div>}\n                    {!(person.commonPlaces.toString().length > 25) &&\n                        <div className=\"PersonPlacesList\">\n                            {person.commonPlaces.toString()}\n                        </div>}\n                </div>\n            </div>\n    );*/\n}\n\n\n/*    renderPlaces = () => {\n        let str = this.props.commonPlaces.toString();\n        if (str.length > 25)\n            str = str.slice(0, 25) + \"..\";\n        return str;\n    };\n\n    render() {\n        return (\n            <div className=\"Person\" key={this.props.key}>\n                <img src={this.props.imgLink} alt={\"Person photo\"}/>\n                <div className=\"PersonData\">\n                    <div className=\"PersonName\"><b>{this.props.name}</b></div>\n                    <div className=\"PersonPlacesCount\">Общих мест: <b>{this.props.commonPlacesCount}</b></div>\n                    <div className=\"PersonPlacesList\">\n                        {this.renderPlaces()}\n                    </div>\n                </div>\n            </div>\n        );\n    }*/\nexport default MatchedList;\n","import React, {useState} from 'react';\nimport './ComponentsStyle/Bottom.css';\n\nimport chatDes from \"../icons/chatGrey.svg\";\nimport eventDes from \"../icons/eventGrey.svg\";\nimport gridDes from \"../icons/gridGrey.svg\";\nimport swipeDes from \"../icons/swipeGrey.svg\";\nimport userDes from \"../icons/userGrey.svg\";\n\nimport chatActive from \"../icons/chatRed.svg\";\nimport eventActive from \"../icons/eventRed.svg\";\nimport gridActive from \"../icons/gridRed.svg\";\nimport swipeActive from \"../icons/swipeRed.svg\";\nimport userActive from \"../icons/userRed.svg\";\n\nconst Bottom = ({go}) => {\n\n    return (\n        <div className=\"App-bottom\">\n           <div className=\"Bottom-button Bottom-profileButton\" onClick={go}\n                data-to=\"personal\">\n               <img id=\"personalButton\" src={userDes} alt=\"personal\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsGridButton\" onClick={go} data-to=\"grid\">\n               <img id=\"gridButton\" src={gridDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-eventsSwipeButton\" onClick={go}\n                data-to=\"swipe\">\n               <img  id=\"swipeButton\" src={swipeDes} alt=\"swipe\" />\n           </div>\n           <div className=\"Bottom-button Bottom-peopleSwipeButton\" onClick={go} data-to=\"people\">\n               <img id=\"peopleButton\" src={eventDes} alt=\"people\" />\n           </div>\n           <div className=\"Bottom-button Bottom-matchesButton\" onClick={go}\n                data-to=\"matches\">\n               <img id=\"matchesButton\" src={chatDes} alt=\"matches\" />\n           </div>\n        </div>\n    );\n    //Переключатель - две кнопки\n    /*<div className=\"BottomLeftButton\" onClick={go} data-to={left}><div></div></div>\n    <div className=\"BottomRightButton\" onClick={go} data-to={right}><div></div></div>*/\n}\n\nexport default Bottom;\n","const matchedPeople = [\n    {\n        key: \"1\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"2\",\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\n        firstName: \"Никита\",\n        lastName: \"Башкин\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Концерт Замая\"\n        ]\n    },\n    {\n        key: \"3\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"4\",\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\n        firstName: \"Никита\",\n        lastName: \"Башкин\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Концерт Замая\"\n        ]\n    },\n    {\n        key: \"5\",\n        imgLink: \"https://sun9-67.userapi.com/c824204/v824204590/aca4d/Xl3J1Oyq1EU.jpg\",\n        firstName: \"Никита\",\n        lastName: \"Башкин\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Концерт Замая\"\n        ]\n    },\n    {\n        key: \"6\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"7\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    },\n    {\n        key: \"8\",\n        imgLink: \"https://sun9-45.userapi.com/c854528/v854528685/d255a/ooAN1guMTAc.jpg\",\n        firstName: \"Данила\",\n        lastName: \"Сергачев\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Рок\"\n        ]\n    },\n    {\n        key: \"9\",\n        imgLink: \"https://sun9-44.userapi.com/c848536/v848536553/153b99/ypLiVUE1jZA.jpg\",\n        firstName: \"Илья\",\n        lastName: \"Курнаков\",\n        commonPlacesCount: 1,\n        commonPlaces: [\n            \"Треп\"\n        ]\n    }];\n\n\nexport default matchedPeople;\n","const matchedFriends = [\n    {\n        key: \"0\",\n        imgLink: \"https://sun9-17.userapi.com/c841322/v841322634/36d69/IrmwPwh6tlI.jpg\",\n        firstName: \"Арсений\",\n        lastName: \"Молодецкий\",\n        commonPlacesCount: 4,\n        commonPlaces: [\n            \"Элджей\", \"Тимати\", \"Группа Скриптонит\", \"AC/DC\"\n        ]\n    }];\n\nexport default matchedFriends;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from \"../Components/Header\";\nimport MatchedNavigationButtons from \"../Components/MatchedNavigationButtons\"\nimport MatchedScrollList from \"../Components/MatchedScrollList\";\nimport MatchedList from \"../Components/MatchedList\";\nimport Bottom from \"../Components/Bottom\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Matches.css';\n\nimport matchedPeople from \"../Components/ExportMatchedPeople\";\nimport matchedFriends from \"../Components/ExportMatchedFriends\";\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Matches = ({id, go}) => {\n    const [isSelectedFriends, setIsSelectedFriends] = useState(\"true\");\n\n    const onSwitchClick = (value) => {setIsSelectedFriends(value);}\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header text={id}/>\n            <div className=\"Head\">\n                <p>Новые совпадения</p>\n            </div>\n            <MatchedNavigationButtons\n                stateList = {isSelectedFriends}\n                stateRefresh = {onSwitchClick}\n                matchedList = {matchedPeople}\n                friendsList = {matchedFriends}/>\n            <div className=\"ScrollContainer\">\n                <MatchedScrollList\n                       list={isSelectedFriends\n                            ? matchedPeople\n                            : matchedFriends} />\n            </div>\n            <div className=\"Head\">\n                <p>Диалоги</p>\n            </div>\n            <div className=\"ListContainer\">\n                <MatchedList\n                       list = {isSelectedFriends\n                            ? matchedPeople\n                            : matchedFriends} />\n            </div>\n            <Bottom go={go}/>\n        </Panel>\n    );\n}\n\nexport default Matches;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/CardView.scss'\n\nconst CardView = ({horizontalShift, verticalShift, hasMargin, isUpperTouch, cardInfo,isTransition}) => {\n    let rotationCoefficient = isUpperTouch ? -1 : 1;\n    let contentStyle = {\n            \"transform\": \"rotate(\" + rotationCoefficient * horizontalShift / 15 + \"deg)\" +\n                \" translate(\"+ horizontalShift + \"px, \"+ verticalShift + \"px)\",\n            \"transition\" : isTransition ? \"0.2s\" : \"\"\n        };\n\n    if (hasMargin) {\n        contentStyle[\"margin-top\"] =  \"-80vmax\";\n    }\n\n    let labelOpacity = Math.min(Math.abs(horizontalShift) / 50,1);\n    let labelStyles = {\n        left :{\n            opacity: horizontalShift < 0 ? labelOpacity : 0\n        },\n        right :{\n            opacity: horizontalShift > 0 ? labelOpacity : 0\n        }};\n\n\n    return  (\n\n        <div className=\"Swipe-content\" style={contentStyle}>\n            <div className=\"Swipe-content-up\">\n                <div className=\"Swipe-content-up-labels\">\n                    <div style={labelStyles.right} className=\"Swipe-right-label choice-label\">\n                        Круто\n                    </div>\n                    <div style={labelStyles.left} className=\"Swipe-left-label choice-label\">\n                        Отстой\n                    </div>\n                </div>\n                <img className=\"Swipe-content-up-image\"\n                     src={cardInfo.images[0].image}/>\n            </div>\n            <div className=\"Swipe-content-down\">\n                <p id=\"Font-bold\"><b>{cardInfo.short_title}</b></p>\n                <p><b>4</b> апреля, суббота, <b>20:00</b></p>\n                <p><b>20</b> человек идёт - <b>1</b> друг</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default CardView;\n","import React, {Component} from 'react';\nimport './ComponentsStyle/Card.scss'\nimport CardView from \"./CardView\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentX: 0,\n            currentY: 0,\n            horizontalShift: 0,\n            verticalShift: 0,\n            isFirstTouch: true,\n            isSwiping: false,\n            height: 0\n        };\n        this.animatePick = this.animatePick.bind(this);\n        this.resetCard = this.resetCard.bind(this);\n    }\n\n    onTouch = (event) => {  \n        let touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++){\n            this.updateByTouch(touches[i])\n        }\n    };\n\n    onTouchStart = (event) => {\n        this.setState({\n            isFirstTouch: true,\n            isSwiping: true,\n            isTransition: false\n        });\n    };\n\n    onTouchEnd = (event) => {\n        if (Math.abs(this.state.horizontalShift) > 100){\n            let isLike= this.state.horizontalShift > 0;\n            this.animatePick();\n            let thisHandler = this;\n            setTimeout(() => {\n                thisHandler.resetCard(false);\n                thisHandler.props.onSwipeEnd(isLike);\n            },400);\n        } else {\n            this.resetCard(true);\n        }\n\n    };\n\n    updateByTouch = (touch) =>{\n        let previousX = this.state.currentX;\n        let previousY = this.state.currentY;\n\n        let updatedState = {\n            currentX: touch.clientX,\n            currentY: touch.clientY,\n        };\n\n        if (this.state.isFirstTouch){\n            updatedState.isUpperTouch = touch.clientY > 300;\n            updatedState.isFirstTouch = false;\n        } else {\n            updatedState.horizontalShift = this.state.horizontalShift + touch.clientX - previousX;\n            updatedState.verticalShift = this.state.verticalShift + touch.clientY - previousY;\n        }\n\n        this.setState(updatedState);\n    }\n\n    // Перемещает карту в сторону свайпа\n    animatePick = () => {\n        // Задаём сначала транзитивность, а затем перемещаем карточку по вектору движения\n        this.setState({\n            isTransition: true\n        });\n        this.setState({\n            horizontalShift: this.state.horizontalShift * 5,\n            verticalShift: this.state.verticalShift * 5,\n        });\n    };\n\n    // Возвращает карту в начальное положение\n    resetCard = (withTransition) => {\n        this.setState({\n            isTransition: withTransition,\n            isSwiping: false,\n            horizontalShift: 0,\n            verticalShift: 0,\n            currentX: 0,\n            currentY: 0,\n        });\n    };\n\n    render() {\n\n        return (\n            <div\n                className=\"Swipe-main\"\n                 onTouchMove={this.onTouch}\n                 onTouchEnd={this.onTouchEnd}\n                 onTouchStart={this.onTouchStart}>\n                <CardView\n                          cardInfo={this.props.cardInfo}\n                          isSwiping={this.state.isSwiping}\n                          horizontalShift={this.state.horizontalShift}\n                          verticalShift={this.state.verticalShift}\n                          isUpperTouch={this.state.isUpperTouch}\n                            isTransition={this.state.isTransition}/>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import config from \"./api_config\"\n\nexport async function setRate(userId, eventId, isLiked)  {\n    let url = config.url + \"/user/\" + userId + \"/events/ratings\";\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([\n            {\n                event_id: eventId,\n                is_liked: isLiked\n            }\n        ])\n    });\n}\n","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport CardView from \"./CardView\";\nimport {setRate} from \"../Api/Ratings\";\n\nclass Deck extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentIndex: 0,\n            swipesCountFromUpload: 0\n        };\n        this.onSwipeEnd = this.onSwipeEnd.bind(this);\n    }\n    \n     onSwipeEnd = async function(isLike) {\n        this.props.setRateBy(this.props.events[this.state.currentIndex].id, isLike);\n\n        // Uploading if nessecary\n        if (this.state.swipesCountFromUpload == 10){\n            this.props.loadEvents();\n            this.setState({\n                swipesCountFromUpload: 0\n            })\n        }\n\n        // Ticking index for next card and decreasing \n        this.setState({\n            currentIndex: this.state.currentIndex + 1,\n            swipesCountFromUpload: this.state.swipesCountFromUpload + 1\n        });\n\n        \n    };\n\n    render() {\n\n        let events = this.props.events;\n        let index = this.state.currentIndex;\n        return (\n\n                events.length !== 0 ?\n                <div>\n                    <Card cardInfo={events[index]} onSwipeEnd={this.onSwipeEnd}/>\n                    <CardView hasMargin={true} cardInfo={events[index+1]}/>\n                </div>\n                    : <div>\n\n                    </div>\n\n        );\n    }\n}\n\nexport default Deck;\n","import config from \"./api_config\"\n\nexport async function fetchEvents(userId)  {\n    let url = config.url + \"/user/\" + userId + \"/events/selection?category_id=1&category_id=6&is_personal=true\";\n    return fetch(url, {method: \"GET\",});\n}\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/Swipe.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\nimport { setRate } from '../Api/Ratings';\n\nconst Swipe = ({id, go, user}) => {\n    const [events, setEvents] = useState([]);\n\n    async function loadEvents(){\n        let eventsResponse = await fetchEvents(user.id);\n        let newEvents = await eventsResponse.json();\n        \n        setEvents(events.concat(newEvents.content));\n    }\n\n    async function setRateBy(eventId, isLike){\n        setRate(user.id, eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null) \n            loadEvents();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header text={id}/>\n            <Deck events={events} loadEvents={loadEvents} setRateBy={setRateBy}/>\n\n            <Bottom go={go}/>\n        </Panel>\n    );\n};\n\nexport default Swipe;\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport connect from '@vkontakte/vk-connect';\nimport './panelsStyle/Personal.css';\n\n\nconst Personal = ({id, go}) => {\n    const [fetchedUser, setUser] = useState(null);\n    const [token, setToken] = useState(null);\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n        async function fetchData() {\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\n            setUser(user);\n        }\n\n        async function fetchToken(){\n            let tokenObject = await connect.sendPromise(\"VKWebAppGetAuthToken\", {\n                \"app_id\": 7197573, \"scope\": \"friends\"});\n            setToken(tokenObject.access_token);\n        }\n        fetchData();\n        fetchToken();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header text={id}></Header>\n            <div className=\"PersonalContent\">\n                <div className=\"PersonalBlock\">\n                       {fetchedUser &&\n                        <div className=\"PersonalData\">\n                           <img src={fetchedUser.photo_200 ? fetchedUser.photo_200 : null} alt=\"Person\"/>\n                           <p>\n                           {fetchedUser.first_name ? fetchedUser.first_name : \"\"}\n                           {fetchedUser.last_name ? (\" \" + fetchedUser.last_name) : \"\" }\n                           </p>\n                            {\n                                token &&\n                                <p>\n                                    {token}\n                                </p>\n                            }\n                        </div>\n                        }\n                </div>\n            </div>\n            <Bottom go={go}/>\n        </Panel>\n    );\n}\n\nexport default Personal;\n","import React from 'react';\n\nimport '../panels/panelsStyle/Grid.css';\n\nconst GridEventList = ({data}) => {\n    return data.map (\n        product =>\n            <div className=\"Grid-eventCell\"\n               data-name={product.name ? product.name : \"unknown\"}>\n                <img src={product.images[0].image ? product.images[0].image : null}/>\n            </div>\n    );\n}\n\nexport default GridEventList;\n","import React, { useState, useEffect } from 'react';\n\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\n\nimport GridEventList from \"../Components/GridEventList\";\n\nimport '../ResetBrowser.css';\nimport './panelsStyle/Grid.css';\n\nimport {fetchEvents} from \"../Api/Events\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\n\nconst Grid = ({id, go, user}) => {\n\n    const [dataEvents, setDataEvents] = useState([]);\n\n    const uploadData = e => {\n        let elem = e.currentTarget;\n        if (elem.scrollHeight - elem.clientHeight*2 <= elem.scrollTop) {\n            try {\n                loadEvents();\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n\n\n    async function loadEvents(){\n        let eventsResponse = await fetchEvents(user.id);\n        let newEvents = await eventsResponse.json();\n\n        setDataEvents(dataEvents.concat(newEvents.content));\n    }\n    useEffect(() => {\n        if (user != null)\n            loadEvents();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n    }, []);\n\n    return (\n        <Panel id={id}>\n            <Header text={id}/>\n\n                <div className=\"Grid-eventList\" onScroll={uploadData}>\n                    {dataEvents &&\n                        <GridEventList data={dataEvents}/> }\n                </div>\n\n            <Bottom go={go}/>\n        </Panel>\n    );\n}\n\nexport default Grid;\n","import React, { useState, useEffect } from 'react';\nimport Header from \"../Components/Header\";\nimport Bottom from \"../Components/Bottom\";\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport '../ResetBrowser.css';\nimport './panelsStyle/People.scss';\nimport Deck from \"../Components/Deck\";\nimport {fetchEvents} from \"../Api/Events\";\nimport { setRate } from '../Api/Ratings';\n\nconst People = ({id, go, user}) => {\n    const [events, setEvents] = useState([]);\n\n    async function loadEvents(){\n        let eventsResponse = await fetchEvents(user.id);\n        let newEvents = await eventsResponse.json();\n        \n        setEvents(events.concat(newEvents.content));\n    }\n\n    async function setRateBy(eventId, isLike){\n        setRate(user.id, eventId, isLike );\n    }\n\n    // При получении user id, получаем ивенты\n    useEffect(() => {\n        if (user != null) \n            loadEvents();\n    }, [user]);\n\n\n    useEffect(() => {\n        async function refreshHeaderVK() {\n            document.getElementById(id).children[0].style.paddingTop = 0;\n        }\n        refreshHeaderVK();\n    }, []);\n\n\n    return (\n        <Panel id={id}>\n            <Header text={id}/>\n            <Deck events={events} loadEvents={loadEvents} setRateBy={setRateBy}/>\n\n            <Bottom go={go}/>\n        </Panel>\n    );\n};\n\nexport default People;\n","import config from \"./api_config\"\n\nexport async function authorize(userId)  {\n    let url = `${config.url}/user/identify?user_id=${userId}`;\n    return fetch(url, {method: \"GET\",});\n}\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport Personal from './panels/Personal';\nimport Swipe from './panels/Swipe';\nimport Matches from './panels/Matches';\nimport Grid from './panels/Grid';\nimport People from './panels/People';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './ResetBrowser.css';\nimport {authorize} from \"./Api/Auth\";\nimport config from \"./Api/api_config.json\";\n\nconst AppCulter = () => {\n    const [activePanel, setActivePanel] = useState('swipe');\n    const [user, setUser] = useState(null);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            let fetchedUser = config.is_dev ?\n                {'id' : config.user_id} :\n                await connect.sendPromise('VKWebAppGetUserInfo');\n\n            await authorize(fetchedUser.id);\n            setUser(fetchedUser);\n        }\n        fetchData();\n\n    }, []);\n\n\n    return (\n        <View activePanel={activePanel}>\n            <Personal id='personal' go={go} />\n            <Grid user={user} id=\"grid\" go={go} />\n            <Swipe user={user} id='swipe' go={go} />\n            <People user={user} id='people' go={go} />\n            <Matches id='matches' go={go} />\n        </View>\n    );\n}\n\nexport default AppCulter;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\n//import App from './App';\n//import Test from './Test';\nimport Matches from './panels/Matches';\nimport Swipe from './panels/Swipe';\n// import registerServiceWorker from './sw';\nimport AppCulter from './AppCulter';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<AppCulter />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/chatGrey.49b6c726.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventGrey.89b02bab.svg\";","module.exports = __webpack_public_path__ + \"static/media/gridGrey.e698b3c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/swipeGrey.451737d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/userGrey.7612f005.svg\";"],"sourceRoot":""}